digraph "llvm::MCSymbol"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape="box"];
  rankdir="LR";
  Node1 [label="llvm::MCSymbol",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="MCSymbol - Instances of this class represent a symbol name in the MC file, and MCSymbols are created ..."];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AbsolutePseudoFragment" ,fontname="Helvetica"];
  Node2 [label="llvm::MCFragment",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MCFragment.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="llvm::ilist_node_with\l_parent\< MCFragment,\l MCSection \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__with__parent.html",tooltip=" "];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="llvm::ilist_node\< T,\l Options \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="llvm::ilist_node_impl\l\< ilist_detail::compute\l_node_options\< T, Options...\l \>::type \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip=" "];
  Node6 -> Node5 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="OptionsT::node_base_type",height=0.2,width=0.4,color="black",tooltip=" "];
  Node7 -> Node5 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< ilist_detail::compute\l_node_options\< T, Options...\l \>::type \>" ,fontname="Helvetica"];
  Node7 [label="llvm::ilist_node_impl\l\< OptionsT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip="Implementation for an ilist node."];
  Node6 -> Node7 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 -> Node3 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< MCFragment, MCSection \>" ,fontname="Helvetica"];
  Node8 [label="llvm::ilist_node_with\l_parent\< NodeTy, ParentTy,\l Options \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__with__parent.html",tooltip="An ilist node that can access its parent list."];
  Node9 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="llvm::ilist_node\< NodeTy,\l Options... \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node10 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="llvm::ilist_node_impl\l\< OptionsT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip="Implementation for an ilist node."];
  Node6 -> Node10 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 -> Node9 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< NodeTy, Options... \>" ,fontname="Helvetica"];
  Node11 [label="llvm::ilist_node\< T,\l Options \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node5 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" HasInstructions" ,fontname="Helvetica"];
  Node12 [label="bool",height=0.2,width=0.4,color="black",URL="$classbool.html",tooltip=" "];
  Node13 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" FragmentAndHasName" ,fontname="Helvetica"];
  Node13 [label="llvm::PointerIntPair\l\< llvm::MCFragment *, 1 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PointerIntPair.html",tooltip=" "];
  Node14 -> Node13 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::MCFragment\l *, 1 \>" ,fontname="Helvetica"];
  Node14 [label="llvm::PointerIntPair\l\< PointerTy, IntBits,\l IntType, PtrTraits, Info \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PointerIntPair.html",tooltip="PointerIntPair - This class implements a pair of a pointer and small integer."];
  Node15 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CommonAlignLog2\nIsExternal\nIsPrivateExtern\nIsRedefinable\nIsRegistered\nIsTemporary\nIsUsed\nIsUsedInReloc\nKind\nSymbolContents\n..." ,fontname="Helvetica"];
  Node15 [label="unsigned",height=0.2,width=0.4,color="black",URL="$classunsigned.html",tooltip=" "];
  Node16 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Flags\nIndex" ,fontname="Helvetica"];
  Node16 [label="uint32_t",height=0.2,width=0.4,color="black",URL="$classuint32__t.html",tooltip=" "];
  Node17 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AlignmentPadding\nCommonSize\nOffset" ,fontname="Helvetica"];
  Node17 [label="uint64_t",height=0.2,width=0.4,color="black",tooltip=" "];
  Node18 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Value" ,fontname="Helvetica"];
  Node18 [label="llvm::MCExpr",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MCExpr.html",tooltip="Base class for the full range of assembler expressions which are needed for parsing."];
  Node19 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" @286" ,fontname="Helvetica"];
  Node19 [label="anonymous:@286",height=0.2,width=0.4,color="black",tooltip=" "];
}
