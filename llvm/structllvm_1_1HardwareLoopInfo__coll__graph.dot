digraph "llvm::HardwareLoopInfo"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape="box"];
  rankdir="LR";
  Node1 [label="llvm::HardwareLoopInfo",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Attributes of a target dependent hardware loop."];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" L" ,fontname="Helvetica"];
  Node2 [label="llvm::Loop",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Loop.html",tooltip="Represents a single loop in the control flow graph."];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="llvm::LoopBase\< BasicBlock,\l Loop \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LoopBase.html",tooltip=" "];
  Node4 -> Node3 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< BasicBlock, Loop \>" ,fontname="Helvetica"];
  Node4 [label="llvm::LoopBase\< BlockT,\l LoopT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LoopBase.html",tooltip="Instances of this class are used to represent loops that are detected in the flow graph."];
  Node5 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ExitBlock" ,fontname="Helvetica"];
  Node5 [label="llvm::BasicBlock",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BasicBlock.html",tooltip="LLVM Basic Block Representation."];
  Node6 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="llvm::Value",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Value.html",tooltip="LLVM Value Representation."];
  Node7 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" HasDescriptor\nHasHungOffUses\nHasName\nIsUsedByMD\nMaxAlignmentExponent\nMaximumAlignment\nNumUserOperands\nSubclassOptionalData" ,fontname="Helvetica"];
  Node7 [label="unsigned",height=0.2,width=0.4,color="black",URL="$classunsigned.html",tooltip=" "];
  Node8 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="llvm::ilist_node_with\l_parent\< BasicBlock,\l Function \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__with__parent.html",tooltip=" "];
  Node9 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="llvm::ilist_node\< T,\l Options \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node10 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="llvm::ilist_node_impl\l\< ilist_detail::compute\l_node_options\< T, Options...\l \>::type \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip=" "];
  Node11 -> Node10 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="OptionsT::node_base_type",height=0.2,width=0.4,color="black",tooltip=" "];
  Node12 -> Node10 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< ilist_detail::compute\l_node_options\< T, Options...\l \>::type \>" ,fontname="Helvetica"];
  Node12 [label="llvm::ilist_node_impl\l\< OptionsT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip="Implementation for an ilist node."];
  Node11 -> Node12 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 -> Node8 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< BasicBlock, Function \>" ,fontname="Helvetica"];
  Node13 [label="llvm::ilist_node_with\l_parent\< NodeTy, ParentTy,\l Options \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__with__parent.html",tooltip="An ilist node that can access its parent list."];
  Node14 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="llvm::ilist_node\< NodeTy,\l Options... \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node15 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="llvm::ilist_node_impl\l\< OptionsT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip="Implementation for an ilist node."];
  Node11 -> Node15 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 -> Node14 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< NodeTy, Options... \>" ,fontname="Helvetica"];
  Node16 [label="llvm::ilist_node\< T,\l Options \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node10 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ExitBranch" ,fontname="Helvetica"];
  Node17 [label="llvm::BranchInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BranchInst.html",tooltip="Conditional or Unconditional Branch instruction."];
  Node18 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="llvm::Instruction",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Instruction.html",tooltip=" "];
  Node19 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="llvm::User",height=0.2,width=0.4,color="black",URL="$classllvm_1_1User.html",tooltip=" "];
  Node6 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="llvm::ilist_node_with\l_parent\< Instruction,\l BasicBlock \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__with__parent.html",tooltip=" "];
  Node21 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="llvm::ilist_node\< T,\l Options \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node10 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 -> Node20 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< Instruction, BasicBlock \>" ,fontname="Helvetica"];
  Node22 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ExitCount" ,fontname="Helvetica"];
  Node22 [label="llvm::SCEV",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SCEV.html",tooltip="This class represents an analyzed expression in the program."];
  Node23 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="FoldingSetNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1FoldingSetBase_1_1Node.html",tooltip="Node - This class is used to maintain the singly linked bucket list in a folding set."];
  Node7 -> Node22 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ExpressionSize\nSubclassData" ,fontname="Helvetica"];
  Node24 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CountType" ,fontname="Helvetica"];
  Node24 [label="llvm::IntegerType",height=0.2,width=0.4,color="black",URL="$classllvm_1_1IntegerType.html",tooltip="Class to represent integer types."];
  Node25 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="llvm::Type",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Type.html",tooltip="The instances of the Type class are immutable: once they are created, they are never changed."];
  Node7 -> Node25 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NumContainedTys" ,fontname="Helvetica"];
  Node25 -> Node25 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ContainedTys" ,fontname="Helvetica"];
  Node6 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LoopDecrement" ,fontname="Helvetica"];
  Node26 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CounterInReg\nIsNestingLegal\nPerformEntryTest" ,fontname="Helvetica"];
  Node26 [label="bool",height=0.2,width=0.4,color="black",URL="$classbool.html",tooltip=" "];
}
