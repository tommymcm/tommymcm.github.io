digraph "llvm::gvn::AvailableValueInBlock"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape="box"];
  rankdir="LR";
  Node1 [label="llvm::gvn::AvailableValue\lInBlock",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Represents an AvailableValue which can be rematerialized at the end of the associated BasicBlock."];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BB" ,fontname="Helvetica"];
  Node2 [label="llvm::BasicBlock",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BasicBlock.html",tooltip="LLVM Basic Block Representation."];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="llvm::Value",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Value.html",tooltip="LLVM Value Representation."];
  Node4 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" HasDescriptor\nHasHungOffUses\nHasName\nIsUsedByMD\nMaxAlignmentExponent\nMaximumAlignment\nNumUserOperands\nSubclassOptionalData" ,fontname="Helvetica"];
  Node4 [label="unsigned",height=0.2,width=0.4,color="black",URL="$classunsigned.html",tooltip=" "];
  Node5 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="llvm::ilist_node_with\l_parent\< BasicBlock,\l Function \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__with__parent.html",tooltip=" "];
  Node6 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="llvm::ilist_node\< T,\l Options \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node7 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="llvm::ilist_node_impl\l\< ilist_detail::compute\l_node_options\< T, Options...\l \>::type \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip=" "];
  Node8 -> Node7 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="OptionsT::node_base_type",height=0.2,width=0.4,color="black",tooltip=" "];
  Node9 -> Node7 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< ilist_detail::compute\l_node_options\< T, Options...\l \>::type \>" ,fontname="Helvetica"];
  Node9 [label="llvm::ilist_node_impl\l\< OptionsT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip="Implementation for an ilist node."];
  Node8 -> Node9 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 -> Node5 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< BasicBlock, Function \>" ,fontname="Helvetica"];
  Node10 [label="llvm::ilist_node_with\l_parent\< NodeTy, ParentTy,\l Options \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__with__parent.html",tooltip="An ilist node that can access its parent list."];
  Node11 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="llvm::ilist_node\< NodeTy,\l Options... \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node12 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="llvm::ilist_node_impl\l\< OptionsT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip="Implementation for an ilist node."];
  Node8 -> Node12 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 -> Node11 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< NodeTy, Options... \>" ,fontname="Helvetica"];
  Node13 [label="llvm::ilist_node\< T,\l Options \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node7 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AV" ,fontname="Helvetica"];
  Node14 [label="llvm::gvn::AvailableValue",height=0.2,width=0.4,color="black",URL="$structllvm_1_1gvn_1_1AvailableValue.html",tooltip="Represents a particular available value that we know how to materialize."];
  Node15 -> Node14 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Val" ,fontname="Helvetica"];
  Node15 [label="llvm::PointerIntPair\l\< llvm::Value *, 2, ValType \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PointerIntPair.html",tooltip=" "];
  Node16 -> Node15 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::Value *, 2,\l ValType \>" ,fontname="Helvetica"];
  Node16 [label="llvm::PointerIntPair\l\< PointerTy, IntBits,\l IntType, PtrTraits, Info \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PointerIntPair.html",tooltip="PointerIntPair - This class implements a pair of a pointer and small integer."];
  Node4 -> Node14 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Offset" ,fontname="Helvetica"];
}
