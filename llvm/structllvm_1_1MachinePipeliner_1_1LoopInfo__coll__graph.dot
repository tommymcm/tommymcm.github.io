digraph "llvm::MachinePipeliner::LoopInfo"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape="box"];
  rankdir="LR";
  Node1 [label="llvm::MachinePipeliner\l::LoopInfo",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Cache the target analysis information about the loop."];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" FBB\nTBB" ,fontname="Helvetica"];
  Node2 [label="llvm::MachineBasicBlock",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineBasicBlock.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="llvm::ilist_node_with\l_parent\< MachineBasicBlock,\l MachineFunction \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__with__parent.html",tooltip=" "];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="llvm::ilist_node\< T,\l Options \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="llvm::ilist_node_impl\l\< ilist_detail::compute\l_node_options\< T, Options...\l \>::type \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip=" "];
  Node6 -> Node5 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="OptionsT::node_base_type",height=0.2,width=0.4,color="black",tooltip=" "];
  Node7 -> Node5 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< ilist_detail::compute\l_node_options\< T, Options...\l \>::type \>" ,fontname="Helvetica"];
  Node7 [label="llvm::ilist_node_impl\l\< OptionsT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip="Implementation for an ilist node."];
  Node6 -> Node7 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 -> Node3 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< MachineBasicBlock,\l MachineFunction \>" ,fontname="Helvetica"];
  Node8 [label="llvm::ilist_node_with\l_parent\< NodeTy, ParentTy,\l Options \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__with__parent.html",tooltip="An ilist node that can access its parent list."];
  Node9 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="llvm::ilist_node\< NodeTy,\l Options... \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node10 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="llvm::ilist_node_impl\l\< OptionsT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip="Implementation for an ilist node."];
  Node6 -> Node10 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 -> Node9 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< NodeTy, Options... \>" ,fontname="Helvetica"];
  Node11 [label="llvm::ilist_node\< T,\l Options \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node5 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BrCond" ,fontname="Helvetica"];
  Node12 [label="llvm::SmallVector\<\l llvm::MachineOperand, 4 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node13 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="llvm::SmallVectorImpl\< T \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip="This class consists of common code factored out of the SmallVector class to reduce code duplication b..."];
  Node14 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="llvm::SmallVectorTemplate\lBase\< T, bool \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorTemplateBase.html",tooltip="SmallVectorTemplateBase<TriviallyCopyable = false> - This is where we put method implementations that..."];
  Node15 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="llvm::SmallVectorTemplate\lCommon\< T, typename \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorTemplateCommon.html",tooltip="This is the part of SmallVectorTemplateBase which does not depend on whether the type T is a POD."];
  Node16 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="llvm::SmallVectorBase",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorBase.html",tooltip="This is all the non-templated stuff common to all SmallVectors."];
  Node17 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BeginX" ,fontname="Helvetica"];
  Node17 [label="void *",height=0.2,width=0.4,color="black",tooltip=" "];
  Node18 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Capacity\nSize" ,fontname="Helvetica"];
  Node18 [label="unsigned",height=0.2,width=0.4,color="black",URL="$classunsigned.html",tooltip=" "];
  Node19 -> Node12 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="llvm::SmallVectorStorage\l\< T, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip="Storage for the SmallVector elements."];
  Node20 -> Node19 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node20 [label="llvm::AlignedCharArrayUnion\< T \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1AlignedCharArrayUnion.html",tooltip=" "];
  Node21 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="llvm::AlignedCharArray\l\< Alignment, Size \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1AlignedCharArray.html",tooltip="Helper for building an aligned character array type."];
  Node22 -> Node21 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" buffer" ,fontname="Helvetica"];
  Node22 [label="char",height=0.2,width=0.4,color="black",URL="$classchar.html",tooltip=" "];
  Node23 -> Node20 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< T \>" ,fontname="Helvetica"];
  Node23 [label="llvm::AlignedCharArrayUnion\l\< T1, T2, T3, T4, T5, T6,\l T7, T8, T9, T10 \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1AlignedCharArrayUnion.html",tooltip="This union template exposes a suitably aligned and sized character array member which can hold elemen..."];
  Node24 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="llvm::AlignedCharArray\l\< Alignment, Size \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1AlignedCharArray.html",tooltip="Helper for building an aligned character array type."];
  Node22 -> Node24 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" buffer" ,fontname="Helvetica"];
  Node25 -> Node12 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::MachineOperand, 4 \>" ,fontname="Helvetica"];
  Node25 [label="llvm::SmallVector\<\l T, N \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip="This is a 'vector' (really, a variable-sized array), optimized for the case when the array is small."];
  Node26 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="llvm::SmallVectorImpl\< T \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip="This class consists of common code factored out of the SmallVector class to reduce code duplication b..."];
  Node14 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 -> Node25 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="llvm::SmallVectorStorage\l\< T, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip="Storage for the SmallVector elements."];
  Node20 -> Node27 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node28 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LoopCompare\nLoopInductionVar" ,fontname="Helvetica"];
  Node28 [label="llvm::MachineInstr",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineInstr.html",tooltip="Representation of each machine instruction."];
  Node29 -> Node28 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="llvm::ilist_node_with\l_parent\< MachineInstr,\l MachineBasicBlock, ilist\l_sentinel_tracking\< true \> \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__with__parent.html",tooltip=" "];
  Node30 -> Node29 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 [label="llvm::ilist_node\< T,\l Options \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node5 -> Node30 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 -> Node29 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< MachineInstr, MachineBasic\lBlock, ilist_sentinel_tracking\l\< true \> \>" ,fontname="Helvetica"];
}
