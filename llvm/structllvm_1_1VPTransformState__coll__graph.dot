digraph "llvm::VPTransformState"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape="box"];
  rankdir="LR";
  Node1 [label="llvm::VPTransformState",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="VPTransformState holds information passed down when \"executing\" a VPlan, needed for generating the ou..."];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" UF\nVF" ,fontname="Helvetica"];
  Node2 [label="unsigned",height=0.2,width=0.4,color="black",URL="$classunsigned.html",tooltip=" "];
  Node3 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Instance" ,fontname="Helvetica"];
  Node3 [label="llvm::Optional\< llvm\l::VPIteration \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Optional.html",tooltip=" "];
  Node4 -> Node3 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::VPIteration \>" ,fontname="Helvetica"];
  Node4 [label="llvm::Optional\< T \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Optional.html",tooltip=" "];
  Node5 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Data" ,fontname="Helvetica"];
  Node5 [label="llvm::VPTransformState\l::DataState",height=0.2,width=0.4,color="black",URL="$structllvm_1_1VPTransformState_1_1DataState.html",tooltip=" "];
  Node6 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" PerPartOutput" ,fontname="Helvetica"];
  Node6 [label="llvm::DenseMap\< llvm\l::VPValue *, llvm::SmallVector \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DenseMap.html",tooltip=" "];
  Node7 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="llvm::DenseMapBase\l\< DerivedT, KeyT, ValueT,\l KeyInfoT, BucketT \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1DenseMapBase.html",tooltip=" "];
  Node9 -> Node6 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::VPValue *,\l llvm::SmallVector \>" ,fontname="Helvetica"];
  Node9 [label="llvm::DenseMap\< KeyT,\l ValueT, KeyInfoT, BucketT \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1DenseMap.html",tooltip=" "];
  Node11 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CFG" ,fontname="Helvetica"];
  Node11 [label="llvm::VPTransformState\l::CFGState",height=0.2,width=0.4,color="black",URL="$structllvm_1_1VPTransformState_1_1CFGState.html",tooltip="Hold state information used when constructing the CFG of the output IR, traversing the VPBasicBlocks ..."];
  Node12 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" PrevVPBB" ,fontname="Helvetica"];
  Node12 [label="llvm::VPBasicBlock",height=0.2,width=0.4,color="black",URL="$classllvm_1_1VPBasicBlock.html",tooltip="VPBasicBlock serves as the leaf of the Hierarchical Control-Flow Graph."];
  Node13 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="llvm::VPBlockBase",height=0.2,width=0.4,color="black",URL="$classllvm_1_1VPBlockBase.html",tooltip="VPBlockBase is the building block of the Hierarchical Control-Flow Graph."];
  Node14 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LastBB\nPrevBB" ,fontname="Helvetica"];
  Node14 [label="llvm::BasicBlock",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BasicBlock.html",tooltip="LLVM Basic Block Representation."];
  Node15 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="llvm::Value",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Value.html",tooltip="LLVM Value Representation."];
  Node2 -> Node15 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" HasDescriptor\nHasHungOffUses\nHasName\nIsUsedByMD\nMaxAlignmentExponent\nMaximumAlignment\nNumUserOperands\nSubclassOptionalData" ,fontname="Helvetica"];
  Node16 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="llvm::ilist_node_with\l_parent\< BasicBlock,\l Function \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1ilist__node__with__parent.html",tooltip=" "];
  Node25 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" VPBB2IRBB" ,fontname="Helvetica"];
  Node25 [label="llvm::SmallDenseMap\l\< llvm::VPBasicBlock\l *, llvm::BasicBlock * \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallDenseMap.html",tooltip=" "];
  Node26 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="llvm::DenseMapBase\l\< DerivedT, KeyT, ValueT,\l KeyInfoT, BucketT \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1DenseMapBase.html",tooltip=" "];
  Node27 -> Node25 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::VPBasicBlock\l *, llvm::BasicBlock * \>" ,fontname="Helvetica"];
  Node27 [label="llvm::SmallDenseMap\l\< KeyT, ValueT, InlineBuckets,\l KeyInfoT, BucketT \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SmallDenseMap.html",tooltip=" "];
  Node29 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" VPBBsToFix" ,fontname="Helvetica"];
  Node29 [label="llvm::SmallVector\<\l llvm::VPBasicBlock\l *, 8 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node30 -> Node29 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 [label="llvm::SmallVectorImpl\< T \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SmallVectorImpl.html",tooltip="This class consists of common code factored out of the SmallVector class to reduce code duplication b..."];
  Node35 -> Node29 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node35 [label="llvm::SmallVectorStorage\l\< T, N \>",height=0.2,width=0.4,color="red",URL="$structllvm_1_1SmallVectorStorage.html",tooltip="Storage for the SmallVector elements."];
  Node41 -> Node29 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::VPBasicBlock\l *, 8 \>" ,fontname="Helvetica"];
  Node41 [label="llvm::SmallVector\<\l T, N \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SmallVector.html",tooltip="This is a 'vector' (really, a variable-sized array), optimized for the case when the array is small."];
  Node44 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LI" ,fontname="Helvetica"];
  Node44 [label="llvm::LoopInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LoopInfo.html",tooltip=" "];
  Node45 -> Node44 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node45 [label="llvm::LoopInfoBase\l\< BasicBlock, Loop \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LoopInfoBase.html",tooltip=" "];
  Node46 -> Node45 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< BasicBlock, Loop \>" ,fontname="Helvetica"];
  Node46 [label="llvm::LoopInfoBase\l\< BlockT, LoopT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LoopInfoBase.html",tooltip="This class builds and contains all of the top-level loop structures in the specified function."];
  Node47 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DT" ,fontname="Helvetica"];
  Node47 [label="llvm::DominatorTree",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DominatorTree.html",tooltip="Concrete subclass of DominatorTreeBase that is used to compute a normal dominator tree."];
  Node48 -> Node47 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node48 [label="llvm::DominatorTreeBase\l\< BasicBlock, false \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1DominatorTreeBase.html",tooltip=" "];
  Node49 -> Node48 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DFSInfoValid\nIsPostDominator" ,fontname="Helvetica"];
  Node49 [label="bool",height=0.2,width=0.4,color="black",URL="$classbool.html",tooltip=" "];
  Node2 -> Node48 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SlowQueries" ,fontname="Helvetica"];
  Node67 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Builder" ,fontname="Helvetica"];
  Node67 [label="llvm::IRBuilder\< T,\l Inserter \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1IRBuilder.html",tooltip="This provides a uniform API for creating instructions and inserting them into a basic block: either a..."];
  Node68 -> Node67 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node68 [label="llvm::IRBuilderBase",height=0.2,width=0.4,color="red",URL="$classllvm_1_1IRBuilderBase.html",tooltip="Common base class shared among various IRBuilders."];
  Node14 -> Node68 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BB" ,fontname="Helvetica"];
  Node49 -> Node68 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" IsFPConstrained" ,fontname="Helvetica"];
  Node175 -> Node67 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node175 [label="llvm::IRBuilderDefaultInserter",height=0.2,width=0.4,color="black",URL="$classllvm_1_1IRBuilderDefaultInserter.html",tooltip="This provides the default implementation of the IRBuilder 'InsertHelper' method that is called whenev..."];
  Node176 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ValueMap" ,fontname="Helvetica"];
  Node176 [label="llvm::VectorizerValueMap",height=0.2,width=0.4,color="black",URL="$structllvm_1_1VectorizerValueMap.html",tooltip="This is a helper struct for maintaining vectorization state."];
  Node177 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" VPValue2Value" ,fontname="Helvetica"];
  Node177 [label="llvm::DenseMap\< VPValue\l *, Value * \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DenseMap.html",tooltip=" "];
  Node178 -> Node177 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node178 [label="llvm::DenseMapBase\l\< DerivedT, KeyT, ValueT,\l KeyInfoT, BucketT \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1DenseMapBase.html",tooltip=" "];
  Node9 -> Node177 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< VPValue *, Value * \>" ,fontname="Helvetica"];
  Node15 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TripCount" ,fontname="Helvetica"];
  Node179 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ILV" ,fontname="Helvetica"];
  Node179 [label="llvm::InnerLoopVectorizer",height=0.2,width=0.4,color="black",URL="$classllvm_1_1InnerLoopVectorizer.html",tooltip="InnerLoopVectorizer vectorizes loops which contain only one basic block to a specified vectorization ..."];
  Node180 -> Node179 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" OrigLoop" ,fontname="Helvetica"];
  Node180 [label="llvm::Loop",height=0.2,width=0.4,color="red",URL="$classllvm_1_1Loop.html",tooltip="Represents a single loop in the control flow graph."];
  Node183 -> Node179 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" PSE" ,fontname="Helvetica"];
  Node183 [label="llvm::PredicatedScalarEvolution",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PredicatedScalarEvolution.html",tooltip="An interface layer with SCEV used to manage how we see SCEV expressions for values in the context of ..."];
  Node44 -> Node179 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LI" ,fontname="Helvetica"];
  Node47 -> Node179 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DT" ,fontname="Helvetica"];
  Node184 -> Node179 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AA" ,fontname="Helvetica"];
  Node184 [label="llvm::AAResults",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AAResults.html",tooltip=" "];
  Node185 -> Node179 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TLI" ,fontname="Helvetica"];
  Node185 [label="llvm::TargetLibraryInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1TargetLibraryInfo.html",tooltip="Provides information about what library functions are available for the current target."];
  Node186 -> Node179 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TTI" ,fontname="Helvetica"];
  Node186 [label="llvm::TargetTransformInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1TargetTransformInfo.html",tooltip="This pass provides access to the codegen interfaces that are needed for IR-level transformations."];
  Node187 -> Node179 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AC" ,fontname="Helvetica"];
  Node187 [label="llvm::AssumptionCache",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AssumptionCache.html",tooltip="A cache of @llvm.assume calls within a function."];
  Node188 -> Node179 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ORE" ,fontname="Helvetica"];
  Node188 [label="llvm::OptimizationRemark\lEmitter",height=0.2,width=0.4,color="black",URL="$classllvm_1_1OptimizationRemarkEmitter.html",tooltip="The optimization diagnostic interface."];
  Node189 -> Node179 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LVer" ,fontname="Helvetica"];
  Node189 [label="unique_ptr\< llvm::LoopVersioning \>",height=0.2,width=0.4,color="black",tooltip=" "];
  Node2 -> Node179 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" UF\nVF" ,fontname="Helvetica"];
  Node67 -> Node179 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Builder" ,fontname="Helvetica"];
  Node14 -> Node179 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LoopExitBlock\nLoopMiddleBlock\nLoopScalarBody\nLoopScalarPreHeader\nLoopVectorBody\nLoopVectorPreHeader" ,fontname="Helvetica"];
  Node190 -> Node179 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LoopBypassBlocks" ,fontname="Helvetica"];
  Node190 [label="llvm::SmallVector\<\l llvm::BasicBlock *, 4 \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node41 -> Node190 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::BasicBlock\l *, 4 \>" ,fontname="Helvetica"];
  Node193 -> Node179 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Induction\nOldInduction" ,fontname="Helvetica"];
  Node193 [label="llvm::PHINode",height=0.2,width=0.4,color="red",URL="$classllvm_1_1PHINode.html",tooltip=" "];
  Node176 -> Node179 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" VectorLoopValueMap" ,fontname="Helvetica"];
  Node197 -> Node179 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" PredicatedInstructions" ,fontname="Helvetica"];
  Node197 [label="llvm::SmallVector\<\l llvm::Instruction *, 4 \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node41 -> Node197 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::Instruction\l *, 4 \>" ,fontname="Helvetica"];
  Node15 -> Node179 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TripCount\nVectorTripCount" ,fontname="Helvetica"];
  Node200 -> Node179 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Legal" ,fontname="Helvetica"];
  Node200 [label="llvm::LoopVectorizationLegality",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LoopVectorizationLegality.html",tooltip="LoopVectorizationLegality checks if it is legal to vectorize a loop, and to what vectorization factor..."];
  Node201 -> Node179 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Cost" ,fontname="Helvetica"];
  Node201 [label="llvm::LoopVectorizationCost\lModel",height=0.2,width=0.4,color="red",URL="$classllvm_1_1LoopVectorizationCostModel.html",tooltip="LoopVectorizationCostModel - estimates the expected speedups due to vectorization."];
  Node180 -> Node201 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TheLoop" ,fontname="Helvetica"];
  Node183 -> Node201 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" PSE" ,fontname="Helvetica"];
  Node44 -> Node201 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LI" ,fontname="Helvetica"];
  Node200 -> Node201 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Legal" ,fontname="Helvetica"];
  Node186 -> Node201 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TTI" ,fontname="Helvetica"];
  Node185 -> Node201 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TLI" ,fontname="Helvetica"];
  Node187 -> Node201 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AC" ,fontname="Helvetica"];
  Node188 -> Node201 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ORE" ,fontname="Helvetica"];
  Node49 -> Node179 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AddedSafetyChecks" ,fontname="Helvetica"];
  Node215 -> Node179 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" IVEndValues" ,fontname="Helvetica"];
  Node215 [label="llvm::DenseMap\< llvm\l::PHINode *, llvm::Value * \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1DenseMap.html",tooltip=" "];
  Node9 -> Node215 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::PHINode *,\l llvm::Value * \>" ,fontname="Helvetica"];
  Node217 -> Node179 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" OrigPHIsToFix" ,fontname="Helvetica"];
  Node217 [label="llvm::SmallVector\<\l llvm::PHINode *, 8 \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node41 -> Node217 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::PHINode *, 8 \>" ,fontname="Helvetica"];
  Node220 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Callback" ,fontname="Helvetica"];
  Node220 [label="llvm::VPCallback",height=0.2,width=0.4,color="black",URL="$structllvm_1_1VPCallback.html",tooltip="This class is used to enable the VPlan to invoke a method of ILV."];
}
