digraph "llvm::InnerLoopUnroller"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape="box"];
  rankdir="LR";
  Node1 [label="llvm::InnerLoopUnroller",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="llvm::InnerLoopVectorizer",height=0.2,width=0.4,color="black",URL="$classllvm_1_1InnerLoopVectorizer.html",tooltip="InnerLoopVectorizer vectorizes loops which contain only one basic block to a specified vectorization ..."];
  Node3 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" OrigLoop" ,fontname="Helvetica"];
  Node3 [label="llvm::Loop",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Loop.html",tooltip="Represents a single loop in the control flow graph."];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="llvm::LoopBase\< BasicBlock,\l Loop \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LoopBase.html",tooltip=" "];
  Node5 -> Node4 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< BasicBlock, Loop \>" ,fontname="Helvetica"];
  Node5 [label="llvm::LoopBase\< BlockT,\l LoopT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LoopBase.html",tooltip="Instances of this class are used to represent loops that are detected in the flow graph."];
  Node6 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" PSE" ,fontname="Helvetica"];
  Node6 [label="llvm::PredicatedScalarEvolution",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PredicatedScalarEvolution.html",tooltip="An interface layer with SCEV used to manage how we see SCEV expressions for values in the context of ..."];
  Node7 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LI" ,fontname="Helvetica"];
  Node7 [label="llvm::LoopInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LoopInfo.html",tooltip=" "];
  Node8 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="llvm::LoopInfoBase\l\< BasicBlock, Loop \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LoopInfoBase.html",tooltip=" "];
  Node9 -> Node8 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< BasicBlock, Loop \>" ,fontname="Helvetica"];
  Node9 [label="llvm::LoopInfoBase\l\< BlockT, LoopT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LoopInfoBase.html",tooltip="This class builds and contains all of the top-level loop structures in the specified function."];
  Node10 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DT" ,fontname="Helvetica"];
  Node10 [label="llvm::DominatorTree",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DominatorTree.html",tooltip="Concrete subclass of DominatorTreeBase that is used to compute a normal dominator tree."];
  Node11 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="llvm::DominatorTreeBase\l\< BasicBlock, false \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1DominatorTreeBase.html",tooltip=" "];
  Node12 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DFSInfoValid\nIsPostDominator" ,fontname="Helvetica"];
  Node12 [label="bool",height=0.2,width=0.4,color="black",URL="$classbool.html",tooltip=" "];
  Node13 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Delete\nInsert" ,fontname="Helvetica"];
  Node13 [label="static constexpr UpdateKind",height=0.2,width=0.4,color="black",tooltip=" "];
  Node14 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Roots" ,fontname="Helvetica"];
  Node14 [label="llvm::SmallVector\<\l BasicBlock *, IsPostDom\l ? 4 :1 \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node27 -> Node14 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< BasicBlock *, IsPostDom\l ? 4 :1 \>" ,fontname="Helvetica"];
  Node27 [label="llvm::SmallVector\<\l T, N \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SmallVector.html",tooltip="This is a 'vector' (really, a variable-sized array), optimized for the case when the array is small."];
  Node20 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SlowQueries" ,fontname="Helvetica"];
  Node20 [label="unsigned",height=0.2,width=0.4,color="black",URL="$classunsigned.html",tooltip=" "];
  Node46 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AA" ,fontname="Helvetica"];
  Node46 [label="llvm::AAResults",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AAResults.html",tooltip=" "];
  Node47 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TLI" ,fontname="Helvetica"];
  Node47 [label="llvm::TargetLibraryInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1TargetLibraryInfo.html",tooltip="Provides information about what library functions are available for the current target."];
  Node48 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TTI" ,fontname="Helvetica"];
  Node48 [label="llvm::TargetTransformInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1TargetTransformInfo.html",tooltip="This pass provides access to the codegen interfaces that are needed for IR-level transformations."];
  Node49 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AC" ,fontname="Helvetica"];
  Node49 [label="llvm::AssumptionCache",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AssumptionCache.html",tooltip="A cache of @llvm.assume calls within a function."];
  Node50 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ORE" ,fontname="Helvetica"];
  Node50 [label="llvm::OptimizationRemark\lEmitter",height=0.2,width=0.4,color="black",URL="$classllvm_1_1OptimizationRemarkEmitter.html",tooltip="The optimization diagnostic interface."];
  Node51 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LVer" ,fontname="Helvetica"];
  Node51 [label="unique_ptr\< llvm::LoopVersioning \>",height=0.2,width=0.4,color="black",tooltip=" "];
  Node20 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" UF\nVF" ,fontname="Helvetica"];
  Node52 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Builder" ,fontname="Helvetica"];
  Node52 [label="llvm::IRBuilder\< T,\l Inserter \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1IRBuilder.html",tooltip="This provides a uniform API for creating instructions and inserting them into a basic block: either a..."];
  Node53 -> Node52 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node53 [label="llvm::IRBuilderBase",height=0.2,width=0.4,color="red",URL="$classllvm_1_1IRBuilderBase.html",tooltip="Common base class shared among various IRBuilders."];
  Node54 -> Node53 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BB" ,fontname="Helvetica"];
  Node54 [label="llvm::BasicBlock",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BasicBlock.html",tooltip="LLVM Basic Block Representation."];
  Node55 -> Node54 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node55 [label="llvm::Value",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Value.html",tooltip="LLVM Value Representation."];
  Node20 -> Node55 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" HasDescriptor\nHasHungOffUses\nHasName\nIsUsedByMD\nMaxAlignmentExponent\nMaximumAlignment\nNumUserOperands\nSubclassOptionalData" ,fontname="Helvetica"];
  Node56 -> Node54 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node56 [label="llvm::ilist_node_with\l_parent\< BasicBlock,\l Function \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1ilist__node__with__parent.html",tooltip=" "];
  Node12 -> Node53 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" IsFPConstrained" ,fontname="Helvetica"];
  Node172 -> Node52 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node172 [label="llvm::IRBuilderDefaultInserter",height=0.2,width=0.4,color="black",URL="$classllvm_1_1IRBuilderDefaultInserter.html",tooltip="This provides the default implementation of the IRBuilder 'InsertHelper' method that is called whenev..."];
  Node54 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LoopExitBlock\nLoopMiddleBlock\nLoopScalarBody\nLoopScalarPreHeader\nLoopVectorBody\nLoopVectorPreHeader" ,fontname="Helvetica"];
  Node173 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LoopBypassBlocks" ,fontname="Helvetica"];
  Node173 [label="llvm::SmallVector\<\l llvm::BasicBlock *, 4 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node174 -> Node173 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node174 [label="llvm::SmallVectorImpl\< T \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SmallVectorImpl.html",tooltip="This class consists of common code factored out of the SmallVector class to reduce code duplication b..."];
  Node175 -> Node173 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node175 [label="llvm::SmallVectorStorage\l\< T, N \>",height=0.2,width=0.4,color="red",URL="$structllvm_1_1SmallVectorStorage.html",tooltip="Storage for the SmallVector elements."];
  Node27 -> Node173 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::BasicBlock\l *, 4 \>" ,fontname="Helvetica"];
  Node176 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Induction\nOldInduction" ,fontname="Helvetica"];
  Node176 [label="llvm::PHINode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PHINode.html",tooltip=" "];
  Node177 -> Node176 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node177 [label="llvm::Instruction",height=0.2,width=0.4,color="red",URL="$classllvm_1_1Instruction.html",tooltip=" "];
  Node180 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" VectorLoopValueMap" ,fontname="Helvetica"];
  Node180 [label="llvm::VectorizerValueMap",height=0.2,width=0.4,color="black",URL="$structllvm_1_1VectorizerValueMap.html",tooltip="This is a helper struct for maintaining vectorization state."];
  Node181 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" PredicatedInstructions" ,fontname="Helvetica"];
  Node181 [label="llvm::SmallVector\<\l llvm::Instruction *, 4 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node182 -> Node181 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node182 [label="llvm::SmallVectorImpl\< T \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SmallVectorImpl.html",tooltip="This class consists of common code factored out of the SmallVector class to reduce code duplication b..."];
  Node183 -> Node181 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node183 [label="llvm::SmallVectorStorage\l\< T, N \>",height=0.2,width=0.4,color="red",URL="$structllvm_1_1SmallVectorStorage.html",tooltip="Storage for the SmallVector elements."];
  Node27 -> Node181 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::Instruction\l *, 4 \>" ,fontname="Helvetica"];
  Node55 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TripCount\nVectorTripCount" ,fontname="Helvetica"];
  Node184 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Legal" ,fontname="Helvetica"];
  Node184 [label="llvm::LoopVectorizationLegality",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LoopVectorizationLegality.html",tooltip="LoopVectorizationLegality checks if it is legal to vectorize a loop, and to what vectorization factor..."];
  Node185 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Cost" ,fontname="Helvetica"];
  Node185 [label="llvm::LoopVectorizationCost\lModel",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LoopVectorizationCostModel.html",tooltip="LoopVectorizationCostModel - estimates the expected speedups due to vectorization."];
  Node3 -> Node185 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TheLoop" ,fontname="Helvetica"];
  Node6 -> Node185 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" PSE" ,fontname="Helvetica"];
  Node7 -> Node185 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LI" ,fontname="Helvetica"];
  Node184 -> Node185 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Legal" ,fontname="Helvetica"];
  Node48 -> Node185 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TTI" ,fontname="Helvetica"];
  Node47 -> Node185 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TLI" ,fontname="Helvetica"];
  Node186 -> Node185 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DB" ,fontname="Helvetica"];
  Node186 [label="llvm::DemandedBits",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DemandedBits.html",tooltip=" "];
  Node49 -> Node185 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AC" ,fontname="Helvetica"];
  Node50 -> Node185 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ORE" ,fontname="Helvetica"];
  Node187 -> Node185 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TheFunction" ,fontname="Helvetica"];
  Node187 [label="llvm::Function",height=0.2,width=0.4,color="red",URL="$classllvm_1_1Function.html",tooltip=" "];
  Node195 -> Node185 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Hints" ,fontname="Helvetica"];
  Node195 [label="llvm::LoopVectorizeHints",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LoopVectorizeHints.html",tooltip="Utility class for getting and setting loop vectorizer hints in the form of loop metadata."];
  Node196 -> Node185 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InterleaveInfo" ,fontname="Helvetica"];
  Node196 [label="llvm::InterleavedAccessInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1InterleavedAccessInfo.html",tooltip="Drive the analysis of interleaved memory accesses in the loop."];
  Node197 -> Node185 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ValuesToIgnore\nVecValuesToIgnore" ,fontname="Helvetica"];
  Node197 [label="llvm::SmallPtrSet\<\l const llvm::Value *, 16 \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SmallPtrSet.html",tooltip=" "];
  Node12 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AddedSafetyChecks" ,fontname="Helvetica"];
  Node199 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" IVEndValues" ,fontname="Helvetica"];
  Node199 [label="llvm::DenseMap\< llvm\l::PHINode *, llvm::Value * \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DenseMap.html",tooltip=" "];
  Node200 -> Node199 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node200 [label="llvm::DenseMapBase\l\< DerivedT, KeyT, ValueT,\l KeyInfoT, BucketT \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1DenseMapBase.html",tooltip=" "];
  Node33 -> Node199 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::PHINode *,\l llvm::Value * \>" ,fontname="Helvetica"];
  Node33 [label="llvm::DenseMap\< KeyT,\l ValueT, KeyInfoT, BucketT \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1DenseMap.html",tooltip=" "];
  Node201 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" OrigPHIsToFix" ,fontname="Helvetica"];
  Node201 [label="llvm::SmallVector\<\l llvm::PHINode *, 8 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node202 -> Node201 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node202 [label="llvm::SmallVectorImpl\< T \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SmallVectorImpl.html",tooltip="This class consists of common code factored out of the SmallVector class to reduce code duplication b..."];
  Node203 -> Node201 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node203 [label="llvm::SmallVectorStorage\l\< T, N \>",height=0.2,width=0.4,color="red",URL="$structllvm_1_1SmallVectorStorage.html",tooltip="Storage for the SmallVector elements."];
  Node27 -> Node201 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::PHINode *, 8 \>" ,fontname="Helvetica"];
}
