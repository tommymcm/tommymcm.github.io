digraph "llvm::BTFTypeBase"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape="box"];
  rankdir="LR";
  Node1 [label="llvm::BTFTypeBase",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="The base class for BTF type generation."];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="llvm::BTFKindDataSec",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BTFKindDataSec.html",tooltip="Handle data sections."];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="llvm::BTFKindVar",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BTFKindVar.html",tooltip="Handle variable instances."];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="llvm::BTFTypeArray",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BTFTypeArray.html",tooltip="Handle array type."];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="llvm::BTFTypeDerived",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BTFTypeDerived.html",tooltip="Handle several derived types include pointer, const, volatile, typedef and restrict."];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="llvm::BTFTypeEnum",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BTFTypeEnum.html",tooltip="Handle enumerate type."];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="llvm::BTFTypeFunc",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BTFTypeFunc.html",tooltip="Handle subprogram."];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="llvm::BTFTypeFuncProto",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BTFTypeFuncProto.html",tooltip="Handle function pointer."];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="llvm::BTFTypeFwd",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BTFTypeFwd.html",tooltip="Handle struct or union forward declaration."];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="llvm::BTFTypeInt",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BTFTypeInt.html",tooltip="Handle int type."];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="llvm::BTFTypeStruct",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BTFTypeStruct.html",tooltip="Handle struct/union type."];
}
