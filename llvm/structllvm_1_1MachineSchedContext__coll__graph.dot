digraph "llvm::MachineSchedContext"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape="box"];
  rankdir="LR";
  Node1 [label="llvm::MachineSchedContext",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="MachineSchedContext provides enough context from the MachineScheduler pass for the target to instanti..."];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MF" ,fontname="Helvetica"];
  Node2 [label="llvm::MachineFunction",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineFunction.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" VariableDbgInfos" ,fontname="Helvetica"];
  Node3 [label="llvm::SmallVector\<\l VariableDbgInfo, 4 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="llvm::SmallVectorImpl\< T \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip="This class consists of common code factored out of the SmallVector class to reduce code duplication b..."];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="llvm::SmallVectorTemplate\lBase\< T, bool \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorTemplateBase.html",tooltip="SmallVectorTemplateBase<TriviallyCopyable = false> - This is where we put method implementations that..."];
  Node6 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="llvm::SmallVectorTemplate\lCommon\< T, typename \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SmallVectorTemplateCommon.html",tooltip="This is the part of SmallVectorTemplateBase which does not depend on whether the type T is a POD."];
  Node10 -> Node3 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="llvm::SmallVectorStorage\l\< T, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip="Storage for the SmallVector elements."];
  Node11 -> Node10 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node11 [label="llvm::AlignedCharArrayUnion\< T \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1AlignedCharArrayUnion.html",tooltip=" "];
  Node12 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="llvm::AlignedCharArray\l\< Alignment, Size \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1AlignedCharArray.html",tooltip="Helper for building an aligned character array type."];
  Node13 -> Node12 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" buffer" ,fontname="Helvetica"];
  Node13 [label="char",height=0.2,width=0.4,color="black",URL="$classchar.html",tooltip=" "];
  Node14 -> Node11 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< T \>" ,fontname="Helvetica"];
  Node14 [label="llvm::AlignedCharArrayUnion\l\< T1, T2, T3, T4, T5, T6,\l T7, T8, T9, T10 \>",height=0.2,width=0.4,color="red",URL="$structllvm_1_1AlignedCharArrayUnion.html",tooltip="This union template exposes a suitably aligned and sized character array member which can hold elemen..."];
  Node16 -> Node3 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< VariableDbgInfo, 4 \>" ,fontname="Helvetica"];
  Node16 [label="llvm::SmallVector\<\l T, N \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip="This is a 'vector' (really, a variable-sized array), optimized for the case when the array is small."];
  Node17 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="llvm::SmallVectorImpl\< T \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip="This class consists of common code factored out of the SmallVector class to reduce code duplication b..."];
  Node5 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 -> Node16 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="llvm::SmallVectorStorage\l\< T, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip="Storage for the SmallVector elements."];
  Node11 -> Node18 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node19 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MLI" ,fontname="Helvetica"];
  Node19 [label="llvm::MachineLoopInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineLoopInfo.html",tooltip=" "];
  Node20 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="llvm::MachineFunctionPass",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineFunctionPass.html",tooltip="MachineFunctionPass - This class adapts the FunctionPass interface to allow convenient creation of pa..."];
  Node21 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="llvm::FunctionPass",height=0.2,width=0.4,color="black",URL="$classllvm_1_1FunctionPass.html",tooltip="FunctionPass class - This class is used to implement most global optimizations."];
  Node22 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="llvm::Pass",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Pass.html",tooltip="Pass interface - Implemented by all 'passes'."];
  Node13 -> Node19 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ID" ,fontname="Helvetica"];
  Node23 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MDT" ,fontname="Helvetica"];
  Node23 [label="llvm::MachineDominatorTree",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineDominatorTree.html",tooltip="DominatorTree Class - Concrete subclass of DominatorTreeBase that is used to compute a normal dominat..."];
  Node20 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 -> Node23 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ID" ,fontname="Helvetica"];
  Node24 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" PassConfig" ,fontname="Helvetica"];
  Node24 [label="llvm::TargetPassConfig",height=0.2,width=0.4,color="black",URL="$classllvm_1_1TargetPassConfig.html",tooltip="Target-Independent Code Generator Pass Configuration Options."];
  Node25 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="llvm::ImmutablePass",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ImmutablePass.html",tooltip="ImmutablePass class - This class is used to provide information that does not need to be run."];
  Node26 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="llvm::ModulePass",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ModulePass.html",tooltip="ModulePass class - This class is used to implement unstructured interprocedural optimizations and ana..."];
  Node22 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 -> Node24 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TM" ,fontname="Helvetica"];
  Node27 [label="llvm::LLVMTargetMachine",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LLVMTargetMachine.html",tooltip="This class describes a target machine that is implemented with the LLVM target-independent code gener..."];
  Node28 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="llvm::TargetMachine",height=0.2,width=0.4,color="black",URL="$classllvm_1_1TargetMachine.html",tooltip="Primary interface to the complete machine description for the target machine."];
  Node29 -> Node28 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TheTarget" ,fontname="Helvetica"];
  Node29 [label="llvm::Target",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Target.html",tooltip="Target - Wrapper for Target specific information."];
  Node30 -> Node28 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DL" ,fontname="Helvetica"];
  Node30 [label="llvm::DataLayout",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DataLayout.html",tooltip="A parsed version of the target data layout string in and methods for querying it."];
  Node31 -> Node28 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TargetTriple" ,fontname="Helvetica"];
  Node31 [label="llvm::Triple",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Triple.html",tooltip="Triple - Helper class for working with autoconf configuration names."];
  Node32 -> Node28 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TargetCPU\nTargetFS" ,fontname="Helvetica"];
  Node32 [label="string",height=0.2,width=0.4,color="black",tooltip=" "];
  Node33 -> Node28 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" RM" ,fontname="Helvetica"];
  Node33 [label="Model",height=0.2,width=0.4,color="black",tooltip=" "];
  Node34 -> Node28 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CMModel" ,fontname="Helvetica"];
  Node34 [label="Model",height=0.2,width=0.4,color="black",tooltip=" "];
  Node35 -> Node28 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" OptLevel" ,fontname="Helvetica"];
  Node35 [label="Level",height=0.2,width=0.4,color="black",tooltip=" "];
  Node36 -> Node28 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AsmInfo" ,fontname="Helvetica"];
  Node36 [label="unique_ptr\< const llvm\l::MCAsmInfo \>",height=0.2,width=0.4,color="black",tooltip=" "];
  Node37 -> Node28 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MRI" ,fontname="Helvetica"];
  Node37 [label="unique_ptr\< const llvm\l::MCRegisterInfo \>",height=0.2,width=0.4,color="black",tooltip=" "];
  Node38 -> Node28 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MII" ,fontname="Helvetica"];
  Node38 [label="unique_ptr\< const llvm\l::MCInstrInfo \>",height=0.2,width=0.4,color="black",tooltip=" "];
  Node39 -> Node28 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" STI" ,fontname="Helvetica"];
  Node39 [label="unique_ptr\< const llvm\l::MCSubtargetInfo \>",height=0.2,width=0.4,color="black",tooltip=" "];
  Node9 -> Node28 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" O0WantsFastISel\nRequireStructuredCFG" ,fontname="Helvetica"];
  Node9 [label="unsigned",height=0.2,width=0.4,color="black",URL="$classunsigned.html",tooltip=" "];
  Node40 -> Node28 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DefaultOptions\nOptions" ,fontname="Helvetica"];
  Node40 [label="llvm::TargetOptions",height=0.2,width=0.4,color="red",URL="$classllvm_1_1TargetOptions.html",tooltip=" "];
  Node9 -> Node40 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DataSections\nDisableIntegratedAS\nEmitAddrsig\nEmitStackSizeSection\nEmulatedTLS\nEnableDebugEntryValues\nEnableFastISel\nEnableGlobalISel\nEnableIPRA\nEnableMachineOutliner\n..." ,fontname="Helvetica"];
  Node41 -> Node40 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" GlobalISelAbort" ,fontname="Helvetica"];
  Node41 [label="GlobalISelAbortMode",height=0.2,width=0.4,color="black",tooltip=" "];
  Node42 -> Node40 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CompressDebugSections" ,fontname="Helvetica"];
  Node42 [label="DebugCompressionType",height=0.2,width=0.4,color="black",tooltip=" "];
  Node54 -> Node24 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Impl" ,fontname="Helvetica"];
  Node54 [label="llvm::PassConfigImpl",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PassConfigImpl.html",tooltip=" "];
  Node55 -> Node54 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TargetPasses" ,fontname="Helvetica"];
  Node55 [label="llvm::DenseMap\< Analysis\lID, llvm::IdentifyingPassPtr \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DenseMap.html",tooltip=" "];
  Node56 -> Node55 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node56 [label="llvm::DenseMapBase\l\< DerivedT, KeyT, ValueT,\l KeyInfoT, BucketT \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1DenseMapBase.html",tooltip=" "];
  Node58 -> Node55 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< AnalysisID, llvm\l::IdentifyingPassPtr \>" ,fontname="Helvetica"];
  Node58 [label="llvm::DenseMap\< KeyT,\l ValueT, KeyInfoT, BucketT \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1DenseMap.html",tooltip=" "];
  Node60 -> Node54 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InsertedPasses" ,fontname="Helvetica"];
  Node60 [label="llvm::SmallVector\<\l InsertedPass, 4 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node61 -> Node60 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node61 [label="llvm::SmallVectorImpl\< T \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip="This class consists of common code factored out of the SmallVector class to reduce code duplication b..."];
  Node5 -> Node61 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node62 -> Node60 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node62 [label="llvm::SmallVectorStorage\l\< T, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip="Storage for the SmallVector elements."];
  Node11 -> Node62 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node16 -> Node60 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< InsertedPass, 4 \>" ,fontname="Helvetica"];
  Node51 -> Node24 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DisableVerify\nEnableTailMerge\nInitialized\nRequireCodeGenSCCOrder" ,fontname="Helvetica"];
  Node51 [label="bool",height=0.2,width=0.4,color="black",URL="$classbool.html",tooltip=" "];
  Node13 -> Node24 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ID" ,fontname="Helvetica"];
  Node63 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AA" ,fontname="Helvetica"];
  Node63 [label="llvm::AAResults",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AAResults.html",tooltip=" "];
  Node64 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LIS" ,fontname="Helvetica"];
  Node64 [label="llvm::LiveIntervals",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LiveIntervals.html",tooltip=" "];
  Node20 -> Node64 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 -> Node64 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ID" ,fontname="Helvetica"];
  Node65 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" RegClassInfo" ,fontname="Helvetica"];
  Node65 [label="llvm::RegisterClassInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1RegisterClassInfo.html",tooltip=" "];
}
