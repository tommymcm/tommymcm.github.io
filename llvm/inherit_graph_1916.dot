digraph "Graphical Class Hierarchy"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape="box"];
  rankdir="LR";
  Node0 [label="llvm::Init",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Init.html",tooltip=" "];
  Node0 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 [label="llvm::TypedInit",height=0.2,width=0.4,color="black",URL="$classllvm_1_1TypedInit.html",tooltip="This is the common super-class of types that have a specific, explicit, type."];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="llvm::BitInit",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BitInit.html",tooltip="'true'/'false' - Represent a concrete initializer for a bit."];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="llvm::BitsInit",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BitsInit.html",tooltip="'{ a, b, c }' - Represents an initializer for a BitsRecTy value."];
  Node1 -> Node410 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node410 [label="llvm::CodeInit",height=0.2,width=0.4,color="black",URL="$classllvm_1_1CodeInit.html",tooltip=" "];
  Node1 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="llvm::CondOpInit",height=0.2,width=0.4,color="black",URL="$classllvm_1_1CondOpInit.html",tooltip="!cond(condition_1: value1, ... , condition_n: value) Selects the first value for which condition is t..."];
  Node1 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="llvm::DagInit",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DagInit.html",tooltip="(v a, b) - Represent a DAG tree value."];
  Node1 -> Node411 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node411 [label="llvm::DefInit",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DefInit.html",tooltip="AL - Represent a reference to a 'def' in the description."];
  Node1 -> Node412 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node412 [label="llvm::FieldInit",height=0.2,width=0.4,color="black",URL="$classllvm_1_1FieldInit.html",tooltip="X.Y - Represent a reference to a subfield of a variable."];
  Node1 -> Node41 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node41 [label="llvm::FoldOpInit",height=0.2,width=0.4,color="black",URL="$classllvm_1_1FoldOpInit.html",tooltip="!foldl (a, b, expr, start, lst) - Fold over a list."];
  Node1 -> Node413 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node413 [label="llvm::IntInit",height=0.2,width=0.4,color="black",URL="$classllvm_1_1IntInit.html",tooltip="'7' - Represent an initialization by a literal integer value."];
  Node1 -> Node44 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node44 [label="llvm::IsAOpInit",height=0.2,width=0.4,color="black",URL="$classllvm_1_1IsAOpInit.html",tooltip="!isa<type>(expr) - Dynamically determine the type of an expression."];
  Node1 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="llvm::ListInit",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ListInit.html",tooltip="[AL, AH, CL] - Represent a list of defs"];
  Node1 -> Node36 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node36 [label="llvm::OpInit",height=0.2,width=0.4,color="black",URL="$classllvm_1_1OpInit.html",tooltip="Base class for operators."];
  Node36 -> Node35 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node35 [label="llvm::BinOpInit",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BinOpInit.html",tooltip="!op (X, Y) - Combine two inits."];
  Node36 -> Node37 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node37 [label="llvm::TernOpInit",height=0.2,width=0.4,color="black",URL="$classllvm_1_1TernOpInit.html",tooltip="!op (X, Y, Z) - Combine two inits."];
  Node36 -> Node38 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node38 [label="llvm::UnOpInit",height=0.2,width=0.4,color="black",URL="$classllvm_1_1UnOpInit.html",tooltip="!op (X) - Transform an init."];
  Node1 -> Node414 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node414 [label="llvm::StringInit",height=0.2,width=0.4,color="black",URL="$classllvm_1_1StringInit.html",tooltip="\"foo\" - Represent an initialization by a string value."];
  Node1 -> Node415 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node415 [label="llvm::VarBitInit",height=0.2,width=0.4,color="black",URL="$classllvm_1_1VarBitInit.html",tooltip="Opcode{0} - Represent access to one bit of a variable or field."];
  Node1 -> Node34 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node34 [label="llvm::VarDefInit",height=0.2,width=0.4,color="black",URL="$classllvm_1_1VarDefInit.html",tooltip="classname<targs...> - Represent an uninstantiated anonymous class instantiation."];
  Node1 -> Node416 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node416 [label="llvm::VarInit",height=0.2,width=0.4,color="black",URL="$classllvm_1_1VarInit.html",tooltip="'Opcode' - Represent a reference to an entire variable object."];
  Node1 -> Node417 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node417 [label="llvm::VarListElementInit",height=0.2,width=0.4,color="black",URL="$classllvm_1_1VarListElementInit.html",tooltip="List[4] - Represent access to one element of a var or field."];
  Node0 -> Node418 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node418 [label="llvm::UnsetInit",height=0.2,width=0.4,color="black",URL="$classllvm_1_1UnsetInit.html",tooltip="'?' - Represents an uninitialized value"];
  Node4 [label="llvm::FoldingSetBase\l::Node",height=0.2,width=0.4,color="black",URL="$classllvm_1_1FoldingSetBase_1_1Node.html",tooltip="Node - This class is used to maintain the singly linked bucket list in a folding set."];
  Node4 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="llvm::AttributeImpl",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AttributeImpl.html",tooltip=" "];
  Node5 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="llvm::EnumAttributeImpl",height=0.2,width=0.4,color="black",URL="$classllvm_1_1EnumAttributeImpl.html",tooltip=" "];
  Node6 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="llvm::IntAttributeImpl",height=0.2,width=0.4,color="black",URL="$classllvm_1_1IntAttributeImpl.html",tooltip=" "];
  Node6 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="llvm::TypeAttributeImpl",height=0.2,width=0.4,color="black",URL="$classllvm_1_1TypeAttributeImpl.html",tooltip=" "];
  Node5 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="llvm::StringAttributeImpl",height=0.2,width=0.4,color="black",URL="$classllvm_1_1StringAttributeImpl.html",tooltip=" "];
  Node4 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="llvm::AttributeListImpl",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AttributeListImpl.html",tooltip=" "];
  Node4 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="llvm::AttributeSetNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AttributeSetNode.html",tooltip=" "];
  Node4 -> Node35 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 -> Node39 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node39 [label="llvm::DIEAbbrev",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DIEAbbrev.html",tooltip="Dwarf abbreviation, describes the organization of a debug information object."];
  Node4 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 -> Node40 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node40 [label="llvm::FastFoldingSetNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1FastFoldingSetNode.html",tooltip="FastFoldingSetNode - This is a subclass of FoldingSetNode which stores a FoldingSetNodeID value rathe..."];
  Node4 -> Node41 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 -> Node42 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node42 [label="llvm::FoldingSetNodeWrapper\< T \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1FoldingSetNodeWrapper.html",tooltip="FoldingSetNodeWrapper - This template class is used to \"wrap\" arbitrary types in an enclosing object ..."];
  Node4 -> Node43 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node43 [label="llvm::ImmutableListImpl\< T \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ImmutableListImpl.html",tooltip=" "];
  Node4 -> Node44 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="llvm::RecordRecTy",height=0.2,width=0.4,color="black",URL="$classllvm_1_1RecordRecTy.html",tooltip="'[classname]' - Type of record values that have zero or more superclasses."];
  Node4 -> Node45 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node45 [label="llvm::SCEV",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SCEV.html",tooltip="This class represents an analyzed expression in the program."];
  Node45 -> Node46 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node46 [label="llvm::SCEVCastExpr",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SCEVCastExpr.html",tooltip="This is the base class for unary cast operator classes."];
  Node46 -> Node47 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node47 [label="llvm::SCEVSignExtendExpr",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SCEVSignExtendExpr.html",tooltip="This class represents a sign extension of a small integer value to a larger integer value."];
  Node46 -> Node48 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node48 [label="llvm::SCEVTruncateExpr",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SCEVTruncateExpr.html",tooltip="This class represents a truncation of an integer value to a smaller integer value."];
  Node46 -> Node49 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node49 [label="llvm::SCEVZeroExtendExpr",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SCEVZeroExtendExpr.html",tooltip="This class represents a zero extension of a small integer value to a larger integer value."];
  Node45 -> Node50 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node50 [label="llvm::SCEVConstant",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SCEVConstant.html",tooltip="This class represents a constant integer value."];
  Node45 -> Node51 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node51 [label="llvm::SCEVCouldNotCompute",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SCEVCouldNotCompute.html",tooltip="An object of this class is returned by queries that could not be answered."];
  Node45 -> Node52 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node52 [label="llvm::SCEVNAryExpr",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SCEVNAryExpr.html",tooltip="This node is a base class providing common functionality for n'ary operators."];
  Node52 -> Node53 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node53 [label="llvm::SCEVAddRecExpr",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SCEVAddRecExpr.html",tooltip="This node represents a polynomial recurrence on the trip count of the specified loop."];
  Node52 -> Node54 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node54 [label="llvm::SCEVCommutativeExpr",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SCEVCommutativeExpr.html",tooltip="This node is the base class for n'ary commutative operators."];
  Node54 -> Node55 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node55 [label="llvm::SCEVAddExpr",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SCEVAddExpr.html",tooltip="This node represents an addition of some number of SCEVs."];
  Node54 -> Node56 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node56 [label="llvm::SCEVMinMaxExpr",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SCEVMinMaxExpr.html",tooltip="This node is the base class min/max selections."];
  Node56 -> Node57 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node57 [label="llvm::SCEVSMaxExpr",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SCEVSMaxExpr.html",tooltip="This class represents a signed maximum selection."];
  Node56 -> Node58 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node58 [label="llvm::SCEVSMinExpr",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SCEVSMinExpr.html",tooltip="This class represents a signed minimum selection."];
  Node56 -> Node59 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node59 [label="llvm::SCEVUMaxExpr",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SCEVUMaxExpr.html",tooltip="This class represents an unsigned maximum selection."];
  Node56 -> Node60 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node60 [label="llvm::SCEVUMinExpr",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SCEVUMinExpr.html",tooltip="This class represents an unsigned minimum selection."];
  Node54 -> Node61 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node61 [label="llvm::SCEVMulExpr",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SCEVMulExpr.html",tooltip="This node represents multiplication of some number of SCEVs."];
  Node45 -> Node62 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node62 [label="llvm::SCEVUDivExpr",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SCEVUDivExpr.html",tooltip="This class represents a binary unsigned division operation."];
  Node45 -> Node63 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node63 [label="llvm::SCEVUnknown",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SCEVUnknown.html",tooltip="This means that we are dealing with an entirely unknown SCEV value, and only represent it as its LLVM..."];
  Node4 -> Node404 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node404 [label="llvm::SCEVPredicate",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SCEVPredicate.html",tooltip="This class represents an assumption made using SCEV expressions which can be checked at run-time."];
  Node404 -> Node405 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node405 [label="llvm::SCEVEqualPredicate",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SCEVEqualPredicate.html",tooltip="This class represents an assumption that two SCEV expressions are equal, and this can be checked at r..."];
  Node404 -> Node406 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node406 [label="llvm::SCEVUnionPredicate",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SCEVUnionPredicate.html",tooltip="This class represents a composition of other SCEV predicates, and is the class that most clients will..."];
  Node404 -> Node407 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node407 [label="llvm::SCEVWrapPredicate",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SCEVWrapPredicate.html",tooltip="This class represents an assumption made on an AddRec expression."];
  Node4 -> Node342 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node342 [label="llvm::SDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SDNode.html",tooltip="Represents one node in the SelectionDAG."];
  Node342 -> Node343 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node343 [label="llvm::AddrSpaceCastSDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AddrSpaceCastSDNode.html",tooltip=" "];
  Node342 -> Node344 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node344 [label="llvm::BasicBlockSDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BasicBlockSDNode.html",tooltip=" "];
  Node342 -> Node345 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node345 [label="llvm::BlockAddressSDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BlockAddressSDNode.html",tooltip=" "];
  Node342 -> Node346 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node346 [label="llvm::BuildVectorSDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BuildVectorSDNode.html",tooltip="A \"pseudo-class\" with methods for operating on BUILD_VECTORs."];
  Node342 -> Node347 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node347 [label="llvm::CondCodeSDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1CondCodeSDNode.html",tooltip=" "];
  Node342 -> Node348 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node348 [label="llvm::ConstantFPSDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ConstantFPSDNode.html",tooltip=" "];
  Node342 -> Node349 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node349 [label="llvm::ConstantPoolSDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ConstantPoolSDNode.html",tooltip=" "];
  Node342 -> Node350 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node350 [label="llvm::ConstantSDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ConstantSDNode.html",tooltip=" "];
  Node342 -> Node351 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node351 [label="llvm::ExternalSymbolSDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ExternalSymbolSDNode.html",tooltip=" "];
  Node342 -> Node352 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node352 [label="llvm::FrameIndexSDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1FrameIndexSDNode.html",tooltip=" "];
  Node342 -> Node353 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node353 [label="llvm::GlobalAddressSDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1GlobalAddressSDNode.html",tooltip=" "];
  Node342 -> Node354 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node354 [label="llvm::HandleSDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1HandleSDNode.html",tooltip="This class is used to form a handle around another node that is persistent and is updated across invo..."];
  Node342 -> Node355 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node355 [label="llvm::JumpTableSDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1JumpTableSDNode.html",tooltip=" "];
  Node342 -> Node356 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node356 [label="llvm::LabelSDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LabelSDNode.html",tooltip=" "];
  Node342 -> Node357 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node357 [label="llvm::LifetimeSDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LifetimeSDNode.html",tooltip="This SDNode is used for LIFETIME_START/LIFETIME_END values, which indicate the offet and size that ar..."];
  Node342 -> Node358 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node358 [label="llvm::MCSymbolSDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MCSymbolSDNode.html",tooltip=" "];
  Node342 -> Node359 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node359 [label="llvm::MDNodeSDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MDNodeSDNode.html",tooltip=" "];
  Node342 -> Node360 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node360 [label="llvm::MachineSDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineSDNode.html",tooltip="An SDNode that represents everything that will be needed to construct a MachineInstr."];
  Node342 -> Node361 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node361 [label="llvm::MemSDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MemSDNode.html",tooltip="This is an abstract virtual class for memory operations."];
  Node361 -> Node362 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node362 [label="llvm::AtomicSDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AtomicSDNode.html",tooltip="This is an SDNode representing atomic operations."];
  Node361 -> Node363 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node363 [label="llvm::LSBaseSDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LSBaseSDNode.html",tooltip="Base class for LoadSDNode and StoreSDNode."];
  Node363 -> Node364 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node364 [label="llvm::LoadSDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LoadSDNode.html",tooltip="This class is used to represent ISD::LOAD nodes."];
  Node363 -> Node365 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node365 [label="llvm::StoreSDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1StoreSDNode.html",tooltip="This class is used to represent ISD::STORE nodes."];
  Node361 -> Node366 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node366 [label="llvm::MaskedGatherScatter\lSDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MaskedGatherScatterSDNode.html",tooltip="This is a base class used to represent MGATHER and MSCATTER nodes."];
  Node366 -> Node367 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node367 [label="llvm::MaskedGatherSDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MaskedGatherSDNode.html",tooltip="This class is used to represent an MGATHER node."];
  Node366 -> Node368 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node368 [label="llvm::MaskedScatterSDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MaskedScatterSDNode.html",tooltip="This class is used to represent an MSCATTER node."];
  Node361 -> Node369 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node369 [label="llvm::MaskedLoadStoreSDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MaskedLoadStoreSDNode.html",tooltip="This base class is used to represent MLOAD and MSTORE nodes."];
  Node369 -> Node370 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node370 [label="llvm::MaskedLoadSDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MaskedLoadSDNode.html",tooltip="This class is used to represent an MLOAD node."];
  Node369 -> Node371 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node371 [label="llvm::MaskedStoreSDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MaskedStoreSDNode.html",tooltip="This class is used to represent an MSTORE node."];
  Node361 -> Node372 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node372 [label="llvm::MemIntrinsicSDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MemIntrinsicSDNode.html",tooltip="This SDNode is used for target intrinsics that touch memory and need an associated MachineMemOperand."];
  Node361 -> Node373 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node373 [label="llvm::X86MaskedGatherScatter\lSDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1X86MaskedGatherScatterSDNode.html",tooltip=" "];
  Node373 -> Node374 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node374 [label="llvm::X86MaskedGatherSDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1X86MaskedGatherSDNode.html",tooltip=" "];
  Node373 -> Node375 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node375 [label="llvm::X86MaskedScatterSDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1X86MaskedScatterSDNode.html",tooltip=" "];
  Node361 -> Node376 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node376 [label="llvm::X86MaskedStoreSDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1X86MaskedStoreSDNode.html",tooltip=" "];
  Node376 -> Node377 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node377 [label="llvm::MaskedTruncSStoreSDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MaskedTruncSStoreSDNode.html",tooltip=" "];
  Node376 -> Node378 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node378 [label="llvm::MaskedTruncUSStore\lSDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MaskedTruncUSStoreSDNode.html",tooltip=" "];
  Node361 -> Node379 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node379 [label="llvm::X86StoreSDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1X86StoreSDNode.html",tooltip=" "];
  Node379 -> Node380 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node380 [label="llvm::TruncSStoreSDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1TruncSStoreSDNode.html",tooltip=" "];
  Node379 -> Node381 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node381 [label="llvm::TruncUSStoreSDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1TruncUSStoreSDNode.html",tooltip=" "];
  Node342 -> Node382 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node382 [label="llvm::RegisterMaskSDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1RegisterMaskSDNode.html",tooltip=" "];
  Node342 -> Node383 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node383 [label="llvm::RegisterSDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1RegisterSDNode.html",tooltip=" "];
  Node342 -> Node384 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node384 [label="llvm::ShuffleVectorSDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ShuffleVectorSDNode.html",tooltip="This SDNode is used to implement the code generator support for the llvm IR shufflevector instruction..."];
  Node342 -> Node385 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node385 [label="llvm::SrcValueSDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SrcValueSDNode.html",tooltip="An SDNode that holds an arbitrary LLVM IR Value."];
  Node342 -> Node386 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node386 [label="llvm::TargetIndexSDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1TargetIndexSDNode.html",tooltip="Completely target-dependent object reference."];
  Node342 -> Node387 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node387 [label="llvm::VTSDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1VTSDNode.html",tooltip="This class is used to represent EVT's, which are used to parameterize some operations."];
  Node4 -> Node408 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node408 [label="llvm::SDVTListNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SDVTListNode.html",tooltip=" "];
  Node4 -> Node37 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 -> Node38 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 -> Node409 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node409 [label="llvm::UniqueMachineInstr",height=0.2,width=0.4,color="black",URL="$classllvm_1_1UniqueMachineInstr.html",tooltip="A class that wraps MachineInstrs and derives from FoldingSetNode in order to be uniqued in a CSEMap."];
  Node4 -> Node34 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node278 [label="OptionsT::node_base_type",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node278 -> Node279 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node279 [label="llvm::ilist_node_impl\l\< ilist_detail::compute\l_node_options\< AliasSet,\l Options... \>::type \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip=" "];
  Node278 -> Node280 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node280 [label="llvm::ilist_node_impl\l\< ilist_detail::compute\l_node_options\< Node, Options...\l \>::type \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip=" "];
  Node278 -> Node281 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node281 [label="llvm::ilist_node_impl\l\< ilist_detail::compute\l_node_options\< BasicBlock,\l Options... \>::type \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip=" "];
  Node278 -> Node282 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node282 [label="llvm::ilist_node_impl\l\< ilist_detail::compute\l_node_options\< Function,\l Options... \>::type \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip=" "];
  Node278 -> Node283 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node283 [label="llvm::ilist_node_impl\l\< ilist_detail::compute\l_node_options\< GlobalAlias,\l Options... \>::type \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip=" "];
  Node278 -> Node284 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node284 [label="llvm::ilist_node_impl\l\< ilist_detail::compute\l_node_options\< GlobalIFunc,\l Options... \>::type \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip=" "];
  Node278 -> Node285 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node285 [label="llvm::ilist_node_impl\l\< ilist_detail::compute\l_node_options\< GlobalVariable,\l Options... \>::type \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip=" "];
  Node278 -> Node286 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node286 [label="llvm::ilist_node_impl\l\< ilist_detail::compute\l_node_options\< IVStrideUse,\l Options... \>::type \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip=" "];
  Node278 -> Node287 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node287 [label="llvm::ilist_node_impl\l\< ilist_detail::compute\l_node_options\< IndexListEntry,\l Options... \>::type \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip=" "];
  Node278 -> Node288 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node288 [label="llvm::ilist_node_impl\l\< ilist_detail::compute\l_node_options\< Instruction,\l Options... \>::type \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip=" "];
  Node278 -> Node289 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node289 [label="llvm::ilist_node_impl\l\< ilist_detail::compute\l_node_options\< MCFragment,\l Options... \>::type \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip=" "];
  Node278 -> Node290 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node290 [label="llvm::ilist_node_impl\l\< ilist_detail::compute\l_node_options\< MachineBasicBlock,\l Options... \>::type \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip=" "];
  Node278 -> Node291 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node291 [label="llvm::ilist_node_impl\l\< ilist_detail::compute\l_node_options\< MachineInstr,\l Options... \>::type \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip=" "];
  Node278 -> Node292 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node292 [label="llvm::ilist_node_impl\l\< ilist_detail::compute\l_node_options\< MemoryAccess,\l Options... \>::type \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip=" "];
  Node278 -> Node293 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node293 [label="llvm::ilist_node_impl\l\< ilist_detail::compute\l_node_options\< NamedMDNode,\l Options... \>::type \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip=" "];
  Node278 -> Node294 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node294 [label="llvm::ilist_node_impl\l\< ilist_detail::compute\l_node_options\< PredicateBase,\l Options... \>::type \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip=" "];
  Node278 -> Node295 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node295 [label="llvm::ilist_node_impl\l\< ilist_detail::compute\l_node_options\< SDNode,\l Options... \>::type \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip=" "];
  Node278 -> Node296 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node296 [label="llvm::ilist_node_impl\l\< ilist_detail::compute\l_node_options\< VPRecipeBase,\l Options... \>::type \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip=" "];
  Node278 -> Node277 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node277 [label="llvm::ilist_node_impl\l\< ilist_detail::compute\l_node_options\< T, Options...\l \>::type \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip=" "];
  Node277 -> Node230 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node230 [label="llvm::ilist_node\< T,\l Options \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node230 -> Node231 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node231 [label="llvm::ilist_node_with\l_parent\< BasicBlock,\l Function \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__with__parent.html",tooltip=" "];
  Node231 -> Node232 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node232 [label="llvm::BasicBlock",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BasicBlock.html",tooltip="LLVM Basic Block Representation."];
  Node230 -> Node229 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node229 [label="llvm::ilist_node_with\l_parent\< Instruction,\l BasicBlock \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__with__parent.html",tooltip=" "];
  Node229 -> Node120 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node120 [label="llvm::Instruction",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Instruction.html",tooltip=" "];
  Node120 -> Node121 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node121 [label="llvm::AtomicCmpXchgInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AtomicCmpXchgInst.html",tooltip="An instruction that atomically checks whether a specified value is in a memory location,..."];
  Node120 -> Node122 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node122 [label="llvm::AtomicRMWInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AtomicRMWInst.html",tooltip="an instruction that atomically reads a memory location, combines it with another value,..."];
  Node120 -> Node123 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node123 [label="llvm::BinaryOperator",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BinaryOperator.html",tooltip=" "];
  Node120 -> Node124 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node124 [label="llvm::BranchInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BranchInst.html",tooltip="Conditional or Unconditional Branch instruction."];
  Node120 -> Node125 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node125 [label="llvm::CallBase",height=0.2,width=0.4,color="black",URL="$classllvm_1_1CallBase.html",tooltip="Base class for all callable instructions (InvokeInst and CallInst) Holds everything related to callin..."];
  Node125 -> Node126 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node126 [label="llvm::CallBrInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1CallBrInst.html",tooltip="CallBr instruction, tracking function calls that may not return control but instead transfer it to a ..."];
  Node125 -> Node127 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node127 [label="llvm::CallInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1CallInst.html",tooltip="This class represents a function call, abstracting a target machine's calling convention."];
  Node127 -> Node128 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node128 [label="llvm::IntrinsicInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1IntrinsicInst.html",tooltip="A wrapper class for inspecting calls to intrinsic functions."];
  Node128 -> Node129 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node129 [label="llvm::MemIntrinsicBase\l\< AnyMemIntrinsic \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MemIntrinsicBase.html",tooltip=" "];
  Node129 -> Node130 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node130 [label="llvm::AnyMemIntrinsic",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AnyMemIntrinsic.html",tooltip=" "];
  Node130 -> Node131 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node131 [label="llvm::MemSetBase\< AnyMem\lIntrinsic \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MemSetBase.html",tooltip=" "];
  Node131 -> Node132 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node132 [label="llvm::AnyMemSetInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AnyMemSetInst.html",tooltip="This class represents any memset intrinsic."];
  Node130 -> Node133 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node133 [label="llvm::MemTransferBase\l\< AnyMemIntrinsic \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MemTransferBase.html",tooltip=" "];
  Node133 -> Node134 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node134 [label="llvm::AnyMemTransferInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AnyMemTransferInst.html",tooltip=" "];
  Node134 -> Node135 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node135 [label="llvm::AnyMemCpyInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AnyMemCpyInst.html",tooltip="This class represents any memcpy intrinsic i.e."];
  Node134 -> Node136 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node136 [label="llvm::AnyMemMoveInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AnyMemMoveInst.html",tooltip="This class represents any memmove intrinsic i.e."];
  Node128 -> Node137 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node137 [label="llvm::MemIntrinsicBase\l\< AtomicMemIntrinsic \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MemIntrinsicBase.html",tooltip=" "];
  Node137 -> Node138 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node138 [label="llvm::AtomicMemIntrinsic",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AtomicMemIntrinsic.html",tooltip=" "];
  Node138 -> Node139 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node139 [label="llvm::MemSetBase\< Atomic\lMemIntrinsic \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MemSetBase.html",tooltip=" "];
  Node139 -> Node140 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node140 [label="llvm::AtomicMemSetInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AtomicMemSetInst.html",tooltip="This class represents atomic memset intrinsic."];
  Node138 -> Node141 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node141 [label="llvm::MemTransferBase\l\< AtomicMemIntrinsic \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MemTransferBase.html",tooltip=" "];
  Node141 -> Node142 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node142 [label="llvm::AtomicMemTransferInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AtomicMemTransferInst.html",tooltip=" "];
  Node142 -> Node143 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node143 [label="llvm::AtomicMemCpyInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AtomicMemCpyInst.html",tooltip="This class represents the atomic memcpy intrinsic i.e."];
  Node142 -> Node144 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node144 [label="llvm::AtomicMemMoveInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AtomicMemMoveInst.html",tooltip="This class represents the atomic memmove intrinsic i.e."];
  Node128 -> Node145 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node145 [label="llvm::MemIntrinsicBase\l\< MemIntrinsic \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MemIntrinsicBase.html",tooltip=" "];
  Node145 -> Node146 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node146 [label="llvm::MemIntrinsic",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MemIntrinsic.html",tooltip="This is the common base class for memset/memcpy/memmove."];
  Node146 -> Node147 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node147 [label="llvm::MemSetBase\< MemIntrinsic \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MemSetBase.html",tooltip=" "];
  Node147 -> Node148 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node148 [label="llvm::MemSetInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MemSetInst.html",tooltip="This class wraps the llvm.memset intrinsic."];
  Node146 -> Node149 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node149 [label="llvm::MemTransferBase\l\< MemIntrinsic \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MemTransferBase.html",tooltip=" "];
  Node149 -> Node150 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node150 [label="llvm::MemTransferInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MemTransferInst.html",tooltip="This class wraps the llvm.memcpy/memmove intrinsics."];
  Node150 -> Node151 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node151 [label="llvm::MemCpyInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MemCpyInst.html",tooltip="This class wraps the llvm.memcpy intrinsic."];
  Node150 -> Node152 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node152 [label="llvm::MemMoveInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MemMoveInst.html",tooltip="This class wraps the llvm.memmove intrinsic."];
  Node128 -> Node153 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node153 [label="llvm::BinaryOpIntrinsic",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BinaryOpIntrinsic.html",tooltip="This class represents an intrinsic that is based on a binary operation."];
  Node153 -> Node154 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node154 [label="llvm::SaturatingInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SaturatingInst.html",tooltip="Represents a saturating add/sub intrinsic."];
  Node153 -> Node155 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node155 [label="llvm::WithOverflowInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1WithOverflowInst.html",tooltip="Represents an op.with.overflow intrinsic."];
  Node128 -> Node156 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node156 [label="llvm::ConstrainedFPIntrinsic",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ConstrainedFPIntrinsic.html",tooltip="This is the common base class for constrained floating point intrinsics."];
  Node128 -> Node157 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node157 [label="llvm::CoroAllocInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1CoroAllocInst.html",tooltip="This represents the llvm.coro.alloc instruction."];
  Node128 -> Node158 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node158 [label="llvm::CoroBeginInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1CoroBeginInst.html",tooltip="This class represents the llvm.coro.begin instruction."];
  Node128 -> Node159 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node159 [label="llvm::CoroEndInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1CoroEndInst.html",tooltip="This represents the llvm.coro.end instruction."];
  Node128 -> Node160 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node160 [label="llvm::CoroFrameInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1CoroFrameInst.html",tooltip="This represents the llvm.coro.frame instruction."];
  Node128 -> Node161 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node161 [label="llvm::CoroFreeInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1CoroFreeInst.html",tooltip="This represents the llvm.coro.free instruction."];
  Node128 -> Node162 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node162 [label="llvm::CoroIdInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1CoroIdInst.html",tooltip="This represents the llvm.coro.alloc instruction."];
  Node128 -> Node163 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node163 [label="llvm::CoroPromiseInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1CoroPromiseInst.html",tooltip="This represents the llvm.coro.promise instruction."];
  Node128 -> Node164 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node164 [label="llvm::CoroSaveInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1CoroSaveInst.html",tooltip="This represents the llvm.coro.save instruction."];
  Node128 -> Node165 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node165 [label="llvm::CoroSizeInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1CoroSizeInst.html",tooltip="This represents the llvm.coro.size instruction."];
  Node128 -> Node166 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node166 [label="llvm::CoroSubFnInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1CoroSubFnInst.html",tooltip="This class represents the llvm.coro.subfn.addr instruction."];
  Node128 -> Node167 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node167 [label="llvm::CoroSuspendInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1CoroSuspendInst.html",tooltip="This represents the llvm.coro.suspend instruction."];
  Node128 -> Node168 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node168 [label="llvm::DbgInfoIntrinsic",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DbgInfoIntrinsic.html",tooltip="This is the common base class for debug info intrinsics."];
  Node168 -> Node169 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node169 [label="llvm::DbgLabelInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DbgLabelInst.html",tooltip="This represents the llvm.dbg.label instruction."];
  Node168 -> Node170 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node170 [label="llvm::DbgVariableIntrinsic",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DbgVariableIntrinsic.html",tooltip="This is the common base class for debug info intrinsics for variables."];
  Node170 -> Node171 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node171 [label="llvm::DbgAddrIntrinsic",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DbgAddrIntrinsic.html",tooltip="This represents the llvm.dbg.addr instruction."];
  Node170 -> Node172 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node172 [label="llvm::DbgDeclareInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DbgDeclareInst.html",tooltip="This represents the llvm.dbg.declare instruction."];
  Node170 -> Node173 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node173 [label="llvm::DbgValueInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DbgValueInst.html",tooltip="This represents the llvm.dbg.value instruction."];
  Node128 -> Node174 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node174 [label="llvm::GCProjectionInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1GCProjectionInst.html",tooltip="Common base class for representing values projected from a statepoint."];
  Node174 -> Node175 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node175 [label="llvm::GCRelocateInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1GCRelocateInst.html",tooltip="Represents calls to the gc.relocate intrinsic."];
  Node174 -> Node176 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node176 [label="llvm::GCResultInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1GCResultInst.html",tooltip="Represents calls to the gc.result intrinsic."];
  Node128 -> Node177 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node177 [label="llvm::InstrProfIncrementInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1InstrProfIncrementInst.html",tooltip="This represents the llvm.instrprof_increment intrinsic."];
  Node177 -> Node178 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node178 [label="llvm::InstrProfIncrement\lInstStep",height=0.2,width=0.4,color="black",URL="$classllvm_1_1InstrProfIncrementInstStep.html",tooltip=" "];
  Node128 -> Node179 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node179 [label="llvm::InstrProfValueProfileInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1InstrProfValueProfileInst.html",tooltip="This represents the llvm.instrprof_value_profile intrinsic."];
  Node128 -> Node180 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node180 [label="llvm::MemIntrinsicBase\l\< Derived \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MemIntrinsicBase.html",tooltip="Common base class for all memory intrinsics."];
  Node128 -> Node181 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node181 [label="llvm::VACopyInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1VACopyInst.html",tooltip="This represents the llvm.va_copy intrinsic."];
  Node128 -> Node182 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node182 [label="llvm::VAEndInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1VAEndInst.html",tooltip="This represents the llvm.va_end intrinsic."];
  Node128 -> Node183 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node183 [label="llvm::VAStartInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1VAStartInst.html",tooltip="This represents the llvm.va_start intrinsic."];
  Node125 -> Node184 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node184 [label="llvm::InvokeInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1InvokeInst.html",tooltip="Invoke instruction."];
  Node120 -> Node185 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node185 [label="llvm::CatchReturnInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1CatchReturnInst.html",tooltip=" "];
  Node120 -> Node186 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node186 [label="llvm::CatchSwitchInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1CatchSwitchInst.html",tooltip=" "];
  Node120 -> Node187 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node187 [label="llvm::CleanupReturnInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1CleanupReturnInst.html",tooltip=" "];
  Node120 -> Node188 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node188 [label="llvm::CmpInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1CmpInst.html",tooltip="This class is the base class for the comparison instructions."];
  Node188 -> Node189 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node189 [label="llvm::FCmpInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1FCmpInst.html",tooltip="This instruction compares its operands according to the predicate given to the constructor."];
  Node188 -> Node190 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node190 [label="llvm::ICmpInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ICmpInst.html",tooltip="This instruction compares its operands according to the predicate given to the constructor."];
  Node120 -> Node191 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node191 [label="llvm::ExtractElementInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ExtractElementInst.html",tooltip="This instruction extracts a single (scalar) element from a VectorType value."];
  Node120 -> Node192 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node192 [label="llvm::FenceInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1FenceInst.html",tooltip="An instruction for ordering other memory operations."];
  Node120 -> Node193 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node193 [label="llvm::FuncletPadInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1FuncletPadInst.html",tooltip=" "];
  Node193 -> Node194 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node194 [label="llvm::CatchPadInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1CatchPadInst.html",tooltip=" "];
  Node193 -> Node195 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node195 [label="llvm::CleanupPadInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1CleanupPadInst.html",tooltip=" "];
  Node120 -> Node196 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node196 [label="llvm::GetElementPtrInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1GetElementPtrInst.html",tooltip="an instruction for type-safe pointer arithmetic to access elements of arrays and structs"];
  Node120 -> Node197 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node197 [label="llvm::IndirectBrInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1IndirectBrInst.html",tooltip="Indirect Branch Instruction."];
  Node120 -> Node198 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node198 [label="llvm::InsertElementInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1InsertElementInst.html",tooltip="This instruction inserts a single (scalar) element into a VectorType value."];
  Node120 -> Node199 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node199 [label="llvm::InsertValueInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1InsertValueInst.html",tooltip="This instruction inserts a struct field of array element value into an aggregate value."];
  Node120 -> Node200 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node200 [label="llvm::LandingPadInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LandingPadInst.html",tooltip="The landingpad instruction holds all of the information necessary to generate correct exception handl..."];
  Node120 -> Node201 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node201 [label="llvm::PHINode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PHINode.html",tooltip=" "];
  Node120 -> Node202 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node202 [label="llvm::ResumeInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ResumeInst.html",tooltip="Resume the propagation of an exception."];
  Node120 -> Node203 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node203 [label="llvm::ReturnInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ReturnInst.html",tooltip="Return a value (possibly void), from a function."];
  Node120 -> Node204 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node204 [label="llvm::SelectInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SelectInst.html",tooltip="This class represents the LLVM 'select' instruction."];
  Node120 -> Node205 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node205 [label="llvm::ShuffleVectorInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ShuffleVectorInst.html",tooltip="This instruction constructs a fixed permutation of two input vectors."];
  Node120 -> Node206 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node206 [label="llvm::StoreInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1StoreInst.html",tooltip="An instruction for storing to memory."];
  Node120 -> Node207 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node207 [label="llvm::SwitchInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SwitchInst.html",tooltip="Multiway switch."];
  Node120 -> Node208 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node208 [label="llvm::UnaryInstruction",height=0.2,width=0.4,color="black",URL="$classllvm_1_1UnaryInstruction.html",tooltip=" "];
  Node208 -> Node209 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node209 [label="llvm::AllocaInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AllocaInst.html",tooltip="an instruction to allocate memory on the stack"];
  Node208 -> Node210 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node210 [label="llvm::CastInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1CastInst.html",tooltip="This is the base class for all instructions that perform data casts."];
  Node210 -> Node211 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node211 [label="llvm::AddrSpaceCastInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AddrSpaceCastInst.html",tooltip="This class represents a conversion between pointers from one address space to another."];
  Node210 -> Node212 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node212 [label="llvm::BitCastInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BitCastInst.html",tooltip="This class represents a no-op cast from one type to another."];
  Node210 -> Node213 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node213 [label="llvm::FPExtInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1FPExtInst.html",tooltip="This class represents an extension of floating point types."];
  Node210 -> Node214 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node214 [label="llvm::FPToSIInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1FPToSIInst.html",tooltip="This class represents a cast from floating point to signed integer."];
  Node210 -> Node215 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node215 [label="llvm::FPToUIInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1FPToUIInst.html",tooltip="This class represents a cast from floating point to unsigned integer."];
  Node210 -> Node216 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node216 [label="llvm::FPTruncInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1FPTruncInst.html",tooltip="This class represents a truncation of floating point types."];
  Node210 -> Node217 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node217 [label="llvm::IntToPtrInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1IntToPtrInst.html",tooltip="This class represents a cast from an integer to a pointer."];
  Node210 -> Node218 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node218 [label="llvm::PtrToIntInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PtrToIntInst.html",tooltip="This class represents a cast from a pointer to an integer."];
  Node210 -> Node219 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node219 [label="llvm::SExtInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SExtInst.html",tooltip="This class represents a sign extension of integer types."];
  Node210 -> Node220 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node220 [label="llvm::SIToFPInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SIToFPInst.html",tooltip="This class represents a cast from signed integer to floating point."];
  Node210 -> Node221 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node221 [label="llvm::TruncInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1TruncInst.html",tooltip="This class represents a truncation of integer types."];
  Node210 -> Node222 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node222 [label="llvm::UIToFPInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1UIToFPInst.html",tooltip="This class represents a cast unsigned integer to floating point."];
  Node210 -> Node223 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node223 [label="llvm::ZExtInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ZExtInst.html",tooltip="This class represents zero extension of integer types."];
  Node208 -> Node224 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node224 [label="llvm::ExtractValueInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ExtractValueInst.html",tooltip="This instruction extracts a struct member or array element value from an aggregate value."];
  Node208 -> Node225 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node225 [label="llvm::LoadInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LoadInst.html",tooltip="An instruction for reading from memory."];
  Node208 -> Node226 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node226 [label="llvm::UnaryOperator",height=0.2,width=0.4,color="black",URL="$classllvm_1_1UnaryOperator.html",tooltip=" "];
  Node208 -> Node227 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node227 [label="llvm::VAArgInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1VAArgInst.html",tooltip="This class represents the va_arg llvm instruction, which returns an argument of the specified type gi..."];
  Node120 -> Node228 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node228 [label="llvm::UnreachableInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1UnreachableInst.html",tooltip="This function has undefined behavior."];
  Node230 -> Node237 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node237 [label="llvm::ilist_node_with\l_parent\< MCFragment,\l MCSection \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__with__parent.html",tooltip=" "];
  Node237 -> Node238 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node238 [label="llvm::MCFragment",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MCFragment.html",tooltip=" "];
  Node238 -> Node239 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node239 [label="llvm::MCAlignFragment",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MCAlignFragment.html",tooltip=" "];
  Node238 -> Node240 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node240 [label="llvm::MCCVInlineLineTable\lFragment",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MCCVInlineLineTableFragment.html",tooltip="Fragment representing the binary annotations produced by the .cv_inline_linetable directive."];
  Node238 -> Node241 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node241 [label="llvm::MCDummyFragment",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MCDummyFragment.html",tooltip=" "];
  Node238 -> Node242 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node242 [label="llvm::MCDwarfCallFrameFragment",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MCDwarfCallFrameFragment.html",tooltip=" "];
  Node238 -> Node243 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node243 [label="llvm::MCEncodedFragment",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MCEncodedFragment.html",tooltip="Interface implemented by fragments that contain encoded instructions and/or data."];
  Node243 -> Node244 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node244 [label="llvm::MCEncodedFragmentWith\lContents\< 4 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MCEncodedFragmentWithContents.html",tooltip=" "];
  Node244 -> Node245 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node245 [label="llvm::MCCompactEncodedInst\lFragment",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MCCompactEncodedInstFragment.html",tooltip="This is a compact (memory-size-wise) fragment for holding an encoded instruction (non-relaxable) that..."];
  Node243 -> Node246 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node246 [label="llvm::MCEncodedFragmentWith\lContents\< ContentsSize \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MCEncodedFragmentWithContents.html",tooltip="Interface implemented by fragments that contain encoded instructions and/or data."];
  Node246 -> Node247 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node247 [label="llvm::MCEncodedFragmentWith\lFixups\< 32, 4 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MCEncodedFragmentWithFixups.html",tooltip=" "];
  Node247 -> Node248 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node248 [label="llvm::MCCVDefRangeFragment",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MCCVDefRangeFragment.html",tooltip="Fragment representing the .cv_def_range directive."];
  Node247 -> Node249 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node249 [label="llvm::MCDataFragment",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MCDataFragment.html",tooltip="Fragment for data and encoded instructions."];
  Node246 -> Node250 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node250 [label="llvm::MCEncodedFragmentWith\lFixups\< 8, 1 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MCEncodedFragmentWithFixups.html",tooltip=" "];
  Node250 -> Node251 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node251 [label="llvm::MCDwarfLineAddrFragment",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MCDwarfLineAddrFragment.html",tooltip=" "];
  Node250 -> Node252 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node252 [label="llvm::MCRelaxableFragment",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MCRelaxableFragment.html",tooltip="A relaxable fragment holds on to its MCInst, since it may need to be relaxed during the assembler lay..."];
  Node246 -> Node253 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node253 [label="llvm::MCEncodedFragmentWith\lFixups\< ContentsSize, FixupsSize \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MCEncodedFragmentWithFixups.html",tooltip="Interface implemented by fragments that contain encoded instructions and/or data and also have fixups..."];
  Node238 -> Node254 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node254 [label="llvm::MCFillFragment",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MCFillFragment.html",tooltip=" "];
  Node238 -> Node255 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node255 [label="llvm::MCLEBFragment",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MCLEBFragment.html",tooltip=" "];
  Node238 -> Node256 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node256 [label="llvm::MCOrgFragment",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MCOrgFragment.html",tooltip=" "];
  Node238 -> Node257 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node257 [label="llvm::MCPaddingFragment",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MCPaddingFragment.html",tooltip="Fragment for adding required padding."];
  Node238 -> Node258 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node258 [label="llvm::MCSymbolIdFragment",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MCSymbolIdFragment.html",tooltip="Represents a symbol table index fragment."];
  Node230 -> Node259 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node259 [label="llvm::ilist_node_with\l_parent\< MachineBasicBlock,\l MachineFunction \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__with__parent.html",tooltip=" "];
  Node259 -> Node260 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node260 [label="llvm::MachineBasicBlock",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineBasicBlock.html",tooltip=" "];
  Node230 -> Node261 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node261 [label="llvm::ilist_node_with\l_parent\< MachineInstr,\l MachineBasicBlock, ilist\l_sentinel_tracking\< true \> \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__with__parent.html",tooltip=" "];
  Node261 -> Node262 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node262 [label="llvm::MachineInstr",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineInstr.html",tooltip="Representation of each machine instruction."];
  Node230 -> Node263 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node263 [label="llvm::ilist_node_with\l_parent\< VPRecipeBase,\l VPBasicBlock \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__with__parent.html",tooltip=" "];
  Node263 -> Node264 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node264 [label="llvm::VPRecipeBase",height=0.2,width=0.4,color="black",URL="$classllvm_1_1VPRecipeBase.html",tooltip="VPRecipeBase is a base class modeling a sequence of one or more output IR instructions."];
  Node264 -> Node265 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node265 [label="llvm::VPBlendRecipe",height=0.2,width=0.4,color="black",URL="$classllvm_1_1VPBlendRecipe.html",tooltip="A recipe for vectorizing a phi-node as a sequence of mask-based select instructions."];
  Node264 -> Node266 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node266 [label="llvm::VPBranchOnMaskRecipe",height=0.2,width=0.4,color="black",URL="$classllvm_1_1VPBranchOnMaskRecipe.html",tooltip="A recipe for generating conditional branches on the bits of a mask."];
  Node264 -> Node267 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node267 [label="llvm::VPInstruction",height=0.2,width=0.4,color="black",URL="$classllvm_1_1VPInstruction.html",tooltip="This is a concrete Recipe that models a single VPlan-level instruction."];
  Node264 -> Node270 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node270 [label="llvm::VPInterleaveRecipe",height=0.2,width=0.4,color="black",URL="$classllvm_1_1VPInterleaveRecipe.html",tooltip="VPInterleaveRecipe is a recipe for transforming an interleave group of load or stores into one wide l..."];
  Node264 -> Node271 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node271 [label="llvm::VPPredInstPHIRecipe",height=0.2,width=0.4,color="black",URL="$classllvm_1_1VPPredInstPHIRecipe.html",tooltip="VPPredInstPHIRecipe is a recipe for generating the phi nodes needed when control converges back from ..."];
  Node264 -> Node272 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node272 [label="llvm::VPReplicateRecipe",height=0.2,width=0.4,color="black",URL="$classllvm_1_1VPReplicateRecipe.html",tooltip="VPReplicateRecipe replicates a given instruction producing multiple scalar copies of the original sca..."];
  Node264 -> Node273 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node273 [label="llvm::VPWidenIntOrFpInduction\lRecipe",height=0.2,width=0.4,color="black",URL="$classllvm_1_1VPWidenIntOrFpInductionRecipe.html",tooltip="A recipe for handling phi nodes of integer and floating-point inductions, producing their vector and ..."];
  Node264 -> Node274 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node274 [label="llvm::VPWidenMemoryInstruction\lRecipe",height=0.2,width=0.4,color="black",URL="$classllvm_1_1VPWidenMemoryInstructionRecipe.html",tooltip="A Recipe for widening load/store operations."];
  Node264 -> Node275 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node275 [label="llvm::VPWidenPHIRecipe",height=0.2,width=0.4,color="black",URL="$classllvm_1_1VPWidenPHIRecipe.html",tooltip="A recipe for handling all phi nodes except for integer and FP inductions."];
  Node264 -> Node276 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node276 [label="llvm::VPWidenRecipe",height=0.2,width=0.4,color="black",URL="$classllvm_1_1VPWidenRecipe.html",tooltip="VPWidenRecipe is a recipe for producing a copy of vector type for each Instruction in its ingredients..."];
  Node278 -> Node297 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node297 [label="llvm::ilist_node_impl\l\< ilist_detail::compute\l_node_options\< NodeTy,\l Options... \>::type \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip=" "];
  Node278 -> Node68 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node68 [label="llvm::ilist_node_impl\l\< OptionsT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip="Implementation for an ilist node."];
  Node68 -> Node69 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node69 [label="llvm::ilist_node\< AliasSet \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node69 -> Node70 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node70 [label="llvm::AliasSet",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AliasSet.html",tooltip=" "];
  Node68 -> Node71 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node71 [label="llvm::ilist_node\< Node \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node68 -> Node72 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node72 [label="llvm::ilist_node\< BasicBlock,\l Options... \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node68 -> Node73 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node73 [label="llvm::ilist_node\< Function \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node73 -> Node74 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node74 [label="llvm::Function",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Function.html",tooltip=" "];
  Node68 -> Node81 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node81 [label="llvm::ilist_node\< Global\lAlias \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node81 -> Node80 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node80 [label="llvm::GlobalAlias",height=0.2,width=0.4,color="black",URL="$classllvm_1_1GlobalAlias.html",tooltip=" "];
  Node68 -> Node83 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node83 [label="llvm::ilist_node\< Global\lIFunc \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node83 -> Node82 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node82 [label="llvm::GlobalIFunc",height=0.2,width=0.4,color="black",URL="$classllvm_1_1GlobalIFunc.html",tooltip=" "];
  Node68 -> Node77 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node77 [label="llvm::ilist_node\< Global\lVariable \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node77 -> Node76 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node76 [label="llvm::GlobalVariable",height=0.2,width=0.4,color="black",URL="$classllvm_1_1GlobalVariable.html",tooltip=" "];
  Node68 -> Node67 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node67 [label="llvm::ilist_node\< IVStride\lUse \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node67 -> Node66 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node66 [label="llvm::IVStrideUse",height=0.2,width=0.4,color="black",URL="$classllvm_1_1IVStrideUse.html",tooltip="IVStrideUse - Keep track of one use of a strided induction variable."];
  Node68 -> Node326 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node326 [label="llvm::ilist_node\< IndexList\lEntry \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node326 -> Node327 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node327 [label="llvm::IndexListEntry",height=0.2,width=0.4,color="black",URL="$classllvm_1_1IndexListEntry.html",tooltip="This class represents an entry in the slot index list held in the SlotIndexes pass."];
  Node68 -> Node328 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node328 [label="llvm::ilist_node\< Instruction,\l Options... \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node68 -> Node329 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node329 [label="llvm::ilist_node\< MCFragment,\l Options... \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node68 -> Node330 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node330 [label="llvm::ilist_node\< Machine\lBasicBlock, Options... \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node68 -> Node331 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node331 [label="llvm::ilist_node\< Machine\lInstr, Options... \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node68 -> Node118 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node118 [label="llvm::ilist_node\< Memory\lAccess, ilist_tag\< MSSAHelpers\l::AllAccessTag \> \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node118 -> Node113 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node113 [label="llvm::MemoryAccess",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MemoryAccess.html",tooltip=" "];
  Node113 -> Node114 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node114 [label="llvm::MemoryPhi",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MemoryPhi.html",tooltip="Represents phi nodes for memory accesses."];
  Node113 -> Node115 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node115 [label="llvm::MemoryUseOrDef",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MemoryUseOrDef.html",tooltip="Class that has the common methods + fields of memory uses/defs."];
  Node115 -> Node116 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node116 [label="llvm::MemoryDef",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MemoryDef.html",tooltip="Represents a read-write access to memory, whether it is a must-alias, or a may-alias."];
  Node115 -> Node117 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node117 [label="llvm::MemoryUse",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MemoryUse.html",tooltip="Represents read-only accesses to memory."];
  Node68 -> Node119 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node119 [label="llvm::ilist_node\< Memory\lAccess, ilist_tag\< MSSAHelpers\l::DefsOnlyTag \> \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node119 -> Node113 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node68 -> Node332 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node332 [label="llvm::ilist_node\< NamedMDNode \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node332 -> Node333 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node333 [label="llvm::NamedMDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1NamedMDNode.html",tooltip="A tuple of MDNodes."];
  Node68 -> Node334 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node334 [label="llvm::ilist_node\< Predicate\lBase \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node334 -> Node335 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node335 [label="llvm::PredicateBase",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PredicateBase.html",tooltip=" "];
  Node335 -> Node336 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node336 [label="llvm::PredicateWithCondition",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PredicateWithCondition.html",tooltip=" "];
  Node336 -> Node337 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node337 [label="llvm::PredicateAssume",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PredicateAssume.html",tooltip=" "];
  Node336 -> Node338 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node338 [label="llvm::PredicateWithEdge",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PredicateWithEdge.html",tooltip=" "];
  Node338 -> Node339 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node339 [label="llvm::PredicateBranch",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PredicateBranch.html",tooltip=" "];
  Node338 -> Node340 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node340 [label="llvm::PredicateSwitch",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PredicateSwitch.html",tooltip=" "];
  Node68 -> Node341 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node341 [label="llvm::ilist_node\< SDNode \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node341 -> Node342 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node68 -> Node388 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node388 [label="llvm::ilist_node\< VPRecipe\lBase, Options... \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node68 -> Node389 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node389 [label="llvm::ilist_node\< NodeTy,\l Options... \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node389 -> Node390 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node390 [label="llvm::ilist_node_with\l_parent\< NodeTy, ParentTy,\l Options \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__with__parent.html",tooltip="An ilist node that can access its parent list."];
  Node68 -> Node391 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node391 [label="llvm::ilist_sentinel\l\< OptionsT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__sentinel.html",tooltip=" "];
  Node25 [label="llvm::RecTy",height=0.2,width=0.4,color="black",URL="$classllvm_1_1RecTy.html",tooltip=" "];
  Node25 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="llvm::BitRecTy",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BitRecTy.html",tooltip="'bit' - Represent a single bit"];
  Node25 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="llvm::BitsRecTy",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BitsRecTy.html",tooltip="'bits<n>' - Represent a fixed number of bits"];
  Node25 -> Node28 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="llvm::CodeRecTy",height=0.2,width=0.4,color="black",URL="$classllvm_1_1CodeRecTy.html",tooltip="'code' - Represent a code fragment"];
  Node25 -> Node29 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="llvm::DagRecTy",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DagRecTy.html",tooltip="'dag' - Represent a dag fragment"];
  Node25 -> Node30 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 [label="llvm::IntRecTy",height=0.2,width=0.4,color="black",URL="$classllvm_1_1IntRecTy.html",tooltip="'int' - Represent an integer value of no particular size"];
  Node25 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node31 [label="llvm::ListRecTy",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ListRecTy.html",tooltip="'list<Ty>' - Represent a list of values, all of which must be of the specified type."];
  Node25 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 -> Node32 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node32 [label="llvm::StringRecTy",height=0.2,width=0.4,color="black",URL="$classllvm_1_1StringRecTy.html",tooltip="'string' - Represent an string value"];
  Node12 [label="llvm::trailing_objects\l_internal::TrailingObjectsImpl\l\< Align, BaseTy, TopTrailingObj,\l PrevTy, MoreTys \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1trailing__objects__internal_1_1TrailingObjectsImpl.html",tooltip=" "];
  Node12 -> Node11 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="llvm::TrailingObjects\l\< AttributeListImpl,\l AttributeSet \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1TrailingObjects.html",tooltip=" "];
  Node11 -> Node10 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 -> Node13 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="llvm::TrailingObjects\l\< AttributeSetNode, Attribute \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1TrailingObjects.html",tooltip=" "];
  Node13 -> Node14 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 -> Node15 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="llvm::TrailingObjects\l\< BitsInit, Init * \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1TrailingObjects.html",tooltip=" "];
  Node15 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 -> Node16 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="llvm::TrailingObjects\l\< CondOpInit, Init * \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1TrailingObjects.html",tooltip=" "];
  Node16 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 -> Node18 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="llvm::TrailingObjects\l\< DagInit, Init *, StringInit * \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1TrailingObjects.html",tooltip=" "];
  Node18 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 -> Node20 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="llvm::TrailingObjects\l\< ListInit, Init * \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1TrailingObjects.html",tooltip=" "];
  Node20 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 -> Node22 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="llvm::TrailingObjects\l\< ExtraInfo, MachineMemOperand\l *, MCSymbol *, MDNode * \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1TrailingObjects.html",tooltip=" "];
  Node12 -> Node23 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="llvm::TrailingObjects\l\< RecordRecTy, Record * \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1TrailingObjects.html",tooltip=" "];
  Node23 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 -> Node33 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 [label="llvm::TrailingObjects\l\< VarDefInit, Init * \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1TrailingObjects.html",tooltip=" "];
  Node33 -> Node34 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node233 [label="llvm::Value",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Value.html",tooltip="LLVM Value Representation."];
  Node233 -> Node234 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node234 [label="llvm::Argument",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Argument.html",tooltip="This class represents an incoming formal argument to a Function."];
  Node233 -> Node232 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node233 -> Node235 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node235 [label="llvm::InlineAsm",height=0.2,width=0.4,color="black",URL="$classllvm_1_1InlineAsm.html",tooltip=" "];
  Node233 -> Node236 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node236 [label="llvm::MetadataAsValue",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MetadataAsValue.html",tooltip="Metadata wrapper in the Value hierarchy."];
  Node233 -> Node111 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node111 [label="llvm::User",height=0.2,width=0.4,color="black",URL="$classllvm_1_1User.html",tooltip=" "];
  Node111 -> Node84 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node84 [label="llvm::Constant",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Constant.html",tooltip="This is an important base class in LLVM."];
  Node84 -> Node85 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node85 [label="llvm::BlockAddress",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BlockAddress.html",tooltip="The address of a basic block."];
  Node84 -> Node86 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node86 [label="llvm::ConstantAggregate",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ConstantAggregate.html",tooltip="Base class for aggregate constants (with operands)."];
  Node86 -> Node87 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node87 [label="llvm::ConstantArray",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ConstantArray.html",tooltip="ConstantArray - Constant Array Declarations."];
  Node86 -> Node88 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node88 [label="llvm::ConstantStruct",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ConstantStruct.html",tooltip=" "];
  Node86 -> Node89 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node89 [label="llvm::ConstantVector",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ConstantVector.html",tooltip="Constant Vector Declarations."];
  Node84 -> Node90 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node90 [label="llvm::ConstantData",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ConstantData.html",tooltip="Base class for constants with no operands."];
  Node90 -> Node91 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node91 [label="llvm::ConstantAggregateZero",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ConstantAggregateZero.html",tooltip="All zero aggregate value."];
  Node90 -> Node92 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node92 [label="llvm::ConstantDataSequential",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ConstantDataSequential.html",tooltip="ConstantDataSequential - A vector or array constant whose element type is a simple 1/2/4/8-byte integ..."];
  Node92 -> Node93 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node93 [label="llvm::ConstantDataArray",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ConstantDataArray.html",tooltip="An array constant whose element type is a simple 1/2/4/8-byte integer or float/double,..."];
  Node92 -> Node94 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node94 [label="llvm::ConstantDataVector",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ConstantDataVector.html",tooltip="A vector constant whose element type is a simple 1/2/4/8-byte integer or float/double,..."];
  Node90 -> Node95 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node95 [label="llvm::ConstantFP",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ConstantFP.html",tooltip="ConstantFP - Floating Point Values [float, double]."];
  Node90 -> Node96 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node96 [label="llvm::ConstantInt",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ConstantInt.html",tooltip="This is the shared class of boolean and integer constants."];
  Node90 -> Node97 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node97 [label="llvm::ConstantPointerNull",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ConstantPointerNull.html",tooltip="A constant pointer value that points to null."];
  Node90 -> Node98 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node98 [label="llvm::ConstantTokenNone",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ConstantTokenNone.html",tooltip="A constant token which is empty."];
  Node90 -> Node99 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node99 [label="llvm::UndefValue",height=0.2,width=0.4,color="black",URL="$classllvm_1_1UndefValue.html",tooltip="'undef' values are things that do not have specified contents."];
  Node84 -> Node100 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node100 [label="llvm::ConstantExpr",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ConstantExpr.html",tooltip="A constant value that is initialized with an expression using other constant values."];
  Node100 -> Node101 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node101 [label="llvm::BinaryConstantExpr",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BinaryConstantExpr.html",tooltip="BinaryConstantExpr - This class is private to Constants.cpp, and is used behind the scenes to impleme..."];
  Node100 -> Node102 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node102 [label="llvm::CompareConstantExpr",height=0.2,width=0.4,color="black",URL="$classllvm_1_1CompareConstantExpr.html",tooltip=" "];
  Node100 -> Node103 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node103 [label="llvm::ExtractElementConstantExpr",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ExtractElementConstantExpr.html",tooltip="ExtractElementConstantExpr - This class is private to Constants.cpp, and is used behind the scenes to..."];
  Node100 -> Node104 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node104 [label="llvm::ExtractValueConstantExpr",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ExtractValueConstantExpr.html",tooltip="ExtractValueConstantExpr - This class is private to Constants.cpp, and is used behind the scenes to i..."];
  Node100 -> Node105 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node105 [label="llvm::GetElementPtrConstantExpr",height=0.2,width=0.4,color="black",URL="$classllvm_1_1GetElementPtrConstantExpr.html",tooltip="GetElementPtrConstantExpr - This class is private to Constants.cpp, and is used behind the scenes to ..."];
  Node100 -> Node106 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node106 [label="llvm::InsertElementConstantExpr",height=0.2,width=0.4,color="black",URL="$classllvm_1_1InsertElementConstantExpr.html",tooltip="InsertElementConstantExpr - This class is private to Constants.cpp, and is used behind the scenes to ..."];
  Node100 -> Node107 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node107 [label="llvm::InsertValueConstantExpr",height=0.2,width=0.4,color="black",URL="$classllvm_1_1InsertValueConstantExpr.html",tooltip="InsertValueConstantExpr - This class is private to Constants.cpp, and is used behind the scenes to im..."];
  Node100 -> Node108 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node108 [label="llvm::SelectConstantExpr",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SelectConstantExpr.html",tooltip="SelectConstantExpr - This class is private to Constants.cpp, and is used behind the scenes to impleme..."];
  Node100 -> Node109 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node109 [label="llvm::ShuffleVectorConstantExpr",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ShuffleVectorConstantExpr.html",tooltip="ShuffleVectorConstantExpr - This class is private to Constants.cpp, and is used behind the scenes to ..."];
  Node100 -> Node110 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node110 [label="llvm::UnaryConstantExpr",height=0.2,width=0.4,color="black",URL="$classllvm_1_1UnaryConstantExpr.html",tooltip="UnaryConstantExpr - This class is private to Constants.cpp, and is used behind the scenes to implemen..."];
  Node84 -> Node78 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node78 [label="llvm::GlobalValue",height=0.2,width=0.4,color="black",URL="$classllvm_1_1GlobalValue.html",tooltip=" "];
  Node78 -> Node79 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node79 [label="llvm::GlobalIndirectSymbol",height=0.2,width=0.4,color="black",URL="$classllvm_1_1GlobalIndirectSymbol.html",tooltip=" "];
  Node79 -> Node80 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node79 -> Node82 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node78 -> Node75 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node75 [label="llvm::GlobalObject",height=0.2,width=0.4,color="black",URL="$classllvm_1_1GlobalObject.html",tooltip=" "];
  Node75 -> Node74 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node75 -> Node76 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node111 -> Node112 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node112 [label="llvm::DerivedUser",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DerivedUser.html",tooltip="Extension point for the Value hierarchy."];
  Node112 -> Node113 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node111 -> Node120 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node111 -> Node298 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node298 [label="llvm::Operator",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Operator.html",tooltip="This is a utility class that provides an abstraction for the common functionality between Instruction..."];
  Node298 -> Node299 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node299 [label="llvm::ConcreteOperator\l\< Operator, Instruction\l::BitCast \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ConcreteOperator.html",tooltip=" "];
  Node299 -> Node300 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node300 [label="llvm::BitCastOperator",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BitCastOperator.html",tooltip=" "];
  Node298 -> Node301 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node301 [label="llvm::ConcreteOperator\l\< Operator, Instruction\l::GetElementPtr \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ConcreteOperator.html",tooltip=" "];
  Node301 -> Node302 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node302 [label="llvm::GEPOperator",height=0.2,width=0.4,color="black",URL="$classllvm_1_1GEPOperator.html",tooltip=" "];
  Node298 -> Node303 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node303 [label="llvm::ConcreteOperator\l\< Operator, Instruction\l::PtrToInt \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ConcreteOperator.html",tooltip=" "];
  Node303 -> Node304 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node304 [label="llvm::PtrToIntOperator",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PtrToIntOperator.html",tooltip=" "];
  Node298 -> Node305 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node305 [label="llvm::ConcreteOperator\l\< Operator, Instruction\l::ZExt \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ConcreteOperator.html",tooltip=" "];
  Node305 -> Node306 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node306 [label="llvm::ZExtOperator",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ZExtOperator.html",tooltip=" "];
  Node298 -> Node307 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node307 [label="llvm::FPMathOperator",height=0.2,width=0.4,color="black",URL="$classllvm_1_1FPMathOperator.html",tooltip="Utility class for floating point operations which can have information about relaxed accuracy require..."];
  Node298 -> Node308 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node308 [label="llvm::OverflowingBinaryOperator",height=0.2,width=0.4,color="black",URL="$classllvm_1_1OverflowingBinaryOperator.html",tooltip="Utility class for integer operators which may exhibit overflow - Add, Sub, Mul, and Shl."];
  Node308 -> Node309 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node309 [label="llvm::ConcreteOperator\l\< OverflowingBinaryOperator,\l Instruction::Add \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ConcreteOperator.html",tooltip=" "];
  Node309 -> Node310 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node310 [label="llvm::AddOperator",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AddOperator.html",tooltip=" "];
  Node308 -> Node311 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node311 [label="llvm::ConcreteOperator\l\< OverflowingBinaryOperator,\l Instruction::Mul \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ConcreteOperator.html",tooltip=" "];
  Node311 -> Node312 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node312 [label="llvm::MulOperator",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MulOperator.html",tooltip=" "];
  Node308 -> Node313 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node313 [label="llvm::ConcreteOperator\l\< OverflowingBinaryOperator,\l Instruction::Shl \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ConcreteOperator.html",tooltip=" "];
  Node313 -> Node314 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node314 [label="llvm::ShlOperator",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ShlOperator.html",tooltip=" "];
  Node308 -> Node315 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node315 [label="llvm::ConcreteOperator\l\< OverflowingBinaryOperator,\l Instruction::Sub \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ConcreteOperator.html",tooltip=" "];
  Node315 -> Node316 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node316 [label="llvm::SubOperator",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SubOperator.html",tooltip=" "];
  Node298 -> Node317 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node317 [label="llvm::PossiblyExactOperator",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PossiblyExactOperator.html",tooltip="A udiv or sdiv instruction, which can be marked as \"exact\", indicating that no bits are destroyed."];
  Node317 -> Node318 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node318 [label="llvm::ConcreteOperator\l\< PossiblyExactOperator,\l Instruction::AShr \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ConcreteOperator.html",tooltip=" "];
  Node318 -> Node319 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node319 [label="llvm::AShrOperator",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AShrOperator.html",tooltip=" "];
  Node317 -> Node320 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node320 [label="llvm::ConcreteOperator\l\< PossiblyExactOperator,\l Instruction::LShr \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ConcreteOperator.html",tooltip=" "];
  Node320 -> Node321 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node321 [label="llvm::LShrOperator",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LShrOperator.html",tooltip=" "];
  Node317 -> Node322 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node322 [label="llvm::ConcreteOperator\l\< PossiblyExactOperator,\l Instruction::SDiv \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ConcreteOperator.html",tooltip=" "];
  Node322 -> Node323 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node323 [label="llvm::SDivOperator",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SDivOperator.html",tooltip=" "];
  Node317 -> Node324 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node324 [label="llvm::ConcreteOperator\l\< PossiblyExactOperator,\l Instruction::UDiv \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ConcreteOperator.html",tooltip=" "];
  Node324 -> Node325 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node325 [label="llvm::UDivOperator",height=0.2,width=0.4,color="black",URL="$classllvm_1_1UDivOperator.html",tooltip=" "];
  Node396 [label="llvm::ValueHandleBase",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ValueHandleBase.html",tooltip="This is the common base class of value handles."];
  Node396 -> Node397 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node397 [label="llvm::AssertingVH\<\l Instruction \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AssertingVH.html",tooltip=" "];
  Node396 -> Node398 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node398 [label="llvm::AssertingVH\<\l llvm::Value \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AssertingVH.html",tooltip=" "];
  Node396 -> Node399 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node399 [label="llvm::AssertingVH\<\l llvm::BasicBlock \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AssertingVH.html",tooltip=" "];
  Node396 -> Node400 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node400 [label="llvm::AssertingVH\<\l llvm::PHINode \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AssertingVH.html",tooltip=" "];
  Node396 -> Node401 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node401 [label="llvm::AssertingVH\<\l ValueTy \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AssertingVH.html",tooltip="Value handle that asserts if the Value is deleted."];
  Node396 -> Node64 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node64 [label="llvm::CallbackVH",height=0.2,width=0.4,color="black",URL="$classllvm_1_1CallbackVH.html",tooltip="Value handle with callbacks on RAUW and destruction."];
  Node64 -> Node65 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node65 [label="llvm::PoisoningVH\<\l llvm::BasicBlock \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PoisoningVH.html",tooltip=" "];
  Node64 -> Node66 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node64 -> Node392 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node392 [label="llvm::MMIAddrLabelMapCallbackPtr",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MMIAddrLabelMapCallbackPtr.html",tooltip=" "];
  Node64 -> Node393 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node393 [label="llvm::PoisoningVH\<\l ValueTy \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PoisoningVH.html",tooltip="Value handle that poisons itself if the Value is deleted."];
  Node64 -> Node63 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node64 -> Node394 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node394 [label="llvm::ValueMapCallbackVH\l\< KeyT, ValueT, Config \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ValueMapCallbackVH.html",tooltip=" "];
  Node64 -> Node395 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node395 [label="llvm::cflaa::FunctionHandle\l\< AAResult \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1cflaa_1_1FunctionHandle.html",tooltip=" "];
  Node396 -> Node402 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node402 [label="llvm::WeakTrackingVH",height=0.2,width=0.4,color="black",URL="$classllvm_1_1WeakTrackingVH.html",tooltip="Value handle that is nullable, but tries to track the Value."];
  Node396 -> Node403 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node403 [label="llvm::WeakVH",height=0.2,width=0.4,color="black",URL="$classllvm_1_1WeakVH.html",tooltip="A nullable Value handle that is nullable."];
  Node269 [label="llvm::VPValue",height=0.2,width=0.4,color="black",URL="$classllvm_1_1VPValue.html",tooltip=" "];
  Node269 -> Node268 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node268 [label="llvm::VPUser",height=0.2,width=0.4,color="black",URL="$classllvm_1_1VPUser.html",tooltip="This class augments VPValue with operands which provide the inverse def-use edges from VPValue's user..."];
  Node268 -> Node267 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
}
