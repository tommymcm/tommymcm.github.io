digraph "LLVM-C: C interface to LLVM"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape="box"];
  rankdir=LR;
  Node1 [label="LLVM-C: C interface\l to LLVM",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="This module exposes parts of the LLVM library as a C API."];
  Node2 [label="Analysis",height=0.2,width=0.4,color="black",URL="$group__LLVMCAnalysis.html",tooltip=" "];
  Node3 [label="Bit Reader",height=0.2,width=0.4,color="black",URL="$group__LLVMCBitReader.html",tooltip=" "];
  Node4 [label="Bit Writer",height=0.2,width=0.4,color="black",URL="$group__LLVMCBitWriter.html",tooltip=" "];
  Node6 [label="Core",height=0.2,width=0.4,color="black",URL="$group__LLVMCCore.html",tooltip="This modules provide an interface to libLLVMCore, which implements the LLVM intermediate representati..."];
  Node7 [label="Instruction Builders",height=0.2,width=0.4,color="black",URL="$group__LLVMCCoreInstructionBuilder.html",tooltip="An instruction builder represents a point within a basic block and is the exclusive means of building..."];
  Node9 [label="Memory Buffers",height=0.2,width=0.4,color="black",URL="$group__LLVMCCoreMemoryBuffers.html",tooltip=" "];
  Node8 [label="Module Providers",height=0.2,width=0.4,color="black",URL="$group__LLVMCCoreModuleProvider.html",tooltip=" "];
  Node11 [label="Pass Managers",height=0.2,width=0.4,color="black",URL="$group__LLVMCCorePassManagers.html",tooltip=" "];
  Node10 [label="Pass Registry",height=0.2,width=0.4,color="black",URL="$group__LLVMCCorePassRegistry.html",tooltip=" "];
  Node12 [label="Threading",height=0.2,width=0.4,color="black",URL="$group__LLVMCCoreThreading.html",tooltip="Handle the structures needed to make LLVM safe for multithreading."];
  Node13 [label="Disassembler",height=0.2,width=0.4,color="black",URL="$group__LLVMCDisassembler.html",tooltip=" "];
  Node14 [label="Execution Engine",height=0.2,width=0.4,color="black",URL="$group__LLVMCExecutionEngine.html",tooltip=" "];
  Node15 [label="Initialization Routines",height=0.2,width=0.4,color="black",URL="$group__LLVMCInitialization.html",tooltip="This module contains routines used to initialize the LLVM system."];
  Node17 [label="LTO",height=0.2,width=0.4,color="black",URL="$group__LLVMCLTO.html",tooltip=" "];
  Node16 [label="Link Time Optimization",height=0.2,width=0.4,color="black",URL="$group__LLVMCLinkTimeOptimizer.html",tooltip=" "];
  Node19 [label="Object file reading\l and writing",height=0.2,width=0.4,color="black",URL="$group__LLVMCObject.html",tooltip=" "];
  Node20 [label="Remarks",height=0.2,width=0.4,color="black",URL="$group__LLVMCREMARKS.html",tooltip=" "];
  Node18 [label="ThinLTO",height=0.2,width=0.4,color="black",URL="$group__LLVMCTLTO.html",tooltip="// endgoup LLVMCLTO"];
  Node21 [label="Target information",height=0.2,width=0.4,color="black",URL="$group__LLVMCTarget.html",tooltip=" "];
  Node5 [label="Transforms",height=0.2,width=0.4,color="black",URL="$group__LLVMCTransforms.html",tooltip=" "];
  Node1->Node2 [shape=plaintext, dir="back", style="solid"];
  Node1->Node3 [shape=plaintext, dir="back", style="solid"];
  Node1->Node4 [shape=plaintext, dir="back", style="solid"];
  Node1->Node5 [shape=plaintext, dir="back", style="solid"];
  Node1->Node6 [shape=plaintext, dir="back", style="solid"];
  Node1->Node7 [shape=plaintext, dir="back", style="solid"];
  Node1->Node8 [shape=plaintext, dir="back", style="solid"];
  Node1->Node9 [shape=plaintext, dir="back", style="solid"];
  Node1->Node10 [shape=plaintext, dir="back", style="solid"];
  Node1->Node11 [shape=plaintext, dir="back", style="solid"];
  Node1->Node12 [shape=plaintext, dir="back", style="solid"];
  Node1->Node13 [shape=plaintext, dir="back", style="solid"];
  Node1->Node14 [shape=plaintext, dir="back", style="solid"];
  Node1->Node15 [shape=plaintext, dir="back", style="solid"];
  Node1->Node16 [shape=plaintext, dir="back", style="solid"];
  Node1->Node17 [shape=plaintext, dir="back", style="solid"];
  Node1->Node18 [shape=plaintext, dir="back", style="solid"];
  Node1->Node19 [shape=plaintext, dir="back", style="solid"];
  Node1->Node20 [shape=plaintext, dir="back", style="solid"];
  Node1->Node21 [shape=plaintext, dir="back", style="solid"];
}
