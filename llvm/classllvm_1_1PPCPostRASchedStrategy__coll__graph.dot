digraph "llvm::PPCPostRASchedStrategy"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape="box"];
  rankdir="LR";
  Node1 [label="llvm::PPCPostRASchedStrategy",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="A MachineSchedStrategy implementation for PowerPC post RA scheduling."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="llvm::PostGenericScheduler",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PostGenericScheduler.html",tooltip="PostGenericScheduler - Interface to the scheduling algorithm used by ScheduleDAGMI."];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="llvm::GenericSchedulerBase",height=0.2,width=0.4,color="black",URL="$classllvm_1_1GenericSchedulerBase.html",tooltip="Base class for GenericScheduler."];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="llvm::MachineSchedStrategy",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineSchedStrategy.html",tooltip="MachineSchedStrategy - Interface to the scheduling algorithm used by ScheduleDAGMI."];
  Node5 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Context" ,fontname="Helvetica"];
  Node5 [label="llvm::MachineSchedContext",height=0.2,width=0.4,color="black",URL="$structllvm_1_1MachineSchedContext.html",tooltip="MachineSchedContext provides enough context from the MachineScheduler pass for the target to instanti..."];
  Node6 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MF" ,fontname="Helvetica"];
  Node6 [label="llvm::MachineFunction",height=0.2,width=0.4,color="red",URL="$classllvm_1_1MachineFunction.html",tooltip=" "];
  Node23 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MLI" ,fontname="Helvetica"];
  Node23 [label="llvm::MachineLoopInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineLoopInfo.html",tooltip=" "];
  Node24 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="llvm::MachineFunctionPass",height=0.2,width=0.4,color="red",URL="$classllvm_1_1MachineFunctionPass.html",tooltip="MachineFunctionPass - This class adapts the FunctionPass interface to allow convenient creation of pa..."];
  Node17 -> Node23 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ID" ,fontname="Helvetica"];
  Node17 [label="char",height=0.2,width=0.4,color="black",URL="$classchar.html",tooltip=" "];
  Node27 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MDT" ,fontname="Helvetica"];
  Node27 [label="llvm::MachineDominatorTree",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineDominatorTree.html",tooltip="DominatorTree Class - Concrete subclass of DominatorTreeBase that is used to compute a normal dominat..."];
  Node24 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 -> Node27 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ID" ,fontname="Helvetica"];
  Node28 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" PassConfig" ,fontname="Helvetica"];
  Node28 [label="llvm::TargetPassConfig",height=0.2,width=0.4,color="red",URL="$classllvm_1_1TargetPassConfig.html",tooltip="Target-Independent Code Generator Pass Configuration Options."];
  Node55 -> Node28 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DisableVerify\nEnableTailMerge\nInitialized\nRequireCodeGenSCCOrder" ,fontname="Helvetica"];
  Node55 [label="bool",height=0.2,width=0.4,color="black",URL="$classbool.html",tooltip=" "];
  Node17 -> Node28 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ID" ,fontname="Helvetica"];
  Node67 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AA" ,fontname="Helvetica"];
  Node67 [label="llvm::AAResults",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AAResults.html",tooltip=" "];
  Node68 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LIS" ,fontname="Helvetica"];
  Node68 [label="llvm::LiveIntervals",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LiveIntervals.html",tooltip=" "];
  Node24 -> Node68 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 -> Node68 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ID" ,fontname="Helvetica"];
  Node69 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" RegClassInfo" ,fontname="Helvetica"];
  Node69 [label="llvm::RegisterClassInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1RegisterClassInfo.html",tooltip=" "];
  Node70 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SchedModel" ,fontname="Helvetica"];
  Node70 [label="llvm::TargetSchedModel",height=0.2,width=0.4,color="black",URL="$classllvm_1_1TargetSchedModel.html",tooltip="Provide an instruction scheduling machine model to CodeGen passes."];
  Node71 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TRI" ,fontname="Helvetica"];
  Node71 [label="llvm::TargetRegisterInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1TargetRegisterInfo.html",tooltip="TargetRegisterInfo base class - We assume that the target defines a static array of TargetRegisterDes..."];
  Node72 -> Node71 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node72 [label="llvm::MCRegisterInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MCRegisterInfo.html",tooltip="MCRegisterInfo base class - We assume that the target defines a static array of MCRegisterDesc object..."];
  Node73 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Rem" ,fontname="Helvetica"];
  Node73 [label="llvm::SchedRemainder",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SchedRemainder.html",tooltip="Summarize the unscheduled region."];
  Node13 -> Node73 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CriticalPath\nCyclicCritPath\nRemIssueCount" ,fontname="Helvetica"];
  Node13 [label="unsigned",height=0.2,width=0.4,color="black",URL="$classunsigned.html",tooltip=" "];
  Node55 -> Node73 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" IsAcyclicLatencyLimited" ,fontname="Helvetica"];
  Node74 -> Node73 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" RemainingCounts" ,fontname="Helvetica"];
  Node74 [label="llvm::SmallVector\<\l unsigned, 16 \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node20 -> Node74 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< unsigned, 16 \>" ,fontname="Helvetica"];
  Node20 [label="llvm::SmallVector\<\l T, N \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SmallVector.html",tooltip="This is a 'vector' (really, a variable-sized array), optimized for the case when the array is small."];
  Node77 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DAG" ,fontname="Helvetica"];
  Node77 [label="llvm::ScheduleDAGMI",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ScheduleDAGMI.html",tooltip="ScheduleDAGMI is an implementation of ScheduleDAGInstrs that simply schedules machine instructions ac..."];
  Node78 -> Node77 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node78 [label="llvm::ScheduleDAGInstrs",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ScheduleDAGInstrs.html",tooltip="A ScheduleDAG for scheduling lists of MachineInstr."];
  Node79 -> Node78 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node79 [label="llvm::ScheduleDAG",height=0.2,width=0.4,color="red",URL="$classllvm_1_1ScheduleDAG.html",tooltip=" "];
  Node71 -> Node79 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TRI" ,fontname="Helvetica"];
  Node6 -> Node79 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MF" ,fontname="Helvetica"];
  Node84 -> Node79 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" EntrySU\nExitSU" ,fontname="Helvetica"];
  Node84 [label="llvm::SUnit",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SUnit.html",tooltip="Scheduling unit. This is a node in the scheduling DAG."];
  Node84 -> Node84 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" OrigNode" ,fontname="Helvetica"];
  Node85 -> Node84 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SchedClass" ,fontname="Helvetica"];
  Node85 [label="llvm::MCSchedClassDesc",height=0.2,width=0.4,color="red",URL="$structllvm_1_1MCSchedClassDesc.html",tooltip="Summarize the scheduling resources required for an instruction of a particular scheduling class."];
  Node13 -> Node85 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InvalidNumMicroOps\nVariantNumMicroOps" ,fontname="Helvetica"];
  Node17 -> Node85 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Name" ,fontname="Helvetica"];
  Node55 -> Node85 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BeginGroup\nEndGroup" ,fontname="Helvetica"];
  Node87 -> Node84 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Preds\nSuccs" ,fontname="Helvetica"];
  Node87 [label="llvm::SmallVector\<\l llvm::SDep, 4 \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node20 -> Node87 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::SDep, 4 \>" ,fontname="Helvetica"];
  Node13 -> Node84 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BotReadyCycle\nLatency\nNodeNum\nNodeQueueId\nNumPreds\nNumPredsLeft\nNumRegDefsLeft\nNumSuccs\nNumSuccsLeft\nTopReadyCycle\n..." ,fontname="Helvetica"];
  Node55 -> Node84 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" hasPhysRegClobbers\nhasPhysRegDefs\nhasPhysRegUses\nhasReservedResource\nisAvailable\nisCall\nisCallOp\nisCloned\nisCommutable\nisPending\n..." ,fontname="Helvetica"];
  Node55 -> Node79 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" StressSched" ,fontname="Helvetica"];
  Node23 -> Node78 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MLI" ,fontname="Helvetica"];
  Node100 -> Node78 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MFI" ,fontname="Helvetica"];
  Node100 [label="llvm::MachineFrameInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineFrameInfo.html",tooltip="The MachineFrameInfo class represents an abstract stack frame until prolog/epilog code is inserted."];
  Node70 -> Node78 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SchedModel" ,fontname="Helvetica"];
  Node55 -> Node78 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CanHandleTerminators\nRemoveKillFlags\nTrackLaneMasks" ,fontname="Helvetica"];
  Node101 -> Node78 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BB" ,fontname="Helvetica"];
  Node101 [label="llvm::MachineBasicBlock",height=0.2,width=0.4,color="red",URL="$classllvm_1_1MachineBasicBlock.html",tooltip=" "];
  Node111 -> Node78 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" RegionBegin\nRegionEnd" ,fontname="Helvetica"];
  Node111 [label="llvm::MachineInstrBundle\lIterator\< MachineInstr \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineInstrBundleIterator.html",tooltip=" "];
  Node112 -> Node111 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node112 [label="llvm::MachineInstrBundle\lIteratorHelper\< IsReverse \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1MachineInstrBundleIteratorHelper.html",tooltip=" "];
  Node113 -> Node111 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< MachineInstr \>" ,fontname="Helvetica"];
  Node113 [label="llvm::MachineInstrBundle\lIterator\< Ty, IsReverse \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineInstrBundleIterator.html",tooltip="MachineBasicBlock iterator that automatically skips over MIs that are inside bundles (i...."];
  Node112 -> Node113 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 -> Node78 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NumRegionInstrs" ,fontname="Helvetica"];
  Node114 -> Node78 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MISUnitMap" ,fontname="Helvetica"];
  Node114 [label="llvm::DenseMap\< llvm\l::MachineInstr *, llvm\l::SUnit * \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1DenseMap.html",tooltip=" "];
  Node116 -> Node78 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Defs\nUses" ,fontname="Helvetica"];
  Node116 [label="llvm::SparseMultiSet\l\< PhysRegSUOper, identity\l\< unsigned \>, uint16_t \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SparseMultiSet.html",tooltip=" "];
  Node118 -> Node78 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CurrentVRegDefs" ,fontname="Helvetica"];
  Node118 [label="llvm::SparseMultiSet\l\< VReg2SUnit, VirtReg2Index\lFunctor \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SparseMultiSet.html",tooltip=" "];
  Node119 -> Node78 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CurrentVRegUses" ,fontname="Helvetica"];
  Node119 [label="llvm::SparseMultiSet\l\< VReg2SUnitOperIdx,\l VirtReg2IndexFunctor \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SparseMultiSet.html",tooltip=" "];
  Node67 -> Node78 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AAForDep" ,fontname="Helvetica"];
  Node84 -> Node78 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BarrierChain" ,fontname="Helvetica"];
  Node120 -> Node78 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" UnknownValue" ,fontname="Helvetica"];
  Node120 [label="llvm::UndefValue",height=0.2,width=0.4,color="red",URL="$classllvm_1_1UndefValue.html",tooltip="'undef' values are things that do not have specified contents."];
  Node125 -> Node78 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Topo" ,fontname="Helvetica"];
  Node125 [label="llvm::ScheduleDAGTopologicalSort",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ScheduleDAGTopologicalSort.html",tooltip="This class can compute a topological ordering for SUnits and provides methods for dynamically updatin..."];
  Node126 -> Node78 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DbgValues" ,fontname="Helvetica"];
  Node126 [label="vector\< std::pair\<\l MachineInstr *, MachineInstr * \> \>",height=0.2,width=0.4,color="black",tooltip=" "];
  Node127 -> Node78 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" FirstDbgValue" ,fontname="Helvetica"];
  Node127 [label="llvm::MachineInstr",height=0.2,width=0.4,color="red",URL="$classllvm_1_1MachineInstr.html",tooltip="Representation of each machine instruction."];
  Node130 -> Node78 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LiveRegs" ,fontname="Helvetica"];
  Node130 [label="llvm::LivePhysRegs",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LivePhysRegs.html",tooltip="A set of physical registers with utility functions to track liveness when walking backward/forward th..."];
  Node67 -> Node77 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AA" ,fontname="Helvetica"];
  Node68 -> Node77 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LIS" ,fontname="Helvetica"];
  Node131 -> Node77 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SchedImpl" ,fontname="Helvetica"];
  Node131 [label="unique_ptr\< llvm::Machine\lSchedStrategy \>",height=0.2,width=0.4,color="black",tooltip=" "];
  Node132 -> Node77 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Mutations" ,fontname="Helvetica"];
  Node132 [label="vector\< std::unique\l_ptr\< llvm::ScheduleDAGMutation \> \>",height=0.2,width=0.4,color="black",tooltip=" "];
  Node111 -> Node77 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CurrentBottom\nCurrentTop" ,fontname="Helvetica"];
  Node84 -> Node77 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NextClusterPred\nNextClusterSucc" ,fontname="Helvetica"];
  Node13 -> Node77 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NumInstrsScheduled" ,fontname="Helvetica"];
  Node133 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Top" ,fontname="Helvetica"];
  Node133 [label="llvm::SchedBoundary",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SchedBoundary.html",tooltip="Each Scheduling boundary is associated with ready queues."];
  Node77 -> Node133 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DAG" ,fontname="Helvetica"];
  Node70 -> Node133 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SchedModel" ,fontname="Helvetica"];
  Node73 -> Node133 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Rem" ,fontname="Helvetica"];
  Node134 -> Node133 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Available\nPending" ,fontname="Helvetica"];
  Node134 [label="llvm::ReadyQueue",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ReadyQueue.html",tooltip="Helpers for implementing custom MachineSchedStrategy classes."];
  Node135 -> Node133 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" HazardRec" ,fontname="Helvetica"];
  Node135 [label="llvm::ScheduleHazardRecognizer",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ScheduleHazardRecognizer.html",tooltip="HazardRecognizer - This determines whether or not an instruction can be issued this cycle,..."];
  Node13 -> Node135 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MaxLookAhead" ,fontname="Helvetica"];
  Node136 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BotRoots" ,fontname="Helvetica"];
  Node136 [label="llvm::SmallVector\<\l llvm::SUnit *, 8 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node137 -> Node136 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node137 [label="llvm::SmallVectorImpl\< T \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SmallVectorImpl.html",tooltip="This class consists of common code factored out of the SmallVector class to reduce code duplication b..."];
  Node138 -> Node136 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node138 [label="llvm::SmallVectorStorage\l\< T, N \>",height=0.2,width=0.4,color="red",URL="$structllvm_1_1SmallVectorStorage.html",tooltip="Storage for the SmallVector elements."];
  Node20 -> Node136 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::SUnit *, 8 \>" ,fontname="Helvetica"];
}
