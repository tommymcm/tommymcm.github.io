digraph "llvm::IVVisitor"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape="box"];
  rankdir="LR";
  Node1 [label="llvm::IVVisitor",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Interface for visiting interesting IV users that are recognized but not simplified by this utility."];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DT" ,fontname="Helvetica"];
  Node2 [label="llvm::DominatorTree",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DominatorTree.html",tooltip="Concrete subclass of DominatorTreeBase that is used to compute a normal dominator tree."];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="llvm::DominatorTreeBase\l\< BasicBlock, false \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DominatorTreeBase.html",tooltip=" "];
  Node4 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DFSInfoValid\nIsPostDominator" ,fontname="Helvetica"];
  Node4 [label="bool",height=0.2,width=0.4,color="black",URL="$classbool.html",tooltip=" "];
  Node5 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Delete\nInsert" ,fontname="Helvetica"];
  Node5 [label="static constexpr UpdateKind",height=0.2,width=0.4,color="black",tooltip=" "];
  Node6 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Roots" ,fontname="Helvetica"];
  Node6 [label="llvm::SmallVector\<\l BasicBlock *, IsPostDom\l ? 4 :1 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node7 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="llvm::SmallVectorImpl\< T \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip="This class consists of common code factored out of the SmallVector class to reduce code duplication b..."];
  Node8 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="llvm::SmallVectorTemplate\lBase\< T, bool \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorTemplateBase.html",tooltip="SmallVectorTemplateBase<TriviallyCopyable = false> - This is where we put method implementations that..."];
  Node9 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="llvm::SmallVectorTemplate\lCommon\< T, typename \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorTemplateCommon.html",tooltip="This is the part of SmallVectorTemplateBase which does not depend on whether the type T is a POD."];
  Node10 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="llvm::SmallVectorBase",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorBase.html",tooltip="This is all the non-templated stuff common to all SmallVectors."];
  Node11 -> Node10 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BeginX" ,fontname="Helvetica"];
  Node11 [label="void *",height=0.2,width=0.4,color="black",tooltip=" "];
  Node12 -> Node10 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Capacity\nSize" ,fontname="Helvetica"];
  Node12 [label="unsigned",height=0.2,width=0.4,color="black",URL="$classunsigned.html",tooltip=" "];
  Node13 -> Node6 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="llvm::SmallVectorStorage\l\< T, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip="Storage for the SmallVector elements."];
  Node14 -> Node13 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node14 [label="llvm::AlignedCharArrayUnion\< T \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1AlignedCharArrayUnion.html",tooltip=" "];
  Node15 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="llvm::AlignedCharArray\l\< Alignment, Size \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1AlignedCharArray.html",tooltip="Helper for building an aligned character array type."];
  Node16 -> Node15 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" buffer" ,fontname="Helvetica"];
  Node16 [label="char",height=0.2,width=0.4,color="black",URL="$classchar.html",tooltip=" "];
  Node17 -> Node14 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< T \>" ,fontname="Helvetica"];
  Node17 [label="llvm::AlignedCharArrayUnion\l\< T1, T2, T3, T4, T5, T6,\l T7, T8, T9, T10 \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1AlignedCharArrayUnion.html",tooltip="This union template exposes a suitably aligned and sized character array member which can hold elemen..."];
  Node18 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="llvm::AlignedCharArray\l\< Alignment, Size \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1AlignedCharArray.html",tooltip="Helper for building an aligned character array type."];
  Node16 -> Node18 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" buffer" ,fontname="Helvetica"];
  Node19 -> Node6 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< BasicBlock *, IsPostDom\l ? 4 :1 \>" ,fontname="Helvetica"];
  Node19 [label="llvm::SmallVector\<\l T, N \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip="This is a 'vector' (really, a variable-sized array), optimized for the case when the array is small."];
  Node20 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="llvm::SmallVectorImpl\< T \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip="This class consists of common code factored out of the SmallVector class to reduce code duplication b..."];
  Node8 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 -> Node19 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="llvm::SmallVectorStorage\l\< T, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip="Storage for the SmallVector elements."];
  Node14 -> Node21 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node22 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DomTreeNodes" ,fontname="Helvetica"];
  Node22 [label="llvm::DenseMap\< BasicBlock\l *, std::unique_ptr\< DomTreeNode\lBase\< BasicBlock \> \> \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DenseMap.html",tooltip=" "];
  Node23 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="llvm::DenseMapBase\l\< DerivedT, KeyT, ValueT,\l KeyInfoT, BucketT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DenseMapBase.html",tooltip=" "];
  Node24 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="llvm::DebugEpochBase",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DebugEpochBase.html",tooltip=" "];
  Node25 -> Node22 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< BasicBlock *, std\l::unique_ptr\< DomTreeNodeBase\l\< BasicBlock \> \> \>" ,fontname="Helvetica"];
  Node25 [label="llvm::DenseMap\< KeyT,\l ValueT, KeyInfoT, BucketT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DenseMap.html",tooltip=" "];
  Node26 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="llvm::DenseMapBase\l\< DerivedT, KeyT, ValueT,\l KeyInfoT, BucketT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DenseMapBase.html",tooltip=" "];
  Node24 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" RootNode" ,fontname="Helvetica"];
  Node27 [label="llvm::DomTreeNodeBase\l\< BasicBlock \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DomTreeNodeBase.html",tooltip=" "];
  Node28 -> Node27 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< BasicBlock \>" ,fontname="Helvetica"];
  Node28 [label="llvm::DomTreeNodeBase\l\< NodeT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DomTreeNodeBase.html",tooltip="Base class for the actual dominator tree node."];
  Node29 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Parent" ,fontname="Helvetica"];
  Node29 [label="declval\< BasicBlock\l * \>() -\>getParent())",height=0.2,width=0.4,color="black",URL="$classdecltype_07std_1_1declval_3_01BasicBlock_01_5_01_4_07_08_01-_4getParent_07_08_08.html",tooltip=" "];
  Node12 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SlowQueries" ,fontname="Helvetica"];
  Node30 -> Node3 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< BasicBlock, false \>" ,fontname="Helvetica"];
  Node30 [label="llvm::DominatorTreeBase\l\< NodeT, IsPostDom \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DominatorTreeBase.html",tooltip="Core dominator tree base class."];
  Node4 -> Node30 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DFSInfoValid\nIsPostDominator" ,fontname="Helvetica"];
  Node5 -> Node30 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Delete\nInsert" ,fontname="Helvetica"];
  Node31 -> Node30 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Roots" ,fontname="Helvetica"];
  Node31 [label="llvm::SmallVector\<\l NodeT *, IsPostDom\l ? 4 :1 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node32 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node32 [label="llvm::SmallVectorImpl\< T \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip="This class consists of common code factored out of the SmallVector class to reduce code duplication b..."];
  Node8 -> Node32 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 -> Node31 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 [label="llvm::SmallVectorStorage\l\< T, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip="Storage for the SmallVector elements."];
  Node14 -> Node33 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node19 -> Node31 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< NodeT *, IsPostDom\l ? 4 :1 \>" ,fontname="Helvetica"];
  Node34 -> Node30 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DomTreeNodes" ,fontname="Helvetica"];
  Node34 [label="llvm::DenseMap\< NodeT\l *, std::unique_ptr\<\l DomTreeNodeBase\< NodeT \> \> \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DenseMap.html",tooltip=" "];
  Node35 -> Node34 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node35 [label="llvm::DenseMapBase\l\< DerivedT, KeyT, ValueT,\l KeyInfoT, BucketT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DenseMapBase.html",tooltip=" "];
  Node24 -> Node35 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 -> Node34 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< NodeT *, std::unique\l_ptr\< DomTreeNodeBase\l\< NodeT \> \> \>" ,fontname="Helvetica"];
  Node36 -> Node30 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" RootNode" ,fontname="Helvetica"];
  Node36 [label="DomTreeNodeBase\< NodeT \> *",height=0.2,width=0.4,color="black",tooltip=" "];
  Node37 -> Node30 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Parent" ,fontname="Helvetica"];
  Node37 [label="declval\< NodeT * \>\l() -\>getParent())",height=0.2,width=0.4,color="black",tooltip=" "];
  Node12 -> Node30 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SlowQueries" ,fontname="Helvetica"];
}
