digraph "Graphical Class Hierarchy"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape="box"];
  rankdir="LR";
  Node0 [label="llvm::ilist_detail\l::explicitness\< IsExplicit \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1ilist__detail_1_1explicitness.html",tooltip="Helper trait for recording whether an option is specified explicitly."];
  Node0 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 [label="llvm::ilist_detail\l::extract_sentinel_tracking\l\< ilist_sentinel_tracking\l\< EnableSentinelTracking \>\l, Options... \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1ilist__detail_1_1extract__sentinel__tracking_3_01ilist__sentinel__tracking_3_01Enad8d94c5ce1ebbb4f62b588c4bdfec7d2.html",tooltip=" "];
  Node0 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="llvm::ilist_detail\l::extract_sentinel_tracking\<\>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1ilist__detail_1_1extract__sentinel__tracking_3_4.html",tooltip=" "];
  Node23 [label="std::false_type",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node23 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="llvm::dwarf::EnumTraits\l\< Enum \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1dwarf_1_1EnumTraits.html",tooltip=" "];
  Node23 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="llvm::ilist_detail\l::is_valid_option\< Option \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1ilist__detail_1_1is__valid__option.html",tooltip="Check whether an option is valid."];
  Node23 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="llvm::is_bitmask_enum\l\< E, Enable \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1is__bitmask__enum.html",tooltip="Traits class to determine whether an enum has a LLVM_BITMASK_LARGEST_ENUMERATOR enumerator."];
  Node23 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="llvm::is_trivially\l_copy_constructible\l\< T && \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1is__trivially__copy__constructible_3_01T_01_6_6_01_4.html",tooltip=" "];
  Node2 [label="std::integral_constant",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node2 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="llvm::detail::ConstantLog2\< N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1detail_1_1ConstantLog2.html",tooltip="A tiny meta function to compute the log2 of a compile time constant."];
  Node2 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="llvm::detail::ConstantLog2\< 1 \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1detail_1_1ConstantLog2_3_011_01_4.html",tooltip=" "];
  Node2 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="llvm::detail::PointerSum\lTypeHelper\< TagT, MemberTs\l \>::Min\< V \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1detail_1_1PointerSumTypeHelper_1_1Min_3_01V_01_4.html",tooltip=" "];
  Node2 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="llvm::detail::is_cstring\< T \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1detail_1_1is__cstring.html",tooltip=" "];
  Node2 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="llvm::detail::range\l_item_has_provider\<\l IterT \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1detail_1_1range__item__has__provider.html",tooltip=" "];
  Node2 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="llvm::detail::use_char\l_formatter\< T \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1detail_1_1use__char__formatter.html",tooltip=" "];
  Node2 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="llvm::detail::use_double\l_formatter\< T \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1detail_1_1use__double__formatter.html",tooltip=" "];
  Node2 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="llvm::detail::use_integral\l_formatter\< T \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1detail_1_1use__integral__formatter.html",tooltip=" "];
  Node2 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="llvm::detail::use_pointer\l_formatter\< T \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1detail_1_1use__pointer__formatter.html",tooltip=" "];
  Node2 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="llvm::detail::use_string\l_formatter\< T \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1detail_1_1use__string__formatter.html",tooltip=" "];
  Node2 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="llvm::detail::uses\l_format_member\< T \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1detail_1_1uses__format__member.html",tooltip=" "];
  Node2 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="llvm::detail::uses\l_format_provider\< T \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1detail_1_1uses__format__provider.html",tooltip=" "];
  Node2 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="llvm::detail::uses\l_missing_provider\< T \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1detail_1_1uses__missing__provider.html",tooltip=" "];
  Node2 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="llvm::detail::uses\l_stream_operator\< T \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1detail_1_1uses__stream__operator.html",tooltip=" "];
  Node2 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="llvm::hashing::detail\l::is_hashable_data\< T \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1hashing_1_1detail_1_1is__hashable__data.html",tooltip="Trait to indicate whether a type's bits can be hashed directly."];
  Node2 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="llvm::hashing::detail\l::is_hashable_data\< std\l::pair\< T, U \> \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1hashing_1_1detail_1_1is__hashable__data_3_01std_1_1pair_3_01T_00_01U_01_4_01_4.html",tooltip=" "];
  Node2 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="llvm::ilist_detail\l::check_options\< Option1,\l Options... \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1ilist__detail_1_1check__options_3_01Option1_00_01Options_8_8_8_01_4.html",tooltip=" "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="llvm::negation\< T \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1negation.html",tooltip=" "];
  Node2 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="llvm::parallel::is\l_execution_policy\< T \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1parallel_1_1is__execution__policy.html",tooltip=" "];
}
