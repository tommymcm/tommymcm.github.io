digraph "llvm::GCNIterativeScheduler"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape="box"];
  rankdir="LR";
  Node1 [label="llvm::GCNIterativeScheduler",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="llvm::ScheduleDAGMILive",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ScheduleDAGMILive.html",tooltip="ScheduleDAGMILive is an implementation of ScheduleDAGInstrs that schedules machine instructions while..."];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="llvm::ScheduleDAGMI",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ScheduleDAGMI.html",tooltip="ScheduleDAGMI is an implementation of ScheduleDAGInstrs that simply schedules machine instructions ac..."];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="llvm::ScheduleDAGInstrs",height=0.2,width=0.4,color="red",URL="$classllvm_1_1ScheduleDAGInstrs.html",tooltip="A ScheduleDAG for scheduling lists of MachineInstr."];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="llvm::ScheduleDAG",height=0.2,width=0.4,color="red",URL="$classllvm_1_1ScheduleDAG.html",tooltip=" "];
  Node6 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TM" ,fontname="Helvetica"];
  Node6 [label="llvm::LLVMTargetMachine",height=0.2,width=0.4,color="red",URL="$classllvm_1_1LLVMTargetMachine.html",tooltip="This class describes a target machine that is implemented with the LLVM target-independent code gener..."];
  Node38 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MF" ,fontname="Helvetica"];
  Node38 [label="llvm::MachineFunction",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineFunction.html",tooltip=" "];
  Node39 -> Node38 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" VariableDbgInfos" ,fontname="Helvetica"];
  Node39 [label="llvm::SmallVector\<\l VariableDbgInfo, 4 \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node54 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MRI" ,fontname="Helvetica"];
  Node54 [label="llvm::MachineRegisterInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineRegisterInfo.html",tooltip="MachineRegisterInfo - Keep track of information for virtual and physical registers,..."];
  Node56 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" EntrySU\nExitSU" ,fontname="Helvetica"];
  Node56 [label="llvm::SUnit",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SUnit.html",tooltip="Scheduling unit. This is a node in the scheduling DAG."];
  Node56 -> Node56 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" OrigNode" ,fontname="Helvetica"];
  Node19 -> Node56 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BotReadyCycle\nLatency\nNodeNum\nNodeQueueId\nNumPreds\nNumPredsLeft\nNumRegDefsLeft\nNumSuccs\nNumSuccsLeft\nTopReadyCycle\n..." ,fontname="Helvetica"];
  Node19 [label="unsigned",height=0.2,width=0.4,color="black",URL="$classunsigned.html",tooltip=" "];
  Node31 -> Node56 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" hasPhysRegClobbers\nhasPhysRegDefs\nhasPhysRegUses\nhasReservedResource\nisAvailable\nisCall\nisCallOp\nisCloned\nisCommutable\nisPending\n..." ,fontname="Helvetica"];
  Node31 [label="bool",height=0.2,width=0.4,color="black",URL="$classbool.html",tooltip=" "];
  Node31 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" StressSched" ,fontname="Helvetica"];
  Node72 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MLI" ,fontname="Helvetica"];
  Node72 [label="llvm::MachineLoopInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineLoopInfo.html",tooltip=" "];
  Node73 -> Node72 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node73 [label="llvm::MachineFunctionPass",height=0.2,width=0.4,color="red",URL="$classllvm_1_1MachineFunctionPass.html",tooltip="MachineFunctionPass - This class adapts the FunctionPass interface to allow convenient creation of pa..."];
  Node48 -> Node72 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ID" ,fontname="Helvetica"];
  Node48 [label="char",height=0.2,width=0.4,color="black",URL="$classchar.html",tooltip=" "];
  Node76 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MFI" ,fontname="Helvetica"];
  Node76 [label="llvm::MachineFrameInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineFrameInfo.html",tooltip="The MachineFrameInfo class represents an abstract stack frame until prolog/epilog code is inserted."];
  Node77 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SchedModel" ,fontname="Helvetica"];
  Node77 [label="llvm::TargetSchedModel",height=0.2,width=0.4,color="black",URL="$classllvm_1_1TargetSchedModel.html",tooltip="Provide an instruction scheduling machine model to CodeGen passes."];
  Node31 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CanHandleTerminators\nRemoveKillFlags\nTrackLaneMasks" ,fontname="Helvetica"];
  Node78 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BB" ,fontname="Helvetica"];
  Node78 [label="llvm::MachineBasicBlock",height=0.2,width=0.4,color="red",URL="$classllvm_1_1MachineBasicBlock.html",tooltip=" "];
  Node88 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" RegionBegin\nRegionEnd" ,fontname="Helvetica"];
  Node88 [label="llvm::MachineInstrBundle\lIterator\< MachineInstr \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineInstrBundleIterator.html",tooltip=" "];
  Node89 -> Node88 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node89 [label="llvm::MachineInstrBundle\lIteratorHelper\< IsReverse \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1MachineInstrBundleIteratorHelper.html",tooltip=" "];
  Node90 -> Node88 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< MachineInstr \>" ,fontname="Helvetica"];
  Node90 [label="llvm::MachineInstrBundle\lIterator\< Ty, IsReverse \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineInstrBundleIterator.html",tooltip="MachineBasicBlock iterator that automatically skips over MIs that are inside bundles (i...."];
  Node89 -> Node90 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NumRegionInstrs" ,fontname="Helvetica"];
  Node98 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CurrentVRegDefs" ,fontname="Helvetica"];
  Node98 [label="llvm::SparseMultiSet\l\< VReg2SUnit, VirtReg2Index\lFunctor \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SparseMultiSet.html",tooltip=" "];
  Node97 -> Node98 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< VReg2SUnit, VirtReg2Index\lFunctor \>" ,fontname="Helvetica"];
  Node97 [label="llvm::SparseMultiSet\l\< ValueT, KeyFunctorT,\l SparseT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SparseMultiSet.html",tooltip="Fast multiset implementation for objects that can be identified by small unsigned keys."];
  Node100 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AAForDep" ,fontname="Helvetica"];
  Node100 [label="llvm::AAResults",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AAResults.html",tooltip=" "];
  Node56 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BarrierChain" ,fontname="Helvetica"];
  Node108 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" FirstDbgValue" ,fontname="Helvetica"];
  Node108 [label="llvm::MachineInstr",height=0.2,width=0.4,color="red",URL="$classllvm_1_1MachineInstr.html",tooltip="Representation of each machine instruction."];
  Node100 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AA" ,fontname="Helvetica"];
  Node112 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LIS" ,fontname="Helvetica"];
  Node112 [label="llvm::LiveIntervals",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LiveIntervals.html",tooltip=" "];
  Node73 -> Node112 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node48 -> Node112 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ID" ,fontname="Helvetica"];
  Node113 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SchedImpl" ,fontname="Helvetica"];
  Node113 [label="unique_ptr\< llvm::Machine\lSchedStrategy \>",height=0.2,width=0.4,color="black",tooltip=" "];
  Node114 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Mutations" ,fontname="Helvetica"];
  Node114 [label="vector\< std::unique\l_ptr\< llvm::ScheduleDAGMutation \> \>",height=0.2,width=0.4,color="black",tooltip=" "];
  Node88 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CurrentBottom\nCurrentTop" ,fontname="Helvetica"];
  Node56 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NextClusterPred\nNextClusterSucc" ,fontname="Helvetica"];
  Node19 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NumInstrsScheduled" ,fontname="Helvetica"];
  Node115 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" RegClassInfo" ,fontname="Helvetica"];
  Node115 [label="llvm::RegisterClassInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1RegisterClassInfo.html",tooltip=" "];
  Node116 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DFSResult" ,fontname="Helvetica"];
  Node116 [label="llvm::SchedDFSResult",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SchedDFSResult.html",tooltip="Compute the values of each DAG node for various metrics during DFS."];
  Node117 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ScheduledTrees" ,fontname="Helvetica"];
  Node117 [label="llvm::BitVector",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BitVector.html",tooltip=" "];
  Node88 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LiveRegionEnd" ,fontname="Helvetica"];
  Node98 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" VRegUses" ,fontname="Helvetica"];
  Node118 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SUPressureDiffs" ,fontname="Helvetica"];
  Node118 [label="llvm::PressureDiffs",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PressureDiffs.html",tooltip="Array of PressureDiffs."];
  Node31 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DisconnectedComponentsRenamed\nShouldTrackLaneMasks\nShouldTrackPressure" ,fontname="Helvetica"];
  Node119 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BotPressure\nRegPressure\nTopPressure" ,fontname="Helvetica"];
  Node119 [label="llvm::IntervalPressure",height=0.2,width=0.4,color="black",URL="$structllvm_1_1IntervalPressure.html",tooltip="RegisterPressure computed within a region of instructions delimited by TopIdx and BottomIdx."];
  Node120 -> Node119 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node120 [label="llvm::RegisterPressure",height=0.2,width=0.4,color="red",URL="$structllvm_1_1RegisterPressure.html",tooltip="Base class for register pressure results."];
  Node125 -> Node119 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BottomIdx\nTopIdx" ,fontname="Helvetica"];
  Node125 [label="llvm::SlotIndex",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SlotIndex.html",tooltip="SlotIndex - An opaque wrapper around machine indexes."];
  Node126 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BotRPTracker\nRPTracker\nTopRPTracker" ,fontname="Helvetica"];
  Node126 [label="llvm::RegPressureTracker",height=0.2,width=0.4,color="black",URL="$classllvm_1_1RegPressureTracker.html",tooltip="Track the current register pressure at some position in the instruction stream, and remember the high..."];
  Node127 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" RegionCriticalPSets" ,fontname="Helvetica"];
  Node127 [label="vector\< llvm::PressureChange \>",height=0.2,width=0.4,color="black",tooltip=" "];
  Node128 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Alloc" ,fontname="Helvetica"];
  Node128 [label="llvm::SpecificBumpPtrAllocator\l\< llvm::GCNIterativeScheduler\l::Region \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SpecificBumpPtrAllocator.html",tooltip=" "];
  Node129 -> Node128 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::GCNIterativeScheduler\l::Region \>" ,fontname="Helvetica"];
  Node129 [label="llvm::SpecificBumpPtrAllocator\< T \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SpecificBumpPtrAllocator.html",tooltip="A BumpPtrAllocator that allows only elements of a specific type to be allocated."];
  Node130 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Regions" ,fontname="Helvetica"];
  Node130 [label="vector\< llvm::GCNIterative\lScheduler::Region * \>",height=0.2,width=0.4,color="black",tooltip=" "];
  Node131 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Context" ,fontname="Helvetica"];
  Node131 [label="llvm::MachineSchedContext",height=0.2,width=0.4,color="black",URL="$structllvm_1_1MachineSchedContext.html",tooltip="MachineSchedContext provides enough context from the MachineScheduler pass for the target to instanti..."];
  Node38 -> Node131 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MF" ,fontname="Helvetica"];
  Node72 -> Node131 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MLI" ,fontname="Helvetica"];
  Node132 -> Node131 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MDT" ,fontname="Helvetica"];
  Node132 [label="llvm::MachineDominatorTree",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineDominatorTree.html",tooltip="DominatorTree Class - Concrete subclass of DominatorTreeBase that is used to compute a normal dominat..."];
  Node73 -> Node132 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node48 -> Node132 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ID" ,fontname="Helvetica"];
  Node133 -> Node131 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" PassConfig" ,fontname="Helvetica"];
  Node133 [label="llvm::TargetPassConfig",height=0.2,width=0.4,color="black",URL="$classllvm_1_1TargetPassConfig.html",tooltip="Target-Independent Code Generator Pass Configuration Options."];
  Node134 -> Node133 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node134 [label="llvm::ImmutablePass",height=0.2,width=0.4,color="red",URL="$classllvm_1_1ImmutablePass.html",tooltip="ImmutablePass class - This class is used to provide information that does not need to be run."];
  Node6 -> Node133 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TM" ,fontname="Helvetica"];
  Node136 -> Node133 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Impl" ,fontname="Helvetica"];
  Node136 [label="llvm::PassConfigImpl",height=0.2,width=0.4,color="red",URL="$classllvm_1_1PassConfigImpl.html",tooltip=" "];
  Node31 -> Node133 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DisableVerify\nEnableTailMerge\nInitialized\nRequireCodeGenSCCOrder" ,fontname="Helvetica"];
  Node48 -> Node133 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ID" ,fontname="Helvetica"];
  Node100 -> Node131 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AA" ,fontname="Helvetica"];
  Node112 -> Node131 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LIS" ,fontname="Helvetica"];
  Node115 -> Node131 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" RegClassInfo" ,fontname="Helvetica"];
  Node142 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Strategy" ,fontname="Helvetica"];
  Node142 [label="const StrategyKind",height=0.2,width=0.4,color="black",tooltip=" "];
  Node143 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" UPTracker" ,fontname="Helvetica"];
  Node143 [label="llvm::GCNUpwardRPTracker",height=0.2,width=0.4,color="black",URL="$classllvm_1_1GCNUpwardRPTracker.html",tooltip=" "];
  Node144 -> Node143 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node144 [label="llvm::GCNRPTracker",height=0.2,width=0.4,color="black",URL="$classllvm_1_1GCNRPTracker.html",tooltip=" "];
  Node112 -> Node144 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LIS" ,fontname="Helvetica"];
  Node145 -> Node144 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LiveRegs" ,fontname="Helvetica"];
  Node145 [label="llvm::DenseMap\< unsigned,\l LaneBitmask \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1DenseMap.html",tooltip=" "];
  Node147 -> Node144 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CurPressure\nMaxPressure" ,fontname="Helvetica"];
  Node147 [label="llvm::GCNRegPressure",height=0.2,width=0.4,color="black",URL="$structllvm_1_1GCNRegPressure.html",tooltip=" "];
  Node108 -> Node144 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LastTrackedMI" ,fontname="Helvetica"];
  Node54 -> Node144 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MRI" ,fontname="Helvetica"];
}
