digraph "llvm::LoopVectorizationCostModel"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape="box"];
  rankdir="LR";
  Node1 [label="llvm::LoopVectorizationCost\lModel",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="LoopVectorizationCostModel - estimates the expected speedups due to vectorization."];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TheLoop" ,fontname="Helvetica"];
  Node2 [label="llvm::Loop",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Loop.html",tooltip="Represents a single loop in the control flow graph."];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="llvm::LoopBase\< BasicBlock,\l Loop \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LoopBase.html",tooltip=" "];
  Node4 -> Node3 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< BasicBlock, Loop \>" ,fontname="Helvetica"];
  Node4 [label="llvm::LoopBase\< BlockT,\l LoopT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LoopBase.html",tooltip="Instances of this class are used to represent loops that are detected in the flow graph."];
  Node5 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" PSE" ,fontname="Helvetica"];
  Node5 [label="llvm::PredicatedScalarEvolution",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PredicatedScalarEvolution.html",tooltip="An interface layer with SCEV used to manage how we see SCEV expressions for values in the context of ..."];
  Node6 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LI" ,fontname="Helvetica"];
  Node6 [label="llvm::LoopInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LoopInfo.html",tooltip=" "];
  Node7 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="llvm::LoopInfoBase\l\< BasicBlock, Loop \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LoopInfoBase.html",tooltip=" "];
  Node8 -> Node7 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< BasicBlock, Loop \>" ,fontname="Helvetica"];
  Node8 [label="llvm::LoopInfoBase\l\< BlockT, LoopT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LoopInfoBase.html",tooltip="This class builds and contains all of the top-level loop structures in the specified function."];
  Node9 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Legal" ,fontname="Helvetica"];
  Node9 [label="llvm::LoopVectorizationLegality",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LoopVectorizationLegality.html",tooltip="LoopVectorizationLegality checks if it is legal to vectorize a loop, and to what vectorization factor..."];
  Node10 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TTI" ,fontname="Helvetica"];
  Node10 [label="llvm::TargetTransformInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1TargetTransformInfo.html",tooltip="This pass provides access to the codegen interfaces that are needed for IR-level transformations."];
  Node11 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TLI" ,fontname="Helvetica"];
  Node11 [label="llvm::TargetLibraryInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1TargetLibraryInfo.html",tooltip="Provides information about what library functions are available for the current target."];
  Node12 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DB" ,fontname="Helvetica"];
  Node12 [label="llvm::DemandedBits",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DemandedBits.html",tooltip=" "];
  Node13 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AC" ,fontname="Helvetica"];
  Node13 [label="llvm::AssumptionCache",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AssumptionCache.html",tooltip="A cache of @llvm.assume calls within a function."];
  Node14 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ORE" ,fontname="Helvetica"];
  Node14 [label="llvm::OptimizationRemark\lEmitter",height=0.2,width=0.4,color="black",URL="$classllvm_1_1OptimizationRemarkEmitter.html",tooltip="The optimization diagnostic interface."];
  Node15 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TheFunction" ,fontname="Helvetica"];
  Node15 [label="llvm::Function",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Function.html",tooltip=" "];
  Node16 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="llvm::GlobalObject",height=0.2,width=0.4,color="black",URL="$classllvm_1_1GlobalObject.html",tooltip=" "];
  Node17 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="llvm::GlobalValue",height=0.2,width=0.4,color="black",URL="$classllvm_1_1GlobalValue.html",tooltip=" "];
  Node18 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="llvm::Constant",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Constant.html",tooltip="This is an important base class in LLVM."];
  Node19 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="llvm::User",height=0.2,width=0.4,color="black",URL="$classllvm_1_1User.html",tooltip=" "];
  Node20 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="llvm::Value",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Value.html",tooltip="LLVM Value Representation."];
  Node21 -> Node20 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" HasDescriptor\nHasHungOffUses\nHasName\nIsUsedByMD\nMaxAlignmentExponent\nMaximumAlignment\nNumUserOperands\nSubclassOptionalData" ,fontname="Helvetica"];
  Node21 [label="unsigned",height=0.2,width=0.4,color="black",URL="$classunsigned.html",tooltip=" "];
  Node22 -> Node17 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ValueType" ,fontname="Helvetica"];
  Node22 [label="llvm::Type",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Type.html",tooltip="The instances of the Type class are immutable: once they are created, they are never changed."];
  Node21 -> Node22 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NumContainedTys" ,fontname="Helvetica"];
  Node22 -> Node22 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ContainedTys" ,fontname="Helvetica"];
  Node21 -> Node17 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DllStorageClass\nGlobalValueSubClassData\lBits\nHasLLVMReservedName\nHasPartition\nIsDSOLocal\nLinkage\nThreadLocal\nUnnamedAddrVal\nVisibility" ,fontname="Helvetica"];
  Node23 -> Node17 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" IntID" ,fontname="Helvetica"];
  Node23 [label="ID",height=0.2,width=0.4,color="black",tooltip=" "];
  Node24 -> Node17 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Parent" ,fontname="Helvetica"];
  Node24 [label="llvm::Module",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Module.html",tooltip="A Module instance is used to store all the information related to an LLVM module."];
  Node25 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ObjComdat" ,fontname="Helvetica"];
  Node25 [label="llvm::Comdat",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Comdat.html",tooltip=" "];
  Node21 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" GlobalObjectSubClassDataBits" ,fontname="Helvetica"];
  Node26 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="llvm::ilist_node\< Function \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node27 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="llvm::ilist_node_impl\l\< OptionsT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip="Implementation for an ilist node."];
  Node28 -> Node27 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="OptionsT::node_base_type",height=0.2,width=0.4,color="black",tooltip=" "];
  Node29 -> Node26 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< Function \>" ,fontname="Helvetica"];
  Node29 [label="llvm::ilist_node\< T,\l Options \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node30 -> Node29 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 [label="llvm::ilist_node_impl\l\< ilist_detail::compute\l_node_options\< T, Options...\l \>::type \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip=" "];
  Node28 -> Node30 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node31 -> Node30 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< ilist_detail::compute\l_node_options\< T, Options...\l \>::type \>" ,fontname="Helvetica"];
  Node31 [label="llvm::ilist_node_impl\l\< OptionsT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip="Implementation for an ilist node."];
  Node28 -> Node31 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node32 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Hints" ,fontname="Helvetica"];
  Node32 [label="llvm::LoopVectorizeHints",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LoopVectorizeHints.html",tooltip="Utility class for getting and setting loop vectorizer hints in the form of loop metadata."];
  Node33 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InterleaveInfo" ,fontname="Helvetica"];
  Node33 [label="llvm::InterleavedAccessInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1InterleavedAccessInfo.html",tooltip="Drive the analysis of interleaved memory accesses in the loop."];
  Node34 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ValuesToIgnore\nVecValuesToIgnore" ,fontname="Helvetica"];
  Node34 [label="llvm::SmallPtrSet\<\l const llvm::Value *, 16 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallPtrSet.html",tooltip=" "];
  Node35 -> Node34 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node35 [label="llvm::SmallPtrSetImpl\l\< PtrType \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallPtrSetImpl.html",tooltip="A templated base class for SmallPtrSet which provides the typesafe interface that is common across al..."];
  Node36 -> Node35 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node36 [label="llvm::SmallPtrSetImplBase",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallPtrSetImplBase.html",tooltip="SmallPtrSetImplBase - This is the common code shared among all the SmallPtrSet<>'s,..."];
  Node37 -> Node36 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node37 [label="llvm::DebugEpochBase",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DebugEpochBase.html",tooltip=" "];
  Node38 -> Node36 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CurArray\nSmallArray" ,fontname="Helvetica"];
  Node38 [label="const void **",height=0.2,width=0.4,color="black",tooltip=" "];
  Node21 -> Node36 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CurArraySize\nNumNonEmpty\nNumTombstones" ,fontname="Helvetica"];
  Node39 -> Node34 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< const llvm::Value\l *, 16 \>" ,fontname="Helvetica"];
  Node39 [label="llvm::SmallPtrSet\<\l PtrType, SmallSize \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallPtrSet.html",tooltip="SmallPtrSet - This class implements a set which is optimized for holding SmallSize or less elements."];
  Node40 -> Node39 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node40 [label="llvm::SmallPtrSetImpl\l\< PtrType \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallPtrSetImpl.html",tooltip="A templated base class for SmallPtrSet which provides the typesafe interface that is common across al..."];
  Node36 -> Node40 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
}
