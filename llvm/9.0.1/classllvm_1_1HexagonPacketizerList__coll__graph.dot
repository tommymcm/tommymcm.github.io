digraph "llvm::HexagonPacketizerList"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape="box"];
  rankdir="LR";
  Node1 [label="llvm::HexagonPacketizerList",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="llvm::VLIWPacketizerList",height=0.2,width=0.4,color="black",URL="$classllvm_1_1VLIWPacketizerList.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MF" ,fontname="Helvetica"];
  Node3 [label="llvm::MachineFunction",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineFunction.html",tooltip=" "];
  Node4 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" VariableDbgInfos" ,fontname="Helvetica"];
  Node4 [label="llvm::SmallVector\<\l VariableDbgInfo, 4 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="llvm::SmallVectorImpl\< T \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip="This class consists of common code factored out of the SmallVector class to reduce code duplication b..."];
  Node6 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="llvm::SmallVectorTemplate\lBase\< T, bool \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SmallVectorTemplateBase.html",tooltip="SmallVectorTemplateBase<TriviallyCopyable = false> - This is where we put method implementations that..."];
  Node11 -> Node4 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="llvm::SmallVectorStorage\l\< T, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip="Storage for the SmallVector elements."];
  Node12 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node12 [label="llvm::AlignedCharArrayUnion\< T \>",height=0.2,width=0.4,color="red",URL="$structllvm_1_1AlignedCharArrayUnion.html",tooltip=" "];
  Node17 -> Node4 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< VariableDbgInfo, 4 \>" ,fontname="Helvetica"];
  Node17 [label="llvm::SmallVector\<\l T, N \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip="This is a 'vector' (really, a variable-sized array), optimized for the case when the array is small."];
  Node18 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="llvm::SmallVectorImpl\< T \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip="This class consists of common code factored out of the SmallVector class to reduce code duplication b..."];
  Node6 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 -> Node17 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="llvm::SmallVectorStorage\l\< T, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip="Storage for the SmallVector elements."];
  Node12 -> Node19 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node20 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TII" ,fontname="Helvetica"];
  Node20 [label="llvm::TargetInstrInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1TargetInstrInfo.html",tooltip="TargetInstrInfo - Interface to description of machine instruction set."];
  Node21 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="llvm::MCInstrInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MCInstrInfo.html",tooltip="Interface to description of machine instruction set."];
  Node10 -> Node20 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CommuteAnyOperandIndex" ,fontname="Helvetica"];
  Node10 [label="unsigned",height=0.2,width=0.4,color="black",URL="$classunsigned.html",tooltip=" "];
  Node22 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AA" ,fontname="Helvetica"];
  Node22 [label="llvm::AAResults",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AAResults.html",tooltip=" "];
  Node23 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" VLIWScheduler" ,fontname="Helvetica"];
  Node23 [label="llvm::DefaultVLIWScheduler",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DefaultVLIWScheduler.html",tooltip=" "];
  Node24 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="llvm::ScheduleDAGInstrs",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ScheduleDAGInstrs.html",tooltip="A ScheduleDAG for scheduling lists of MachineInstr."];
  Node25 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="llvm::ScheduleDAG",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ScheduleDAG.html",tooltip=" "];
  Node26 -> Node25 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TM" ,fontname="Helvetica"];
  Node26 [label="llvm::LLVMTargetMachine",height=0.2,width=0.4,color="red",URL="$classllvm_1_1LLVMTargetMachine.html",tooltip="This class describes a target machine that is implemented with the LLVM target-independent code gener..."];
  Node20 -> Node25 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TII" ,fontname="Helvetica"];
  Node53 -> Node25 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TRI" ,fontname="Helvetica"];
  Node53 [label="llvm::TargetRegisterInfo",height=0.2,width=0.4,color="red",URL="$classllvm_1_1TargetRegisterInfo.html",tooltip="TargetRegisterInfo base class - We assume that the target defines a static array of TargetRegisterDes..."];
  Node3 -> Node25 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MF" ,fontname="Helvetica"];
  Node55 -> Node25 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MRI" ,fontname="Helvetica"];
  Node55 [label="llvm::MachineRegisterInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineRegisterInfo.html",tooltip="MachineRegisterInfo - Keep track of information for virtual and physical registers,..."];
  Node56 -> Node25 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SUnits" ,fontname="Helvetica"];
  Node56 [label="vector\< llvm::SUnit \>",height=0.2,width=0.4,color="black",tooltip=" "];
  Node57 -> Node25 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" EntrySU\nExitSU" ,fontname="Helvetica"];
  Node57 [label="llvm::SUnit",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SUnit.html",tooltip="Scheduling unit. This is a node in the scheduling DAG."];
  Node57 -> Node57 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" OrigNode" ,fontname="Helvetica"];
  Node10 -> Node57 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BotReadyCycle\nLatency\nNodeNum\nNodeQueueId\nNumPreds\nNumPredsLeft\nNumRegDefsLeft\nNumSuccs\nNumSuccsLeft\nTopReadyCycle\n..." ,fontname="Helvetica"];
  Node50 -> Node57 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" hasPhysRegClobbers\nhasPhysRegDefs\nhasPhysRegUses\nhasReservedResource\nisAvailable\nisCall\nisCallOp\nisCloned\nisCommutable\nisPending\n..." ,fontname="Helvetica"];
  Node50 [label="bool",height=0.2,width=0.4,color="black",URL="$classbool.html",tooltip=" "];
  Node50 -> Node25 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" StressSched" ,fontname="Helvetica"];
  Node73 -> Node24 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MLI" ,fontname="Helvetica"];
  Node73 [label="llvm::MachineLoopInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineLoopInfo.html",tooltip=" "];
  Node74 -> Node73 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node74 [label="llvm::MachineFunctionPass",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineFunctionPass.html",tooltip="MachineFunctionPass - This class adapts the FunctionPass interface to allow convenient creation of pa..."];
  Node75 -> Node74 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node75 [label="llvm::FunctionPass",height=0.2,width=0.4,color="black",URL="$classllvm_1_1FunctionPass.html",tooltip="FunctionPass class - This class is used to implement most global optimizations."];
  Node76 -> Node75 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node76 [label="llvm::Pass",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Pass.html",tooltip="Pass interface - Implemented by all 'passes'."];
  Node14 -> Node73 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ID" ,fontname="Helvetica"];
  Node14 [label="char",height=0.2,width=0.4,color="black",URL="$classchar.html",tooltip=" "];
  Node77 -> Node24 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MFI" ,fontname="Helvetica"];
  Node77 [label="llvm::MachineFrameInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineFrameInfo.html",tooltip="The MachineFrameInfo class represents an abstract stack frame until prolog/epilog code is inserted."];
  Node78 -> Node24 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SchedModel" ,fontname="Helvetica"];
  Node78 [label="llvm::TargetSchedModel",height=0.2,width=0.4,color="black",URL="$classllvm_1_1TargetSchedModel.html",tooltip="Provide an instruction scheduling machine model to CodeGen passes."];
  Node50 -> Node24 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CanHandleTerminators\nRemoveKillFlags\nTrackLaneMasks" ,fontname="Helvetica"];
  Node79 -> Node24 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BB" ,fontname="Helvetica"];
  Node79 [label="llvm::MachineBasicBlock",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineBasicBlock.html",tooltip=" "];
  Node80 -> Node79 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node80 [label="llvm::ilist_node_with\l_parent\< MachineBasicBlock,\l MachineFunction \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1ilist__node__with__parent.html",tooltip=" "];
  Node89 -> Node24 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" RegionBegin\nRegionEnd" ,fontname="Helvetica"];
  Node89 [label="llvm::MachineInstrBundle\lIterator\< MachineInstr \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1MachineInstrBundleIterator.html",tooltip=" "];
  Node90 -> Node89 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node90 [label="llvm::MachineInstrBundle\lIteratorHelper\< IsReverse \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1MachineInstrBundleIteratorHelper.html",tooltip=" "];
  Node10 -> Node24 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NumRegionInstrs" ,fontname="Helvetica"];
  Node92 -> Node24 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MISUnitMap" ,fontname="Helvetica"];
  Node92 [label="llvm::DenseMap\< llvm\l::MachineInstr *, llvm\l::SUnit * \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1DenseMap.html",tooltip=" "];
  Node97 -> Node24 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Defs\nUses" ,fontname="Helvetica"];
  Node97 [label="llvm::SparseMultiSet\l\< PhysRegSUOper, identity\l\< unsigned \>, uint16_t \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SparseMultiSet.html",tooltip=" "];
  Node99 -> Node24 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CurrentVRegDefs" ,fontname="Helvetica"];
  Node99 [label="llvm::SparseMultiSet\l\< VReg2SUnit, VirtReg2Index\lFunctor \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SparseMultiSet.html",tooltip=" "];
  Node100 -> Node24 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CurrentVRegUses" ,fontname="Helvetica"];
  Node100 [label="llvm::SparseMultiSet\l\< VReg2SUnitOperIdx,\l VirtReg2IndexFunctor \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SparseMultiSet.html",tooltip=" "];
  Node22 -> Node24 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AAForDep" ,fontname="Helvetica"];
  Node57 -> Node24 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BarrierChain" ,fontname="Helvetica"];
  Node101 -> Node24 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" UnknownValue" ,fontname="Helvetica"];
  Node101 [label="llvm::UndefValue",height=0.2,width=0.4,color="red",URL="$classllvm_1_1UndefValue.html",tooltip="'undef' values are things that do not have specified contents."];
  Node106 -> Node24 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Topo" ,fontname="Helvetica"];
  Node106 [label="llvm::ScheduleDAGTopologicalSort",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ScheduleDAGTopologicalSort.html",tooltip="This class can compute a topological ordering for SUnits and provides methods for dynamically updatin..."];
  Node107 -> Node24 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DbgValues" ,fontname="Helvetica"];
  Node107 [label="vector\< std::pair\<\l MachineInstr *, MachineInstr * \> \>",height=0.2,width=0.4,color="black",tooltip=" "];
  Node108 -> Node24 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" FirstDbgValue" ,fontname="Helvetica"];
  Node108 [label="llvm::MachineInstr",height=0.2,width=0.4,color="red",URL="$classllvm_1_1MachineInstr.html",tooltip="Representation of each machine instruction."];
  Node111 -> Node24 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LiveRegs" ,fontname="Helvetica"];
  Node111 [label="llvm::LivePhysRegs",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LivePhysRegs.html",tooltip="A set of physical registers with utility functions to track liveness when walking backward/forward th..."];
  Node112 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CurrentPacketMIs" ,fontname="Helvetica"];
  Node112 [label="vector\< llvm::MachineInstr * \>",height=0.2,width=0.4,color="black",tooltip=" "];
  Node113 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ResourceTracker" ,fontname="Helvetica"];
  Node113 [label="llvm::DFAPacketizer",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DFAPacketizer.html",tooltip=" "];
  Node114 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MIToSUnit" ,fontname="Helvetica"];
  Node114 [label="map\< llvm::MachineInstr\l *, llvm::SUnit * \>",height=0.2,width=0.4,color="black",tooltip=" "];
  Node115 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MBPI" ,fontname="Helvetica"];
  Node115 [label="llvm::MachineBranchProbabilityInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineBranchProbabilityInfo.html",tooltip=" "];
  Node116 -> Node115 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node116 [label="llvm::ImmutablePass",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ImmutablePass.html",tooltip="ImmutablePass class - This class is used to provide information that does not need to be run."];
  Node117 -> Node116 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node117 [label="llvm::ModulePass",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ModulePass.html",tooltip="ModulePass class - This class is used to implement unstructured interprocedural optimizations and ana..."];
  Node76 -> Node117 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 -> Node115 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ID" ,fontname="Helvetica"];
  Node73 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MLI" ,fontname="Helvetica"];
}
