digraph "lib/Target/AMDGPU/SIMachineFunctionInfo.h"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape="box"];
  Node1 [label="lib/Target/AMDGPU/SIMachine\lFunctionInfo.h",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="lib/Target/AMDGPU/AMDGPUAsm\lPrinter.cpp",height=0.2,width=0.4,color="black",URL="$AMDGPUAsmPrinter_8cpp.html",tooltip="The AMDGPUAsmPrinter is used to print both assembly string and also binary code."];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="lib/Target/AMDGPU/AMDGPUCall\lLowering.cpp",height=0.2,width=0.4,color="black",URL="$AMDGPUCallLowering_8cpp.html",tooltip="This file implements the lowering of LLVM calls to machine code calls for GlobalISel."];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="lib/Target/AMDGPU/AMDGPUHSAMetadata\lStreamer.cpp",height=0.2,width=0.4,color="black",URL="$AMDGPUHSAMetadataStreamer_8cpp.html",tooltip="AMDGPU HSA Metadata Streamer."];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="lib/Target/AMDGPU/AMDGPUISel\lDAGToDAG.cpp",height=0.2,width=0.4,color="black",URL="$AMDGPUISelDAGToDAG_8cpp.html",tooltip="Defines an instruction selector for the AMDGPU target."];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="lib/Target/AMDGPU/AMDGPUISel\lLowering.cpp",height=0.2,width=0.4,color="black",URL="$AMDGPUISelLowering_8cpp.html",tooltip="This is the parent TargetLowering class for hardware code gen targets."];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="lib/Target/AMDGPU/AMDGPUInstruction\lSelector.cpp",height=0.2,width=0.4,color="black",URL="$AMDGPUInstructionSelector_8cpp.html",tooltip="This file implements the targeting of the InstructionSelector class for AMDGPU."];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="lib/Target/AMDGPU/AMDGPULegalizer\lInfo.cpp",height=0.2,width=0.4,color="black",URL="$AMDGPULegalizerInfo_8cpp.html",tooltip="This file implements the targeting of the Machinelegalizer class for AMDGPU."];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="lib/Target/AMDGPU/AMDGPURegister\lBankInfo.cpp",height=0.2,width=0.4,color="black",URL="$AMDGPURegisterBankInfo_8cpp.html",tooltip="This file implements the targeting of the RegisterBankInfo class for AMDGPU."];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="lib/Target/AMDGPU/AMDGPURegister\lInfo.cpp",height=0.2,width=0.4,color="black",URL="$AMDGPURegisterInfo_8cpp.html",tooltip="Parent TargetRegisterInfo class common to all hw codegen targets."];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="lib/Target/AMDGPU/AMDGPUSubtarget.cpp",height=0.2,width=0.4,color="black",URL="$AMDGPUSubtarget_8cpp.html",tooltip="Implements the AMDGPU specific subclass of TargetSubtarget."];
  Node1 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="lib/Target/AMDGPU/AMDGPUTarget\lMachine.cpp",height=0.2,width=0.4,color="black",URL="$AMDGPUTargetMachine_8cpp.html",tooltip="The AMDGPU target machine contains all of the hardware specific information needed to emit code for R..."];
  Node1 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="lib/Target/AMDGPU/GCNIterative\lScheduler.cpp",height=0.2,width=0.4,color="black",URL="$GCNIterativeScheduler_8cpp.html",tooltip=" "];
  Node1 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="lib/Target/AMDGPU/GCNNSAReassign.cpp",height=0.2,width=0.4,color="black",URL="$GCNNSAReassign_8cpp.html",tooltip="Try to reassign registers on GFX10+ from non-sequential to sequential in NSA image instructions."];
  Node1 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="lib/Target/AMDGPU/GCNReg\lBankReassign.cpp",height=0.2,width=0.4,color="black",URL="$GCNRegBankReassign_8cpp.html",tooltip="Try to reassign registers on GFX10+ to reduce register bank conflicts."];
  Node1 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="lib/Target/AMDGPU/GCNSched\lStrategy.cpp",height=0.2,width=0.4,color="black",URL="$GCNSchedStrategy_8cpp.html",tooltip="This contains a MachineSchedStrategy implementation for maximizing wave occupancy on GCN hardware."];
  Node1 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="lib/Target/AMDGPU/SIFold\lOperands.cpp",height=0.2,width=0.4,color="black",URL="$SIFoldOperands_8cpp.html",tooltip=" "];
  Node1 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="lib/Target/AMDGPU/SIForm\lMemoryClauses.cpp",height=0.2,width=0.4,color="black",URL="$SIFormMemoryClauses_8cpp.html",tooltip="This pass creates bundles of SMEM and VMEM instructions forming memory clauses if XNACK is enabled."];
  Node1 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="lib/Target/AMDGPU/SIFrame\lLowering.cpp",height=0.2,width=0.4,color="black",URL="$SIFrameLowering_8cpp.html",tooltip=" "];
  Node1 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="lib/Target/AMDGPU/SIISel\lLowering.cpp",height=0.2,width=0.4,color="black",URL="$SIISelLowering_8cpp.html",tooltip="Custom DAG lowering for SI."];
  Node1 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="lib/Target/AMDGPU/SIInsert\lSkips.cpp",height=0.2,width=0.4,color="black",URL="$SIInsertSkips_8cpp.html",tooltip="This pass inserts branches on the 0 exec mask over divergent branches branches when it's expected tha..."];
  Node1 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="lib/Target/AMDGPU/SIInsert\lWaitcnts.cpp",height=0.2,width=0.4,color="black",URL="$SIInsertWaitcnts_8cpp.html",tooltip="Insert wait instructions for memory reads and writes."];
  Node1 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="lib/Target/AMDGPU/SIInstr\lInfo.cpp",height=0.2,width=0.4,color="black",URL="$SIInstrInfo_8cpp.html",tooltip="SI Implementation of TargetInstrInfo."];
  Node1 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="lib/Target/AMDGPU/SILower\lSGPRSpills.cpp",height=0.2,width=0.4,color="black",URL="$SILowerSGPRSpills_8cpp.html",tooltip=" "];
  Node1 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="lib/Target/AMDGPU/SIMachine\lFunctionInfo.cpp",height=0.2,width=0.4,color="black",URL="$SIMachineFunctionInfo_8cpp.html",tooltip=" "];
  Node1 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="lib/Target/AMDGPU/SIMode\lRegister.cpp",height=0.2,width=0.4,color="black",URL="$SIModeRegister_8cpp.html",tooltip="This pass inserts changes to the Mode register settings as required."];
  Node1 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="lib/Target/AMDGPU/SIPreAllocate\lWWMRegs.cpp",height=0.2,width=0.4,color="black",URL="$SIPreAllocateWWMRegs_8cpp.html",tooltip="Pass to pre-allocated WWM registers."];
  Node1 -> Node28 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="lib/Target/AMDGPU/SIRegister\lInfo.cpp",height=0.2,width=0.4,color="black",URL="$SIRegisterInfo_8cpp.html",tooltip="SI implementation of the TargetRegisterInfo class."];
  Node1 -> Node29 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="lib/Target/AMDGPU/SIWhole\lQuadMode.cpp",height=0.2,width=0.4,color="black",URL="$SIWholeQuadMode_8cpp.html",tooltip="This pass adds instructions to enable whole quad mode for pixel shaders, and whole wavefront mode for..."];
}
