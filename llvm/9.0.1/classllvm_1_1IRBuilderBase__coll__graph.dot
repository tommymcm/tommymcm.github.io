digraph "llvm::IRBuilderBase"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape="box"];
  rankdir="LR";
  Node1 [label="llvm::IRBuilderBase",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Common base class shared among various IRBuilders."];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BB" ,fontname="Helvetica"];
  Node2 [label="llvm::BasicBlock",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BasicBlock.html",tooltip="LLVM Basic Block Representation."];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="llvm::Value",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Value.html",tooltip="LLVM Value Representation."];
  Node4 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" HasDescriptor\nHasHungOffUses\nHasName\nIsUsedByMD\nMaxAlignmentExponent\nMaximumAlignment\nNumUserOperands\nSubclassOptionalData" ,fontname="Helvetica"];
  Node4 [label="unsigned",height=0.2,width=0.4,color="black",URL="$classunsigned.html",tooltip=" "];
  Node5 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="llvm::ilist_node_with\l_parent\< BasicBlock,\l Function \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__with__parent.html",tooltip=" "];
  Node6 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="llvm::ilist_node\< T,\l Options \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node10 -> Node5 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< BasicBlock, Function \>" ,fontname="Helvetica"];
  Node10 [label="llvm::ilist_node_with\l_parent\< NodeTy, ParentTy,\l Options \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1ilist__node__with__parent.html",tooltip="An ilist node that can access its parent list."];
  Node14 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InsertPt" ,fontname="Helvetica"];
  Node14 [label="iterator",height=0.2,width=0.4,color="black",tooltip=" "];
  Node15 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Context" ,fontname="Helvetica"];
  Node15 [label="llvm::LLVMContext",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LLVMContext.html",tooltip="This is an important class for using LLVM in a threaded context."];
  Node16 -> Node15 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" pImpl" ,fontname="Helvetica"];
  Node16 [label="llvm::LLVMContextImpl",height=0.2,width=0.4,color="red",URL="$classllvm_1_1LLVMContextImpl.html",tooltip=" "];
  Node17 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" OwnedModules" ,fontname="Helvetica"];
  Node17 [label="llvm::SmallPtrSet\<\l llvm::Module *, 4 \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SmallPtrSet.html",tooltip=" "];
  Node24 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineAsmDiagHandler" ,fontname="Helvetica"];
  Node24 [label="llvm::SMDiagnostic",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SMDiagnostic.html",tooltip="Instances of this class encapsulate one diagnostic report, allowing printing to a raw_ostream as a ca..."];
  Node25 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineAsmDiagContext\nYieldOpaqueHandle" ,fontname="Helvetica"];
  Node25 [label="void *",height=0.2,width=0.4,color="black",tooltip=" "];
  Node26 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DiagHandler" ,fontname="Helvetica"];
  Node26 [label="unique_ptr\< llvm::Diagnostic\lHandler \>",height=0.2,width=0.4,color="black",tooltip=" "];
  Node27 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DiagnosticsHotnessRequested\nDiscardValueNames\nRespectDiagnosticFilters" ,fontname="Helvetica"];
  Node27 [label="bool",height=0.2,width=0.4,color="black",URL="$classbool.html",tooltip=" "];
  Node28 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DiagnosticsHotnessThreshold" ,fontname="Helvetica"];
  Node28 [label="uint64_t",height=0.2,width=0.4,color="black",tooltip=" "];
  Node29 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" RemarkDiagStreamer" ,fontname="Helvetica"];
  Node29 [label="unique_ptr\< llvm::Remark\lStreamer \>",height=0.2,width=0.4,color="black",tooltip=" "];
  Node15 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" YieldCallback" ,fontname="Helvetica"];
  Node30 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" IntConstants" ,fontname="Helvetica"];
  Node30 [label="llvm::DenseMap\< APInt,\l std::unique_ptr\< ConstantInt\l \>, DenseMapAPIntKeyInfo \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1DenseMap.html",tooltip=" "];
  Node34 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" FPConstants" ,fontname="Helvetica"];
  Node34 [label="llvm::DenseMap\< APFloat,\l std::unique_ptr\< ConstantFP\l \>, DenseMapAPFloatKeyInfo \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1DenseMap.html",tooltip=" "];
  Node36 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AttrsSet" ,fontname="Helvetica"];
  Node36 [label="llvm::FoldingSet\< llvm\l::AttributeImpl \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1FoldingSet.html",tooltip=" "];
  Node42 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AttrsLists" ,fontname="Helvetica"];
  Node42 [label="llvm::FoldingSet\< llvm\l::AttributeListImpl \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1FoldingSet.html",tooltip=" "];
  Node44 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AttrsSetNodes" ,fontname="Helvetica"];
  Node44 [label="llvm::FoldingSet\< llvm\l::AttributeSetNode \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1FoldingSet.html",tooltip=" "];
  Node46 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MDStringCache" ,fontname="Helvetica"];
  Node46 [label="llvm::StringMap\< llvm\l::MDString, llvm::BumpPtrAllocator\lImpl \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1StringMap.html",tooltip=" "];
  Node50 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ValuesAsMetadata" ,fontname="Helvetica"];
  Node50 [label="llvm::DenseMap\< llvm\l::Value *, llvm::ValueAsMetadata * \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1DenseMap.html",tooltip=" "];
  Node52 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MetadataAsValues" ,fontname="Helvetica"];
  Node52 [label="llvm::DenseMap\< llvm\l::Metadata *, llvm::Metadata\lAsValue * \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1DenseMap.html",tooltip=" "];
  Node54 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ValueNames" ,fontname="Helvetica"];
  Node54 [label="llvm::DenseMap\< const\l llvm::Value *, llvm\l::StringMapEntry * \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1DenseMap.html",tooltip=" "];
  Node56 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DITypeMap" ,fontname="Helvetica"];
  Node56 [label="llvm::Optional\< llvm\l::DenseMap\< const llvm\l::MDString *, llvm::DIComposite\lType * \> \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1Optional.html",tooltip=" "];
  Node58 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DistinctMDNodes" ,fontname="Helvetica"];
  Node58 [label="vector\< llvm::MDNode * \>",height=0.2,width=0.4,color="black",tooltip=" "];
  Node59 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CAZConstants" ,fontname="Helvetica"];
  Node59 [label="llvm::DenseMap\< llvm\l::Type *, std::unique\l_ptr\< llvm::ConstantAggregate\lZero \> \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1DenseMap.html",tooltip=" "];
  Node61 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ArrayConstants" ,fontname="Helvetica"];
  Node61 [label="llvm::ConstantUniqueMap\l\< ConstantArray \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1ConstantUniqueMap.html",tooltip=" "];
  Node63 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" StructConstants" ,fontname="Helvetica"];
  Node63 [label="llvm::ConstantUniqueMap\l\< ConstantStruct \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1ConstantUniqueMap.html",tooltip=" "];
  Node64 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" VectorConstants" ,fontname="Helvetica"];
  Node64 [label="llvm::ConstantUniqueMap\l\< ConstantVector \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1ConstantUniqueMap.html",tooltip=" "];
  Node65 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CPNConstants" ,fontname="Helvetica"];
  Node65 [label="llvm::DenseMap\< llvm\l::PointerType *, std\l::unique_ptr\< llvm::Constant\lPointerNull \> \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1DenseMap.html",tooltip=" "];
  Node67 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" UVConstants" ,fontname="Helvetica"];
  Node67 [label="llvm::DenseMap\< llvm\l::Type *, std::unique\l_ptr\< llvm::UndefValue \> \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1DenseMap.html",tooltip=" "];
  Node69 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CDSConstants" ,fontname="Helvetica"];
  Node69 [label="llvm::StringMap\< llvm\l::ConstantDataSequential * \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1StringMap.html",tooltip=" "];
  Node70 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BlockAddresses" ,fontname="Helvetica"];
  Node70 [label="llvm::DenseMap\< std\l::pair\< const llvm::\lFunction *, const llvm\l::BasicBlock * \>, llvm\l::BlockAddress * \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1DenseMap.html",tooltip=" "];
  Node72 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ExprConstants" ,fontname="Helvetica"];
  Node72 [label="llvm::ConstantUniqueMap\l\< llvm::ConstantExpr \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1ConstantUniqueMap.html",tooltip=" "];
  Node73 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineAsms" ,fontname="Helvetica"];
  Node73 [label="llvm::ConstantUniqueMap\l\< llvm::InlineAsm \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1ConstantUniqueMap.html",tooltip=" "];
  Node74 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TheFalseVal\nTheTrueVal" ,fontname="Helvetica"];
  Node74 [label="llvm::ConstantInt",height=0.2,width=0.4,color="red",URL="$classllvm_1_1ConstantInt.html",tooltip="This is the shared class of boolean and integer constants."];
  Node78 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TheNoneToken" ,fontname="Helvetica"];
  Node78 [label="unique_ptr\< llvm::Constant\lTokenNone \>",height=0.2,width=0.4,color="black",tooltip=" "];
  Node79 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DoubleTy\nFP128Ty\nFloatTy\nHalfTy\nLabelTy\nMetadataTy\nPPC_FP128Ty\nTokenTy\nVoidTy\nX86_FP80Ty\n..." ,fontname="Helvetica"];
  Node79 [label="llvm::Type",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Type.html",tooltip="The instances of the Type class are immutable: once they are created, they are never changed."];
  Node4 -> Node79 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NumContainedTys" ,fontname="Helvetica"];
  Node79 -> Node79 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ContainedTys" ,fontname="Helvetica"];
  Node80 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Int128Ty\nInt16Ty\nInt1Ty\nInt32Ty\nInt64Ty\nInt8Ty" ,fontname="Helvetica"];
  Node80 [label="llvm::IntegerType",height=0.2,width=0.4,color="black",URL="$classllvm_1_1IntegerType.html",tooltip="Class to represent integer types."];
  Node79 -> Node80 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node81 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Alloc" ,fontname="Helvetica"];
  Node81 [label="llvm::BumpPtrAllocatorImpl\l\< AllocatorT, SlabSize,\l SizeThreshold \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1BumpPtrAllocatorImpl.html",tooltip="Allocate memory in an ever growing pool, as if by bump-pointer."];
  Node4 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NamedStructTypesUniqueID" ,fontname="Helvetica"];
  Node119 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DefaultFPMathTag" ,fontname="Helvetica"];
  Node119 [label="llvm::MDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MDNode.html",tooltip="Metadata node."];
  Node120 -> Node119 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node120 [label="llvm::Metadata",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Metadata.html",tooltip="Root of the metadata hierarchy."];
  Node4 -> Node120 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ImplicitCode\nStorage\nSubclassData16\nSubclassData32" ,fontname="Helvetica"];
  Node121 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" FMF" ,fontname="Helvetica"];
  Node121 [label="llvm::FastMathFlags",height=0.2,width=0.4,color="black",URL="$classllvm_1_1FastMathFlags.html",tooltip="Convenience struct for specifying and reasoning about fast-math flags."];
  Node27 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" IsFPConstrained" ,fontname="Helvetica"];
  Node122 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DefaultConstrainedExcept" ,fontname="Helvetica"];
  Node122 [label="ExceptionBehavior",height=0.2,width=0.4,color="black",tooltip=" "];
  Node123 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DefaultConstrainedRounding" ,fontname="Helvetica"];
  Node123 [label="RoundingMode",height=0.2,width=0.4,color="black",tooltip=" "];
  Node124 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DefaultOperandBundles" ,fontname="Helvetica"];
  Node124 [label="llvm::ArrayRef\< llvm\l::OperandBundleDefT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ArrayRef.html",tooltip=" "];
  Node125 -> Node124 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::OperandBundleDefT \>" ,fontname="Helvetica"];
  Node125 [label="llvm::ArrayRef\< T \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ArrayRef.html",tooltip="ArrayRef - Represent a constant reference to an array (0 or more elements consecutively in memory),..."];
}
