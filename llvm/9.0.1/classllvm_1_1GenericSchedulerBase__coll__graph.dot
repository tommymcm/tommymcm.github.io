digraph "llvm::GenericSchedulerBase"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape="box"];
  rankdir="LR";
  Node1 [label="llvm::GenericSchedulerBase",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Base class for GenericScheduler."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="llvm::MachineSchedStrategy",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineSchedStrategy.html",tooltip="MachineSchedStrategy - Interface to the scheduling algorithm used by ScheduleDAGMI."];
  Node3 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Context" ,fontname="Helvetica"];
  Node3 [label="llvm::MachineSchedContext",height=0.2,width=0.4,color="black",URL="$structllvm_1_1MachineSchedContext.html",tooltip="MachineSchedContext provides enough context from the MachineScheduler pass for the target to instanti..."];
  Node4 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MF" ,fontname="Helvetica"];
  Node4 [label="llvm::MachineFunction",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineFunction.html",tooltip=" "];
  Node5 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" VariableDbgInfos" ,fontname="Helvetica"];
  Node5 [label="llvm::SmallVector\<\l VariableDbgInfo, 4 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node6 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="llvm::SmallVectorImpl\< T \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip="This class consists of common code factored out of the SmallVector class to reduce code duplication b..."];
  Node7 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="llvm::SmallVectorTemplate\lBase\< T, bool \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SmallVectorTemplateBase.html",tooltip="SmallVectorTemplateBase<TriviallyCopyable = false> - This is where we put method implementations that..."];
  Node12 -> Node5 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="llvm::SmallVectorStorage\l\< T, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip="Storage for the SmallVector elements."];
  Node13 -> Node12 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node13 [label="llvm::AlignedCharArrayUnion\< T \>",height=0.2,width=0.4,color="red",URL="$structllvm_1_1AlignedCharArrayUnion.html",tooltip=" "];
  Node18 -> Node5 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< VariableDbgInfo, 4 \>" ,fontname="Helvetica"];
  Node18 [label="llvm::SmallVector\<\l T, N \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip="This is a 'vector' (really, a variable-sized array), optimized for the case when the array is small."];
  Node19 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="llvm::SmallVectorImpl\< T \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip="This class consists of common code factored out of the SmallVector class to reduce code duplication b..."];
  Node7 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 -> Node18 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="llvm::SmallVectorStorage\l\< T, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip="Storage for the SmallVector elements."];
  Node13 -> Node20 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node21 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MLI" ,fontname="Helvetica"];
  Node21 [label="llvm::MachineLoopInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineLoopInfo.html",tooltip=" "];
  Node22 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="llvm::MachineFunctionPass",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineFunctionPass.html",tooltip="MachineFunctionPass - This class adapts the FunctionPass interface to allow convenient creation of pa..."];
  Node23 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="llvm::FunctionPass",height=0.2,width=0.4,color="black",URL="$classllvm_1_1FunctionPass.html",tooltip="FunctionPass class - This class is used to implement most global optimizations."];
  Node24 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="llvm::Pass",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Pass.html",tooltip="Pass interface - Implemented by all 'passes'."];
  Node15 -> Node21 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ID" ,fontname="Helvetica"];
  Node15 [label="char",height=0.2,width=0.4,color="black",URL="$classchar.html",tooltip=" "];
  Node25 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MDT" ,fontname="Helvetica"];
  Node25 [label="llvm::MachineDominatorTree",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineDominatorTree.html",tooltip="DominatorTree Class - Concrete subclass of DominatorTreeBase that is used to compute a normal dominat..."];
  Node22 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 -> Node25 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ID" ,fontname="Helvetica"];
  Node26 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" PassConfig" ,fontname="Helvetica"];
  Node26 [label="llvm::TargetPassConfig",height=0.2,width=0.4,color="black",URL="$classllvm_1_1TargetPassConfig.html",tooltip="Target-Independent Code Generator Pass Configuration Options."];
  Node27 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="llvm::ImmutablePass",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ImmutablePass.html",tooltip="ImmutablePass class - This class is used to provide information that does not need to be run."];
  Node28 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="llvm::ModulePass",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ModulePass.html",tooltip="ModulePass class - This class is used to implement unstructured interprocedural optimizations and ana..."];
  Node24 -> Node28 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 -> Node26 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TM" ,fontname="Helvetica"];
  Node29 [label="llvm::LLVMTargetMachine",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LLVMTargetMachine.html",tooltip="This class describes a target machine that is implemented with the LLVM target-independent code gener..."];
  Node30 -> Node29 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 [label="llvm::TargetMachine",height=0.2,width=0.4,color="black",URL="$classllvm_1_1TargetMachine.html",tooltip="Primary interface to the complete machine description for the target machine."];
  Node31 -> Node30 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TheTarget" ,fontname="Helvetica"];
  Node31 [label="llvm::Target",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Target.html",tooltip="Target - Wrapper for Target specific information."];
  Node32 -> Node30 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DL" ,fontname="Helvetica"];
  Node32 [label="llvm::DataLayout",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DataLayout.html",tooltip="A parsed version of the target data layout string in and methods for querying it."];
  Node33 -> Node30 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TargetTriple" ,fontname="Helvetica"];
  Node33 [label="llvm::Triple",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Triple.html",tooltip="Triple - Helper class for working with autoconf configuration names."];
  Node34 -> Node30 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TargetCPU\nTargetFS" ,fontname="Helvetica"];
  Node34 [label="string",height=0.2,width=0.4,color="black",tooltip=" "];
  Node35 -> Node30 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" RM" ,fontname="Helvetica"];
  Node35 [label="Model",height=0.2,width=0.4,color="black",tooltip=" "];
  Node36 -> Node30 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CMModel" ,fontname="Helvetica"];
  Node36 [label="Model",height=0.2,width=0.4,color="black",tooltip=" "];
  Node37 -> Node30 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" OptLevel" ,fontname="Helvetica"];
  Node37 [label="Level",height=0.2,width=0.4,color="black",tooltip=" "];
  Node38 -> Node30 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AsmInfo" ,fontname="Helvetica"];
  Node38 [label="unique_ptr\< const llvm\l::MCAsmInfo \>",height=0.2,width=0.4,color="black",tooltip=" "];
  Node39 -> Node30 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MRI" ,fontname="Helvetica"];
  Node39 [label="unique_ptr\< const llvm\l::MCRegisterInfo \>",height=0.2,width=0.4,color="black",tooltip=" "];
  Node40 -> Node30 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MII" ,fontname="Helvetica"];
  Node40 [label="unique_ptr\< const llvm\l::MCInstrInfo \>",height=0.2,width=0.4,color="black",tooltip=" "];
  Node41 -> Node30 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" STI" ,fontname="Helvetica"];
  Node41 [label="unique_ptr\< const llvm\l::MCSubtargetInfo \>",height=0.2,width=0.4,color="black",tooltip=" "];
  Node11 -> Node30 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" O0WantsFastISel\nRequireStructuredCFG" ,fontname="Helvetica"];
  Node11 [label="unsigned",height=0.2,width=0.4,color="black",URL="$classunsigned.html",tooltip=" "];
  Node42 -> Node30 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DefaultOptions\nOptions" ,fontname="Helvetica"];
  Node42 [label="llvm::TargetOptions",height=0.2,width=0.4,color="red",URL="$classllvm_1_1TargetOptions.html",tooltip=" "];
  Node11 -> Node42 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DataSections\nDisableIntegratedAS\nEmitAddrsig\nEmitStackSizeSection\nEmulatedTLS\nEnableDebugEntryValues\nEnableFastISel\nEnableGlobalISel\nEnableIPRA\nEnableMachineOutliner\n..." ,fontname="Helvetica"];
  Node56 -> Node26 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Impl" ,fontname="Helvetica"];
  Node56 [label="llvm::PassConfigImpl",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PassConfigImpl.html",tooltip=" "];
  Node57 -> Node56 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TargetPasses" ,fontname="Helvetica"];
  Node57 [label="llvm::DenseMap\< Analysis\lID, llvm::IdentifyingPassPtr \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1DenseMap.html",tooltip=" "];
  Node62 -> Node56 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InsertedPasses" ,fontname="Helvetica"];
  Node62 [label="llvm::SmallVector\<\l InsertedPass, 4 \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node18 -> Node62 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< InsertedPass, 4 \>" ,fontname="Helvetica"];
  Node53 -> Node26 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DisableVerify\nEnableTailMerge\nInitialized\nRequireCodeGenSCCOrder" ,fontname="Helvetica"];
  Node53 [label="bool",height=0.2,width=0.4,color="black",URL="$classbool.html",tooltip=" "];
  Node15 -> Node26 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ID" ,fontname="Helvetica"];
  Node65 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AA" ,fontname="Helvetica"];
  Node65 [label="llvm::AAResults",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AAResults.html",tooltip=" "];
  Node66 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LIS" ,fontname="Helvetica"];
  Node66 [label="llvm::LiveIntervals",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LiveIntervals.html",tooltip=" "];
  Node22 -> Node66 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 -> Node66 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ID" ,fontname="Helvetica"];
  Node67 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" RegClassInfo" ,fontname="Helvetica"];
  Node67 [label="llvm::RegisterClassInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1RegisterClassInfo.html",tooltip=" "];
  Node68 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SchedModel" ,fontname="Helvetica"];
  Node68 [label="llvm::TargetSchedModel",height=0.2,width=0.4,color="black",URL="$classllvm_1_1TargetSchedModel.html",tooltip="Provide an instruction scheduling machine model to CodeGen passes."];
  Node69 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TRI" ,fontname="Helvetica"];
  Node69 [label="llvm::TargetRegisterInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1TargetRegisterInfo.html",tooltip="TargetRegisterInfo base class - We assume that the target defines a static array of TargetRegisterDes..."];
  Node70 -> Node69 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node70 [label="llvm::MCRegisterInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MCRegisterInfo.html",tooltip="MCRegisterInfo base class - We assume that the target defines a static array of MCRegisterDesc object..."];
  Node71 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Rem" ,fontname="Helvetica"];
  Node71 [label="llvm::SchedRemainder",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SchedRemainder.html",tooltip="Summarize the unscheduled region."];
  Node11 -> Node71 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CriticalPath\nCyclicCritPath\nRemIssueCount" ,fontname="Helvetica"];
  Node53 -> Node71 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" IsAcyclicLatencyLimited" ,fontname="Helvetica"];
  Node72 -> Node71 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" RemainingCounts" ,fontname="Helvetica"];
  Node72 [label="llvm::SmallVector\<\l unsigned, 16 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node73 -> Node72 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node73 [label="llvm::SmallVectorImpl\< T \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip="This class consists of common code factored out of the SmallVector class to reduce code duplication b..."];
  Node7 -> Node73 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node74 -> Node72 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node74 [label="llvm::SmallVectorStorage\l\< T, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip="Storage for the SmallVector elements."];
  Node13 -> Node74 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node18 -> Node72 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< unsigned, 16 \>" ,fontname="Helvetica"];
}
