digraph "llvm::CastInst"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape="box"];
  rankdir="LR";
  Node1 [label="llvm::CastInst",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="This is the base class for all instructions that perform data casts."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="llvm::UnaryInstruction",height=0.2,width=0.4,color="black",URL="$classllvm_1_1UnaryInstruction.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="llvm::Instruction",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Instruction.html",tooltip=" "];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="llvm::User",height=0.2,width=0.4,color="black",URL="$classllvm_1_1User.html",tooltip=" "];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="llvm::Value",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Value.html",tooltip="LLVM Value Representation."];
  Node6 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="llvm::ilist_node_with\l_parent\< Instruction,\l BasicBlock \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__with__parent.html",tooltip=" "];
  Node7 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="llvm::ilist_node\< T,\l Options \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node8 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="llvm::ilist_node_impl\l\< ilist_detail::compute\l_node_options\< T, Options...\l \>::type \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip=" "];
  Node9 -> Node8 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="OptionsT::node_base_type",height=0.2,width=0.4,color="black",tooltip=" "];
  Node10 -> Node8 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< ilist_detail::compute\l_node_options\< T, Options...\l \>::type \>" ,fontname="Helvetica"];
  Node10 [label="llvm::ilist_node_impl\l\< OptionsT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip="Implementation for an ilist node."];
  Node9 -> Node10 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 -> Node6 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< Instruction, BasicBlock \>" ,fontname="Helvetica"];
  Node11 [label="llvm::ilist_node_with\l_parent\< NodeTy, ParentTy,\l Options \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__with__parent.html",tooltip="An ilist node that can access its parent list."];
  Node12 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="llvm::ilist_node\< NodeTy,\l Options... \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node13 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="llvm::ilist_node_impl\l\< OptionsT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip="Implementation for an ilist node."];
  Node9 -> Node13 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 -> Node12 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< NodeTy, Options... \>" ,fontname="Helvetica"];
  Node14 [label="llvm::ilist_node\< T,\l Options \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node8 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="llvm::AddrSpaceCastInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AddrSpaceCastInst.html",tooltip="This class represents a conversion between pointers from one address space to another."];
  Node1 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="llvm::BitCastInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BitCastInst.html",tooltip="This class represents a no-op cast from one type to another."];
  Node1 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="llvm::FPExtInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1FPExtInst.html",tooltip="This class represents an extension of floating point types."];
  Node1 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="llvm::FPToSIInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1FPToSIInst.html",tooltip="This class represents a cast from floating point to signed integer."];
  Node1 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="llvm::FPToUIInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1FPToUIInst.html",tooltip="This class represents a cast from floating point to unsigned integer."];
  Node1 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="llvm::FPTruncInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1FPTruncInst.html",tooltip="This class represents a truncation of floating point types."];
  Node1 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="llvm::IntToPtrInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1IntToPtrInst.html",tooltip="This class represents a cast from an integer to a pointer."];
  Node1 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="llvm::PtrToIntInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PtrToIntInst.html",tooltip="This class represents a cast from a pointer to an integer."];
  Node1 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="llvm::SExtInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SExtInst.html",tooltip="This class represents a sign extension of integer types."];
  Node1 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="llvm::SIToFPInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SIToFPInst.html",tooltip="This class represents a cast from signed integer to floating point."];
  Node1 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="llvm::TruncInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1TruncInst.html",tooltip="This class represents a truncation of integer types."];
  Node1 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="llvm::UIToFPInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1UIToFPInst.html",tooltip="This class represents a cast unsigned integer to floating point."];
  Node1 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="llvm::ZExtInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ZExtInst.html",tooltip="This class represents zero extension of integer types."];
}
