digraph "include/llvm/Analysis/OrderedBasicBlock.h"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape="box"];
  Node1 [label="include/llvm/Analysis\l/OrderedBasicBlock.h",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="include/llvm/Analysis\l/OrderedInstructions.h",height=0.2,width=0.4,color="black",URL="$OrderedInstructions_8h.html",tooltip=" "];
  Node2 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="include/llvm/Analysis\l/InstructionPrecedenceTracking.h",height=0.2,width=0.4,color="black",URL="$InstructionPrecedenceTracking_8h.html",tooltip=" "];
  Node3 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="include/llvm/Analysis\l/MustExecute.h",height=0.2,width=0.4,color="black",URL="$MustExecute_8h.html",tooltip="Contains a collection of routines for determining if a given instruction is guaranteed to execute if ..."];
  Node4 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="include/llvm/Analysis\l/IVDescriptors.h",height=0.2,width=0.4,color="black",URL="$IVDescriptors_8h.html",tooltip=" "];
  Node5 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="include/llvm/Transforms\l/Utils/LoopUtils.h",height=0.2,width=0.4,color="red",URL="$LoopUtils_8h.html",tooltip=" "];
  Node6 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="include/llvm/Transforms\l/Utils/LoopVersioning.h",height=0.2,width=0.4,color="red",URL="$LoopVersioning_8h.html",tooltip=" "];
  Node7 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="lib/Transforms/Scalar\l/LoopDistribute.cpp",height=0.2,width=0.4,color="black",URL="$LoopDistribute_8cpp.html",tooltip=" "];
  Node6 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="include/llvm/Transforms\l/Vectorize/LoopVectorization\lLegality.h",height=0.2,width=0.4,color="red",URL="$LoopVectorizationLegality_8h.html",tooltip="This file defines the LoopVectorizationLegality class."];
  Node6 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="lib/CodeGen/ExpandReductions.cpp",height=0.2,width=0.4,color="black",URL="$ExpandReductions_8cpp.html",tooltip=" "];
  Node6 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="lib/CodeGen/HardwareLoops.cpp",height=0.2,width=0.4,color="black",URL="$HardwareLoops_8cpp.html",tooltip="Insert hardware loop intrinsics into loops which are deemed profitable by the target,..."];
  Node6 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="lib/Target/ARM/ARMParallel\lDSP.cpp",height=0.2,width=0.4,color="black",URL="$ARMParallelDSP_8cpp.html",tooltip="Armv6 introduced instructions to perform 32-bit SIMD operations."];
  Node6 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="lib/Target/PowerPC\l/PPCCTRLoops.cpp",height=0.2,width=0.4,color="black",URL="$PPCCTRLoops_8cpp.html",tooltip=" "];
  Node6 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="lib/Target/PowerPC\l/PPCLoopPreIncPrep.cpp",height=0.2,width=0.4,color="black",URL="$PPCLoopPreIncPrep_8cpp.html",tooltip=" "];
  Node6 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="lib/Transforms/Scalar\l/GuardWidening.cpp",height=0.2,width=0.4,color="black",URL="$GuardWidening_8cpp.html",tooltip=" "];
  Node6 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="lib/Transforms/Scalar\l/IndVarSimplify.cpp",height=0.2,width=0.4,color="black",URL="$IndVarSimplify_8cpp.html",tooltip=" "];
  Node6 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="lib/Transforms/Scalar\l/InductiveRangeCheckElimination.cpp",height=0.2,width=0.4,color="black",URL="$InductiveRangeCheckElimination_8cpp.html",tooltip=" "];
  Node6 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="lib/Transforms/Scalar\l/LICM.cpp",height=0.2,width=0.4,color="black",URL="$LICM_8cpp.html",tooltip=" "];
  Node6 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="lib/Transforms/Scalar\l/LoopDeletion.cpp",height=0.2,width=0.4,color="black",URL="$LoopDeletion_8cpp.html",tooltip=" "];
  Node6 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="lib/Transforms/Scalar\l/LoopIdiomRecognize.cpp",height=0.2,width=0.4,color="black",URL="$LoopIdiomRecognize_8cpp.html",tooltip=" "];
  Node6 -> Node28 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="lib/Transforms/Scalar\l/LoopInstSimplify.cpp",height=0.2,width=0.4,color="black",URL="$LoopInstSimplify_8cpp.html",tooltip=" "];
  Node6 -> Node29 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="lib/Transforms/Scalar\l/LoopInterchange.cpp",height=0.2,width=0.4,color="black",URL="$LoopInterchange_8cpp.html",tooltip=" "];
  Node6 -> Node30 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 [label="lib/Transforms/Scalar\l/LoopPredication.cpp",height=0.2,width=0.4,color="black",URL="$LoopPredication_8cpp.html",tooltip=" "];
  Node6 -> Node47 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node47 [label="lib/Transforms/Utils\l/LoopUtils.cpp",height=0.2,width=0.4,color="black",URL="$LoopUtils_8cpp.html",tooltip=" "];
  Node5 -> Node49 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node49 [label="lib/Analysis/IVDescriptors.cpp",height=0.2,width=0.4,color="black",URL="$IVDescriptors_8cpp.html",tooltip=" "];
  Node5 -> Node50 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node50 [label="lib/Analysis/LoopInfo.cpp",height=0.2,width=0.4,color="black",URL="$LoopInfo_8cpp.html",tooltip=" "];
  Node4 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 -> Node49 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 -> Node51 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node51 [label="lib/Analysis/MustExecute.cpp",height=0.2,width=0.4,color="black",URL="$MustExecute_8cpp.html",tooltip=" "];
  Node4 -> Node47 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 -> Node52 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node52 [label="include/llvm/Transforms\l/Scalar/GVN.h",height=0.2,width=0.4,color="black",URL="$GVN_8h.html",tooltip="This file provides the interface for LLVM's Global Value Numbering pass which eliminates fully redund..."];
  Node52 -> Node53 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node53 [label="include/llvm/LinkAllPasses.h",height=0.2,width=0.4,color="black",URL="$LinkAllPasses_8h.html",tooltip=" "];
  Node52 -> Node54 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node54 [label="lib/Passes/PassBuilder.cpp",height=0.2,width=0.4,color="black",URL="$PassBuilder_8cpp.html",tooltip="This file provides the implementation of the PassBuilder based on our static pass registry as well as..."];
  Node52 -> Node55 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node55 [label="lib/Target/AMDGPU/AMDGPUTarget\lMachine.cpp",height=0.2,width=0.4,color="black",URL="$AMDGPUTargetMachine_8cpp.html",tooltip="The AMDGPU target machine contains all of the hardware specific information needed to emit code for R..."];
  Node52 -> Node56 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node56 [label="lib/Target/NVPTX/NVPTXTarget\lMachine.cpp",height=0.2,width=0.4,color="black",URL="$NVPTXTargetMachine_8cpp.html",tooltip=" "];
  Node52 -> Node57 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node57 [label="lib/Transforms/IPO\l/PassManagerBuilder.cpp",height=0.2,width=0.4,color="black",URL="$PassManagerBuilder_8cpp.html",tooltip=" "];
  Node52 -> Node58 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node58 [label="lib/Transforms/Scalar\l/GVN.cpp",height=0.2,width=0.4,color="black",URL="$GVN_8cpp.html",tooltip=" "];
  Node52 -> Node59 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node59 [label="lib/Transforms/Scalar\l/GVNHoist.cpp",height=0.2,width=0.4,color="black",URL="$GVNHoist_8cpp.html",tooltip=" "];
  Node52 -> Node60 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node60 [label="lib/Transforms/Scalar\l/GVNSink.cpp",height=0.2,width=0.4,color="black",URL="$GVNSink_8cpp.html",tooltip="This pass attempts to sink instructions into successors, reducing static instruction count and enabli..."];
  Node52 -> Node61 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node61 [label="lib/Transforms/Scalar\l/Scalar.cpp",height=0.2,width=0.4,color="black",URL="$Scalar_8cpp.html",tooltip=" "];
  Node3 -> Node62 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node62 [label="lib/Analysis/Instruction\lPrecedenceTracking.cpp",height=0.2,width=0.4,color="black",URL="$InstructionPrecedenceTracking_8cpp.html",tooltip=" "];
  Node2 -> Node63 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node63 [label="include/llvm/Transforms\l/Utils/PredicateInfo.h",height=0.2,width=0.4,color="black",URL="$PredicateInfo_8h.html",tooltip="This file implements the PredicateInfo analysis, which creates an Extended SSA form for operations us..."];
  Node63 -> Node64 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node64 [label="include/llvm/Transforms\l/Scalar/SCCP.h",height=0.2,width=0.4,color="black",URL="$Scalar_2SCCP_8h.html",tooltip=" "];
  Node64 -> Node54 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node64 -> Node65 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node65 [label="lib/Transforms/IPO\l/SCCP.cpp",height=0.2,width=0.4,color="black",URL="$IPO_2SCCP_8cpp.html",tooltip=" "];
  Node64 -> Node66 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node66 [label="lib/Transforms/Scalar\l/SCCP.cpp",height=0.2,width=0.4,color="black",URL="$Scalar_2SCCP_8cpp.html",tooltip=" "];
  Node63 -> Node67 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node67 [label="lib/Transforms/Scalar\l/NewGVN.cpp",height=0.2,width=0.4,color="black",URL="$NewGVN_8cpp.html",tooltip="This file implements the new LLVM's Global Value Numbering pass."];
  Node63 -> Node66 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node63 -> Node68 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node68 [label="lib/Transforms/Utils\l/PredicateInfo.cpp",height=0.2,width=0.4,color="black",URL="$PredicateInfo_8cpp.html",tooltip=" "];
  Node2 -> Node69 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node69 [label="lib/Analysis/OrderedInstructions.cpp",height=0.2,width=0.4,color="black",URL="$OrderedInstructions_8cpp.html",tooltip=" "];
  Node1 -> Node70 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node70 [label="lib/Analysis/CaptureTracking.cpp",height=0.2,width=0.4,color="black",URL="$CaptureTracking_8cpp.html",tooltip=" "];
  Node1 -> Node71 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node71 [label="lib/Analysis/MemoryDependence\lAnalysis.cpp",height=0.2,width=0.4,color="black",URL="$MemoryDependenceAnalysis_8cpp.html",tooltip=" "];
  Node1 -> Node72 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node72 [label="lib/Analysis/OrderedBasic\lBlock.cpp",height=0.2,width=0.4,color="black",URL="$OrderedBasicBlock_8cpp.html",tooltip=" "];
  Node1 -> Node73 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node73 [label="lib/Transforms/Scalar\l/DeadStoreElimination.cpp",height=0.2,width=0.4,color="black",URL="$DeadStoreElimination_8cpp.html",tooltip=" "];
  Node1 -> Node74 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node74 [label="lib/Transforms/Vectorize\l/LoadStoreVectorizer.cpp",height=0.2,width=0.4,color="black",URL="$LoadStoreVectorizer_8cpp.html",tooltip=" "];
}
