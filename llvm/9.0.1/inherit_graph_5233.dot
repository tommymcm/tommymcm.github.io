digraph "Graphical Class Hierarchy"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape="box"];
  rankdir="LR";
  Node0 [label="std::is_same",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node0 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 [label="llvm::iterator_facade\l_base\< mapped_iterator\l\< ItTy, FuncTy \>, std::\literator_traits\< ItTy \>\l::iterator_category, std\l::remove_reference\< decltype\l(std::declval\< FuncTy \>()(*std\l::declval\< ItTy \>())) \>::type,\l typename std::iterator_traits\l\< ItTy \>::difference_type, typename\l std::conditional\< std::is_same\< std\l::remove_reference\< decltype(std::declval\l\< FuncTy \>()(*std::declval\< ItTy \>())) \>\l::type, typename std::iterator_traits\< ItTy\l \>::value_type \>::value, typename std::iterator\l_traits\< ItTy \>::pointer, std::remove_reference\l\< decltype(std::declval\< FuncTy \>()(*std::declval\l\< ItTy \>())) \>::type * \>::type, typename std::conditional\l\< std::is_same\< std::remove_reference\< decltype(std::declval\l\< FuncTy \>()(*std::declval\< ItTy \>())) \>::type, typename std\l::iterator_traits\< ItTy \>::value_type \>::value, typename std\l::iterator_traits\< ItTy \>::reference, std::remove_reference\< decltype\l(std::declval\< FuncTy \>()(*std::declval\< ItTy \>())) \>::type & \>::type \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1iterator__facade__base.html",tooltip=" "];
}
