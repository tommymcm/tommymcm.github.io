digraph "llvm::FastISel::CallLoweringInfo"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape="box"];
  rankdir="LR";
  Node1 [label="llvm::FastISel::CallLoweringInfo",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" RetTy" ,fontname="Helvetica"];
  Node2 [label="llvm::Type",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Type.html",tooltip="The instances of the Type class are immutable: once they are created, they are never changed."];
  Node3 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NumContainedTys" ,fontname="Helvetica"];
  Node3 [label="unsigned",height=0.2,width=0.4,color="black",URL="$classunsigned.html",tooltip=" "];
  Node2 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ContainedTys" ,fontname="Helvetica"];
  Node4 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DoesNotReturn\nIsInReg\nIsPatchPoint\nIsReturnValueUsed\nIsTailCall\nIsVarArg\nRetSExt\nRetZExt" ,fontname="Helvetica"];
  Node4 [label="bool",height=0.2,width=0.4,color="black",URL="$classbool.html",tooltip=" "];
  Node3 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CallConv\nNumFixedArgs\nNumResultRegs\nResultReg" ,fontname="Helvetica"];
  Node5 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Callee" ,fontname="Helvetica"];
  Node5 [label="llvm::Value",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Value.html",tooltip="LLVM Value Representation."];
  Node3 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" HasDescriptor\nHasHungOffUses\nHasName\nIsUsedByMD\nMaxAlignmentExponent\nMaximumAlignment\nNumUserOperands\nSubclassOptionalData" ,fontname="Helvetica"];
  Node6 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Symbol" ,fontname="Helvetica"];
  Node6 [label="llvm::MCSymbol",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MCSymbol.html",tooltip="MCSymbol - Instances of this class represent a symbol name in the MC file, and MCSymbols are created ..."];
  Node7 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AbsolutePseudoFragment" ,fontname="Helvetica"];
  Node7 [label="llvm::MCFragment",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MCFragment.html",tooltip=" "];
  Node8 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="llvm::ilist_node_with\l_parent\< MCFragment,\l MCSection \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__with__parent.html",tooltip=" "];
  Node9 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="llvm::ilist_node\< T,\l Options \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node10 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="llvm::ilist_node_impl\l\< ilist_detail::compute\l_node_options\< T, Options...\l \>::type \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip=" "];
  Node11 -> Node10 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="OptionsT::node_base_type",height=0.2,width=0.4,color="black",tooltip=" "];
  Node12 -> Node10 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< ilist_detail::compute\l_node_options\< T, Options...\l \>::type \>" ,fontname="Helvetica"];
  Node12 [label="llvm::ilist_node_impl\l\< OptionsT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip="Implementation for an ilist node."];
  Node11 -> Node12 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 -> Node8 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< MCFragment, MCSection \>" ,fontname="Helvetica"];
  Node13 [label="llvm::ilist_node_with\l_parent\< NodeTy, ParentTy,\l Options \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__with__parent.html",tooltip="An ilist node that can access its parent list."];
  Node14 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="llvm::ilist_node\< NodeTy,\l Options... \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node15 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="llvm::ilist_node_impl\l\< OptionsT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip="Implementation for an ilist node."];
  Node11 -> Node15 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 -> Node14 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< NodeTy, Options... \>" ,fontname="Helvetica"];
  Node16 [label="llvm::ilist_node\< T,\l Options \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node10 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 -> Node7 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" HasInstructions" ,fontname="Helvetica"];
  Node17 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" FragmentAndHasName" ,fontname="Helvetica"];
  Node17 [label="llvm::PointerIntPair\l\< llvm::MCFragment *, 1 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PointerIntPair.html",tooltip=" "];
  Node18 -> Node17 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::MCFragment\l *, 1 \>" ,fontname="Helvetica"];
  Node18 [label="llvm::PointerIntPair\l\< PointerTy, IntBits,\l IntType, PtrTraits, Info \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PointerIntPair.html",tooltip="PointerIntPair - This class implements a pair of a pointer and small integer."];
  Node3 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CommonAlignLog2\nIsExternal\nIsPrivateExtern\nIsRedefinable\nIsRegistered\nIsTemporary\nIsUsed\nIsUsedInReloc\nKind\nSymbolContents\n..." ,fontname="Helvetica"];
  Node19 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Flags\nIndex" ,fontname="Helvetica"];
  Node19 [label="uint32_t",height=0.2,width=0.4,color="black",URL="$classuint32__t.html",tooltip=" "];
  Node20 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AlignmentPadding\nCommonSize\nOffset" ,fontname="Helvetica"];
  Node20 [label="uint64_t",height=0.2,width=0.4,color="black",tooltip=" "];
  Node21 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Value" ,fontname="Helvetica"];
  Node21 [label="llvm::MCExpr",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MCExpr.html",tooltip="Base class for the full range of assembler expressions which are needed for parsing."];
  Node22 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" @286" ,fontname="Helvetica"];
  Node22 [label="anonymous:@286",height=0.2,width=0.4,color="black",tooltip=" "];
  Node23 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Args" ,fontname="Helvetica"];
  Node23 [label="ArgListTy",height=0.2,width=0.4,color="black",tooltip=" "];
  Node24 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CS" ,fontname="Helvetica"];
  Node24 [label="llvm::ImmutableCallSite",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ImmutableCallSite.html",tooltip="Establish a view to a call site for examination."];
  Node25 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="llvm::CallSiteBase\l\< FunTy, BBTy, ValTy,\l UserTy, UseTy, InstrTy,\l CallTy, InvokeTy, CallBrTy,\l IterTy \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1CallSiteBase.html",tooltip=" "];
  Node26 -> Node25 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" I" ,fontname="Helvetica"];
  Node26 [label="llvm::PointerIntPair\l\< const Instruction *,\l 2, int \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PointerIntPair.html",tooltip=" "];
  Node18 -> Node26 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< const Instruction\l *, 2, int \>" ,fontname="Helvetica"];
  Node27 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Call" ,fontname="Helvetica"];
  Node27 [label="llvm::MachineInstr",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineInstr.html",tooltip="Representation of each machine instruction."];
  Node28 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="llvm::ilist_node_with\l_parent\< MachineInstr,\l MachineBasicBlock, ilist\l_sentinel_tracking\< true \> \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__with__parent.html",tooltip=" "];
  Node29 -> Node28 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="llvm::ilist_node\< T,\l Options \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node10 -> Node29 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 -> Node28 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< MachineInstr, MachineBasic\lBlock, ilist_sentinel_tracking\l\< true \> \>" ,fontname="Helvetica"];
  Node30 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" OutVals" ,fontname="Helvetica"];
  Node30 [label="llvm::SmallVector\<\l llvm::Value *, 16 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node31 -> Node30 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node31 [label="llvm::SmallVectorImpl\< T \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip="This class consists of common code factored out of the SmallVector class to reduce code duplication b..."];
  Node32 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node32 [label="llvm::SmallVectorTemplate\lBase\< T, bool \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorTemplateBase.html",tooltip="SmallVectorTemplateBase<TriviallyCopyable = false> - This is where we put method implementations that..."];
  Node33 -> Node32 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 [label="llvm::SmallVectorTemplate\lCommon\< T, typename \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SmallVectorTemplateCommon.html",tooltip="This is the part of SmallVectorTemplateBase which does not depend on whether the type T is a POD."];
  Node36 -> Node30 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node36 [label="llvm::SmallVectorStorage\l\< T, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip="Storage for the SmallVector elements."];
  Node37 -> Node36 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node37 [label="llvm::AlignedCharArrayUnion\< T \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1AlignedCharArrayUnion.html",tooltip=" "];
  Node38 -> Node37 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node38 [label="llvm::AlignedCharArray\l\< Alignment, Size \>",height=0.2,width=0.4,color="red",URL="$structllvm_1_1AlignedCharArray.html",tooltip="Helper for building an aligned character array type."];
  Node40 -> Node37 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< T \>" ,fontname="Helvetica"];
  Node40 [label="llvm::AlignedCharArrayUnion\l\< T1, T2, T3, T4, T5, T6,\l T7, T8, T9, T10 \>",height=0.2,width=0.4,color="red",URL="$structllvm_1_1AlignedCharArrayUnion.html",tooltip="This union template exposes a suitably aligned and sized character array member which can hold elemen..."];
  Node42 -> Node30 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::Value *, 16 \>" ,fontname="Helvetica"];
  Node42 [label="llvm::SmallVector\<\l T, N \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip="This is a 'vector' (really, a variable-sized array), optimized for the case when the array is small."];
  Node43 -> Node42 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node43 [label="llvm::SmallVectorImpl\< T \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip="This class consists of common code factored out of the SmallVector class to reduce code duplication b..."];
  Node32 -> Node43 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node44 -> Node42 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node44 [label="llvm::SmallVectorStorage\l\< T, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip="Storage for the SmallVector elements."];
  Node37 -> Node44 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node45 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" OutFlags" ,fontname="Helvetica"];
  Node45 [label="llvm::SmallVector\<\l llvm::ISD::ArgFlagsTy, 16 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node46 -> Node45 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node46 [label="llvm::SmallVectorImpl\< T \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip="This class consists of common code factored out of the SmallVector class to reduce code duplication b..."];
  Node32 -> Node46 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node47 -> Node45 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node47 [label="llvm::SmallVectorStorage\l\< T, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip="Storage for the SmallVector elements."];
  Node37 -> Node47 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node42 -> Node45 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::ISD::ArgFlagsTy,\l 16 \>" ,fontname="Helvetica"];
  Node48 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" OutRegs" ,fontname="Helvetica"];
  Node48 [label="llvm::SmallVector\<\l unsigned, 16 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node49 -> Node48 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node49 [label="llvm::SmallVectorImpl\< T \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip="This class consists of common code factored out of the SmallVector class to reduce code duplication b..."];
  Node32 -> Node49 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node50 -> Node48 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node50 [label="llvm::SmallVectorStorage\l\< T, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip="Storage for the SmallVector elements."];
  Node37 -> Node50 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node42 -> Node48 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< unsigned, 16 \>" ,fontname="Helvetica"];
  Node51 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Ins" ,fontname="Helvetica"];
  Node51 [label="llvm::SmallVector\<\l llvm::ISD::InputArg, 4 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node52 -> Node51 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node52 [label="llvm::SmallVectorImpl\< T \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip="This class consists of common code factored out of the SmallVector class to reduce code duplication b..."];
  Node32 -> Node52 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node53 -> Node51 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node53 [label="llvm::SmallVectorStorage\l\< T, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip="Storage for the SmallVector elements."];
  Node37 -> Node53 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node42 -> Node51 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::ISD::InputArg, 4 \>" ,fontname="Helvetica"];
  Node54 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InRegs" ,fontname="Helvetica"];
  Node54 [label="llvm::SmallVector\<\l unsigned, 4 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node49 -> Node54 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node50 -> Node54 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node42 -> Node54 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< unsigned, 4 \>" ,fontname="Helvetica"];
}
