digraph "llvm::TargetLowering::TargetLoweringOpt"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape="box"];
  Node1 [label="llvm::TargetLowering\l::TargetLoweringOpt",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="A convenience struct that encapsulates a DAG, and two SDValues for returning information from TargetL..."];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DAG" ,fontname="Helvetica"];
  Node2 [label="llvm::SelectionDAG",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SelectionDAG.html",tooltip="This is used to represent a portion of an LLVM function in a low-level Data Dependence DAG representa..."];
  Node3 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NewNodesMustHaveLegalTypes" ,fontname="Helvetica"];
  Node3 [label="bool",height=0.2,width=0.4,color="black",URL="$classbool.html",tooltip=" "];
  Node4 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NodeGraphAttrs" ,fontname="Helvetica"];
  Node4 [label="map\< const llvm::SDNode\l *, std::string \>",height=0.2,width=0.4,color="black",tooltip=" "];
  Node3 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LegalOps\nLegalTys" ,fontname="Helvetica"];
  Node5 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" New\nOld" ,fontname="Helvetica"];
  Node5 [label="llvm::SDValue",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SDValue.html",tooltip="Unlike LLVM values, Selection DAG nodes may return multiple values as the result of a computation."];
}
