<map id="llvm::Instruction" name="llvm::Instruction">
<area shape="rect" id="node1" title=" " alt="" coords="396,623,524,648"/>
<area shape="rect" id="node5" href="$classllvm_1_1AtomicCmpXchgInst.html" title="An instruction that atomically checks whether a specified value is in a memory location,..." alt="" coords="572,5,763,31"/>
<area shape="rect" id="node6" href="$classllvm_1_1AtomicRMWInst.html" title="an instruction that atomically reads a memory location, combines it with another value,..." alt="" coords="586,55,749,80"/>
<area shape="rect" id="node7" href="$classllvm_1_1BinaryOperator.html" title=" " alt="" coords="588,104,747,129"/>
<area shape="rect" id="node8" href="$classllvm_1_1BranchInst.html" title="Conditional or Unconditional Branch instruction." alt="" coords="603,153,731,179"/>
<area shape="rect" id="node9" href="$classllvm_1_1CallBase.html" title="Base class for all callable instructions (InvokeInst and CallInst) Holds everything related to callin..." alt="" coords="609,203,725,228"/>
<area shape="rect" id="node14" href="$classllvm_1_1CatchReturnInst.html" title=" " alt="" coords="586,252,749,277"/>
<area shape="rect" id="node15" href="$classllvm_1_1CatchSwitchInst.html" title=" " alt="" coords="586,301,749,327"/>
<area shape="rect" id="node16" href="$classllvm_1_1CleanupReturnInst.html" title=" " alt="" coords="578,351,757,376"/>
<area shape="rect" id="node17" href="$classllvm_1_1CmpInst.html" title="This class is the base class for the comparison instructions." alt="" coords="611,400,724,425"/>
<area shape="rect" id="node20" href="$classllvm_1_1ExtractElementInst.html" title="This instruction extracts a single (scalar) element from a VectorType value." alt="" coords="576,449,759,475"/>
<area shape="rect" id="node21" href="$classllvm_1_1FenceInst.html" title="An instruction for ordering other memory operations." alt="" coords="607,499,728,524"/>
<area shape="rect" id="node22" href="$classllvm_1_1FuncletPadInst.html" title=" " alt="" coords="591,548,744,573"/>
<area shape="rect" id="node25" href="$classllvm_1_1GetElementPtrInst.html" title="an instruction for type&#45;safe pointer arithmetic to access elements of arrays and structs" alt="" coords="578,597,757,623"/>
<area shape="rect" id="node26" href="$classllvm_1_1IndirectBrInst.html" title="Indirect Branch Instruction." alt="" coords="594,647,741,672"/>
<area shape="rect" id="node27" href="$classllvm_1_1InsertElementInst.html" title="This instruction inserts a single (scalar) element into a VectorType value." alt="" coords="580,696,755,721"/>
<area shape="rect" id="node28" href="$classllvm_1_1InsertValueInst.html" title="This instruction inserts a struct field of array element value into an aggregate value." alt="" coords="589,745,745,771"/>
<area shape="rect" id="node29" href="$classllvm_1_1LandingPadInst.html" title="The landingpad instruction holds all of the information necessary to generate correct exception handl..." alt="" coords="589,795,746,820"/>
<area shape="rect" id="node30" href="$classllvm_1_1PHINode.html" title=" " alt="" coords="610,844,725,869"/>
<area shape="rect" id="node31" href="$classllvm_1_1ResumeInst.html" title="Resume the propagation of an exception." alt="" coords="599,893,735,919"/>
<area shape="rect" id="node32" href="$classllvm_1_1ReturnInst.html" title="Return a value (possibly void), from a function." alt="" coords="604,943,731,968"/>
<area shape="rect" id="node33" href="$classllvm_1_1SelectInst.html" title="This class represents the LLVM &#39;select&#39; instruction." alt="" coords="606,992,729,1017"/>
<area shape="rect" id="node34" href="$classllvm_1_1ShuffleVectorInst.html" title="This instruction constructs a fixed permutation of two input vectors." alt="" coords="583,1041,752,1067"/>
<area shape="rect" id="node35" href="$classllvm_1_1StoreInst.html" title="An instruction for storing to memory." alt="" coords="609,1091,726,1116"/>
<area shape="rect" id="node36" href="$classllvm_1_1SwitchInst.html" title="Multiway switch." alt="" coords="604,1140,731,1165"/>
<area shape="rect" id="node37" href="$classllvm_1_1UnaryInstruction.html" title=" " alt="" coords="584,1189,751,1215"/>
<area shape="rect" id="node49" href="$classllvm_1_1UnreachableInst.html" title="This function has undefined behavior." alt="" coords="585,1239,750,1264"/>
<area shape="rect" id="node2" href="$classllvm_1_1User.html" title=" " alt="" coords="203,593,293,619"/>
<area shape="rect" id="node3" href="$classllvm_1_1Value.html" title="LLVM Value Representation." alt="" coords="5,593,100,619"/>
<area shape="rect" id="node4" href="$classilist__node__with__parent.html" title=" " alt="" coords="148,643,348,683"/>
<area shape="rect" id="node10" href="$classllvm_1_1CallBrInst.html" title="CallBr instruction, tracking function calls that may not return control but instead transfer it to a ..." alt="" coords="832,153,955,179"/>
<area shape="rect" id="node11" href="$classllvm_1_1CallInst.html" title="This class represents a function call, abstracting a target machine&#39;s calling convention." alt="" coords="839,203,947,228"/>
<area shape="rect" id="node13" href="$classllvm_1_1InvokeInst.html" title="Invoke instruction." alt="" coords="830,252,957,277"/>
<area shape="rect" id="node12" href="$classllvm_1_1IntrinsicInst.html" title="A wrapper class for inspecting calls to intrinsic functions." alt="" coords="1047,203,1182,228"/>
<area shape="rect" id="node18" href="$classllvm_1_1FCmpInst.html" title="This instruction compares its operands according to the predicate given to the constructor." alt="" coords="833,376,954,401"/>
<area shape="rect" id="node19" href="$classllvm_1_1ICmpInst.html" title="This instruction compares its operands according to the predicate given to the constructor." alt="" coords="835,425,952,451"/>
<area shape="rect" id="node23" href="$classllvm_1_1CatchPadInst.html" title=" " alt="" coords="822,524,965,549"/>
<area shape="rect" id="node24" href="$classllvm_1_1CleanupPadInst.html" title=" " alt="" coords="814,573,973,599"/>
<area shape="rect" id="node38" href="$classllvm_1_1AllocaInst.html" title="an instruction to allocate memory on the stack" alt="" coords="832,1065,955,1091"/>
<area shape="rect" id="node39" href="$classllvm_1_1CastInst.html" title="This is the base class for all instructions that perform data casts." alt="" coords="837,1115,949,1140"/>
<area shape="rect" id="node45" href="$classllvm_1_1ExtractValueInst.html" title="This instruction extracts a struct member or array element value from an aggregate value." alt="" coords="811,1164,976,1189"/>
<area shape="rect" id="node46" href="$classllvm_1_1LoadInst.html" title="An instruction for reading from memory." alt="" coords="836,1213,951,1239"/>
<area shape="rect" id="node47" href="$classllvm_1_1UnaryOperator.html" title=" " alt="" coords="816,1263,971,1288"/>
<area shape="rect" id="node48" href="$classllvm_1_1VAArgInst.html" title="This class represents the va_arg llvm instruction, which returns an argument of the specified type gi..." alt="" coords="832,1312,955,1337"/>
<area shape="rect" id="node40" href="$classllvm_1_1AddrSpaceCastInst.html" title="This class represents a conversion between pointers from one address space to another." alt="" coords="1024,1016,1205,1041"/>
<area shape="rect" id="node41" href="$classllvm_1_1BitCastInst.html" title="This class represents a no&#45;op cast from one type to another." alt="" coords="1049,1065,1180,1091"/>
<area shape="rect" id="node42" href="$classllvm_1_1FPExtInst.html" title="This class represents an extension of floating point types." alt="" coords="1055,1115,1175,1140"/>
<area shape="rect" id="node43" href="$classllvm_1_1FPToSIInst.html" title="This class represents a cast from floating point to signed integer." alt="" coords="1052,1164,1177,1189"/>
<area shape="rect" id="node44" href="$classllvm_1_1FPToUIInst.html" title="This class represents a cast from floating point to unsigned integer." alt="" coords="1051,1213,1178,1239"/>
</map>
