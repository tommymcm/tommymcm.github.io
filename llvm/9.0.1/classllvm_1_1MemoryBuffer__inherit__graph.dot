digraph "llvm::MemoryBuffer"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape="box"];
  rankdir="LR";
  Node1 [label="llvm::MemoryBuffer",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="This interface provides simple read-only access to a block of memory, and provides simple methods for..."];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="llvm::SmallVectorMemoryBuffer",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorMemoryBuffer.html",tooltip="SmallVector-backed MemoryBuffer instance."];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="llvm::WritableMemoryBuffer",height=0.2,width=0.4,color="black",URL="$classllvm_1_1WritableMemoryBuffer.html",tooltip="This class is an extension of MemoryBuffer, which allows copy-on-write access to the underlying conte..."];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="llvm::WriteThroughMemory\lBuffer",height=0.2,width=0.4,color="black",URL="$classllvm_1_1WriteThroughMemoryBuffer.html",tooltip="This class is an extension of MemoryBuffer, which allows write access to the underlying contents and ..."];
}
