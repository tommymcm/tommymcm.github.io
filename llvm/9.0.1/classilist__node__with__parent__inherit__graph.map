<map id="ilist_node_with_parent" name="ilist_node_with_parent">
<area shape="rect" id="node1" title=" " alt="" coords="5,647,175,672"/>
<area shape="rect" id="node2" href="$classllvm_1_1BasicBlock.html" title="LLVM Basic Block Representation." alt="" coords="233,575,453,615"/>
<area shape="rect" id="node3" href="$classllvm_1_1Instruction.html" title=" " alt="" coords="249,639,438,679"/>
<area shape="rect" id="node39" href="$classllvm_1_1VPRecipeBase.html" title="VPRecipeBase is a base class modeling a sequence of one or more output IR instructions." alt="" coords="223,1478,464,1518"/>
<area shape="rect" id="node4" href="$classllvm_1_1AtomicCmpXchgInst.html" title="An instruction that atomically checks whether a specified value is in a memory location,..." alt="" coords="537,5,727,31"/>
<area shape="rect" id="node5" href="$classllvm_1_1AtomicRMWInst.html" title="an instruction that atomically reads a memory location, combines it with another value,..." alt="" coords="551,55,713,80"/>
<area shape="rect" id="node6" href="$classllvm_1_1BinaryOperator.html" title=" " alt="" coords="553,104,711,129"/>
<area shape="rect" id="node7" href="$classllvm_1_1BranchInst.html" title="Conditional or Unconditional Branch instruction." alt="" coords="568,153,696,179"/>
<area shape="rect" id="node8" href="$classllvm_1_1CallBase.html" title="Base class for all callable instructions (InvokeInst and CallInst) Holds everything related to callin..." alt="" coords="574,203,690,228"/>
<area shape="rect" id="node12" href="$classllvm_1_1CatchReturnInst.html" title=" " alt="" coords="551,252,713,277"/>
<area shape="rect" id="node13" href="$classllvm_1_1CatchSwitchInst.html" title=" " alt="" coords="551,301,713,327"/>
<area shape="rect" id="node14" href="$classllvm_1_1CleanupReturnInst.html" title=" " alt="" coords="543,351,721,376"/>
<area shape="rect" id="node15" href="$classllvm_1_1CmpInst.html" title="This class is the base class for the comparison instructions." alt="" coords="575,400,689,425"/>
<area shape="rect" id="node18" href="$classllvm_1_1ExtractElementInst.html" title="This instruction extracts a single (scalar) element from a VectorType value." alt="" coords="541,449,723,475"/>
<area shape="rect" id="node19" href="$classllvm_1_1FenceInst.html" title="An instruction for ordering other memory operations." alt="" coords="571,499,693,524"/>
<area shape="rect" id="node20" href="$classllvm_1_1FuncletPadInst.html" title=" " alt="" coords="555,548,709,573"/>
<area shape="rect" id="node23" href="$classllvm_1_1GetElementPtrInst.html" title="an instruction for type&#45;safe pointer arithmetic to access elements of arrays and structs" alt="" coords="543,597,721,623"/>
<area shape="rect" id="node24" href="$classllvm_1_1IndirectBrInst.html" title="Indirect Branch Instruction." alt="" coords="559,647,705,672"/>
<area shape="rect" id="node25" href="$classllvm_1_1InsertElementInst.html" title="This instruction inserts a single (scalar) element into a VectorType value." alt="" coords="545,696,719,721"/>
<area shape="rect" id="node26" href="$classllvm_1_1InsertValueInst.html" title="This instruction inserts a struct field of array element value into an aggregate value." alt="" coords="554,745,710,771"/>
<area shape="rect" id="node27" href="$classllvm_1_1LandingPadInst.html" title="The landingpad instruction holds all of the information necessary to generate correct exception handl..." alt="" coords="553,795,711,820"/>
<area shape="rect" id="node28" href="$classllvm_1_1PHINode.html" title=" " alt="" coords="575,844,689,869"/>
<area shape="rect" id="node29" href="$classllvm_1_1ResumeInst.html" title="Resume the propagation of an exception." alt="" coords="564,893,700,919"/>
<area shape="rect" id="node30" href="$classllvm_1_1ReturnInst.html" title="Return a value (possibly void), from a function." alt="" coords="569,943,695,968"/>
<area shape="rect" id="node31" href="$classllvm_1_1SelectInst.html" title="This class represents the LLVM &#39;select&#39; instruction." alt="" coords="571,992,693,1017"/>
<area shape="rect" id="node32" href="$classllvm_1_1ShuffleVectorInst.html" title="This instruction constructs a fixed permutation of two input vectors." alt="" coords="547,1041,717,1067"/>
<area shape="rect" id="node33" href="$classllvm_1_1StoreInst.html" title="An instruction for storing to memory." alt="" coords="573,1091,691,1116"/>
<area shape="rect" id="node34" href="$classllvm_1_1SwitchInst.html" title="Multiway switch." alt="" coords="569,1140,695,1165"/>
<area shape="rect" id="node35" href="$classllvm_1_1UnaryInstruction.html" title=" " alt="" coords="549,1189,715,1215"/>
<area shape="rect" id="node38" href="$classllvm_1_1UnreachableInst.html" title="This function has undefined behavior." alt="" coords="549,1239,715,1264"/>
<area shape="rect" id="node9" href="$classllvm_1_1CallBrInst.html" title="CallBr instruction, tracking function calls that may not return control but instead transfer it to a ..." alt="" coords="818,153,941,179"/>
<area shape="rect" id="node10" href="$classllvm_1_1CallInst.html" title="This class represents a function call, abstracting a target machine&#39;s calling convention." alt="" coords="825,203,933,228"/>
<area shape="rect" id="node11" href="$classllvm_1_1InvokeInst.html" title="Invoke instruction." alt="" coords="816,252,943,277"/>
<area shape="rect" id="node16" href="$classllvm_1_1FCmpInst.html" title="This instruction compares its operands according to the predicate given to the constructor." alt="" coords="819,376,940,401"/>
<area shape="rect" id="node17" href="$classllvm_1_1ICmpInst.html" title="This instruction compares its operands according to the predicate given to the constructor." alt="" coords="821,425,938,451"/>
<area shape="rect" id="node21" href="$classllvm_1_1CatchPadInst.html" title=" " alt="" coords="808,524,951,549"/>
<area shape="rect" id="node22" href="$classllvm_1_1CleanupPadInst.html" title=" " alt="" coords="800,573,959,599"/>
<area shape="rect" id="node36" href="$classllvm_1_1AllocaInst.html" title="an instruction to allocate memory on the stack" alt="" coords="818,1165,941,1191"/>
<area shape="rect" id="node37" href="$classllvm_1_1CastInst.html" title="This is the base class for all instructions that perform data casts." alt="" coords="823,1215,935,1240"/>
<area shape="rect" id="node40" href="$classllvm_1_1VPBlendRecipe.html" title="A recipe for vectorizing a phi&#45;node as a sequence of mask&#45;based select instructions." alt="" coords="553,1288,711,1313"/>
<area shape="rect" id="node41" href="$classllvm_1_1VPBranchOnMaskRecipe.html" title="A recipe for generating conditional branches on the bits of a mask." alt="" coords="523,1337,741,1363"/>
<area shape="rect" id="node42" href="$classllvm_1_1VPInstruction.html" title="This is a concrete Recipe that models a single VPlan&#45;level instruction." alt="" coords="559,1387,705,1412"/>
<area shape="rect" id="node43" href="$classllvm_1_1VPInterleaveRecipe.html" title="VPInterleaveRecipe is a recipe for transforming an interleave group of load or stores into one wide l..." alt="" coords="539,1436,725,1461"/>
<area shape="rect" id="node44" href="$classllvm_1_1VPPredInstPHIRecipe.html" title="VPPredInstPHIRecipe is a recipe for generating the phi nodes needed when control converges back from ..." alt="" coords="535,1485,729,1511"/>
<area shape="rect" id="node45" href="$classllvm_1_1VPReplicateRecipe.html" title="VPReplicateRecipe replicates a given instruction producing multiple scalar copies of the original sca..." alt="" coords="541,1535,723,1560"/>
<area shape="rect" id="node46" href="$classllvm_1_1VPWidenIntOrFpInductionRecipe.html" title="A recipe for handling phi nodes of integer and floating&#45;point inductions, producing their vector and ..." alt="" coords="519,1585,745,1625"/>
<area shape="rect" id="node47" href="$classllvm_1_1VPWidenMemoryInstructionRecipe.html" title="A Recipe for widening load/store operations." alt="" coords="512,1649,752,1689"/>
<area shape="rect" id="node48" href="$classllvm_1_1VPWidenPHIRecipe.html" title="A recipe for handling all phi nodes except for integer and FP inductions." alt="" coords="541,1713,723,1739"/>
<area shape="rect" id="node49" href="$classllvm_1_1VPWidenRecipe.html" title="VPWidenRecipe is a recipe for producing a copy of vector type for each Instruction in its ingredients..." alt="" coords="551,1763,713,1788"/>
</map>
