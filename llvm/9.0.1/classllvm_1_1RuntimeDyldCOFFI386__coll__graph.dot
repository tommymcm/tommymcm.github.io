digraph "llvm::RuntimeDyldCOFFI386"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape="box"];
  rankdir="LR";
  Node1 [label="llvm::RuntimeDyldCOFFI386",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="llvm::RuntimeDyldCOFF",height=0.2,width=0.4,color="black",URL="$classllvm_1_1RuntimeDyldCOFF.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="llvm::RuntimeDyldImpl",height=0.2,width=0.4,color="black",URL="$classllvm_1_1RuntimeDyldImpl.html",tooltip=" "];
  Node4 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AbsoluteSymbolSection" ,fontname="Helvetica"];
  Node4 [label="unsigned",height=0.2,width=0.4,color="black",URL="$classunsigned.html",tooltip=" "];
  Node5 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MemMgr" ,fontname="Helvetica"];
  Node5 [label="llvm::RuntimeDyld::\lMemoryManager",height=0.2,width=0.4,color="black",URL="$classllvm_1_1RuntimeDyld_1_1MemoryManager.html",tooltip="Memory Management."];
  Node6 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Resolver" ,fontname="Helvetica"];
  Node6 [label="llvm::JITSymbolResolver",height=0.2,width=0.4,color="black",URL="$classllvm_1_1JITSymbolResolver.html",tooltip="Symbol resolution interface."];
  Node7 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Sections" ,fontname="Helvetica"];
  Node7 [label="llvm::SmallVector\<\l SectionEntry, 64 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node8 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="llvm::SmallVectorImpl\< T \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip="This class consists of common code factored out of the SmallVector class to reduce code duplication b..."];
  Node9 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="llvm::SmallVectorTemplate\lBase\< T, bool \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorTemplateBase.html",tooltip="SmallVectorTemplateBase<TriviallyCopyable = false> - This is where we put method implementations that..."];
  Node10 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="llvm::SmallVectorTemplate\lCommon\< T, typename \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorTemplateCommon.html",tooltip="This is the part of SmallVectorTemplateBase which does not depend on whether the type T is a POD."];
  Node11 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="llvm::SmallVectorBase",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorBase.html",tooltip="This is all the non-templated stuff common to all SmallVectors."];
  Node12 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BeginX" ,fontname="Helvetica"];
  Node12 [label="void *",height=0.2,width=0.4,color="black",tooltip=" "];
  Node4 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Capacity\nSize" ,fontname="Helvetica"];
  Node13 -> Node7 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="llvm::SmallVectorStorage\l\< T, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip="Storage for the SmallVector elements."];
  Node14 -> Node13 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node14 [label="llvm::AlignedCharArrayUnion\< T \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1AlignedCharArrayUnion.html",tooltip=" "];
  Node15 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="llvm::AlignedCharArray\l\< Alignment, Size \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1AlignedCharArray.html",tooltip="Helper for building an aligned character array type."];
  Node16 -> Node15 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" buffer" ,fontname="Helvetica"];
  Node16 [label="char",height=0.2,width=0.4,color="black",URL="$classchar.html",tooltip=" "];
  Node17 -> Node14 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< T \>" ,fontname="Helvetica"];
  Node17 [label="llvm::AlignedCharArrayUnion\l\< T1, T2, T3, T4, T5, T6,\l T7, T8, T9, T10 \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1AlignedCharArrayUnion.html",tooltip="This union template exposes a suitably aligned and sized character array member which can hold elemen..."];
  Node18 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="llvm::AlignedCharArray\l\< Alignment, Size \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1AlignedCharArray.html",tooltip="Helper for building an aligned character array type."];
  Node16 -> Node18 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" buffer" ,fontname="Helvetica"];
  Node19 -> Node7 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< SectionEntry, 64 \>" ,fontname="Helvetica"];
  Node19 [label="llvm::SmallVector\<\l T, N \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip="This is a 'vector' (really, a variable-sized array), optimized for the case when the array is small."];
  Node20 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="llvm::SmallVectorImpl\< T \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip="This class consists of common code factored out of the SmallVector class to reduce code duplication b..."];
  Node9 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 -> Node19 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="llvm::SmallVectorStorage\l\< T, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip="Storage for the SmallVector elements."];
  Node14 -> Node21 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node22 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" GlobalSymbolTable" ,fontname="Helvetica"];
  Node22 [label="llvm::StringMap\< SymbolTable\lEntry \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1StringMap.html",tooltip=" "];
  Node23 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="llvm::StringMapImpl",height=0.2,width=0.4,color="black",URL="$classllvm_1_1StringMapImpl.html",tooltip="StringMapImpl - This is the base class of StringMap that is shared among all of its instantiations."];
  Node24 -> Node23 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TheTable" ,fontname="Helvetica"];
  Node24 [label="llvm::StringMapEntryBase",height=0.2,width=0.4,color="black",URL="$classllvm_1_1StringMapEntryBase.html",tooltip="StringMapEntryBase - Shared base class of StringMapEntry instances."];
  Node4 -> Node23 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ItemSize\nNumBuckets\nNumItems\nNumTombstones" ,fontname="Helvetica"];
  Node25 -> Node22 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< SymbolTableEntry \>" ,fontname="Helvetica"];
  Node25 [label="llvm::StringMap\< ValueTy,\l AllocatorTy \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1StringMap.html",tooltip="StringMap - This is an unconventional map that is specialized for handling keys that are \"strings\",..."];
  Node23 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Relocations" ,fontname="Helvetica"];
  Node26 [label="unordered_map\< unsigned,\l llvm::SmallVector \>",height=0.2,width=0.4,color="black",tooltip=" "];
  Node27 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ExternalSymbolRelocations" ,fontname="Helvetica"];
  Node27 [label="llvm::StringMap\< llvm\l::SmallVector \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1StringMap.html",tooltip=" "];
  Node23 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 -> Node27 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::SmallVector \>" ,fontname="Helvetica"];
  Node28 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Arch" ,fontname="Helvetica"];
  Node28 [label="ArchType",height=0.2,width=0.4,color="black",tooltip=" "];
  Node29 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" HasError\nIsMipsN32ABI\nIsMipsN64ABI\nIsMipsO32ABI\nIsTargetLittleEndian\nProcessAllSections" ,fontname="Helvetica"];
  Node29 [label="bool",height=0.2,width=0.4,color="black",URL="$classbool.html",tooltip=" "];
  Node30 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" lock" ,fontname="Helvetica"];
  Node30 [label="llvm::sys::SmartMutex\l\< false \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1sys_1_1SmartMutex.html",tooltip=" "];
  Node31 -> Node30 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< false \>" ,fontname="Helvetica"];
  Node31 [label="llvm::sys::SmartMutex\l\< mt_only \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1sys_1_1SmartMutex.html",tooltip="SmartMutex - A mutex with a compile time constant parameter that indicates whether this mutex should ..."];
  Node32 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NotifyStubEmitted" ,fontname="Helvetica"];
  Node32 [label="NotifyStubEmittedFunction",height=0.2,width=0.4,color="black",tooltip=" "];
  Node33 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ErrorStr" ,fontname="Helvetica"];
  Node33 [label="string",height=0.2,width=0.4,color="black",tooltip=" "];
}
