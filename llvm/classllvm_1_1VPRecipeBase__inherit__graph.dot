digraph "llvm::VPRecipeBase"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape="box"];
  rankdir="LR";
  Node1 [label="llvm::VPRecipeBase",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="VPRecipeBase is a base class modeling a sequence of one or more output IR instructions."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="llvm::ilist_node_with\l_parent\< VPRecipeBase,\l VPBasicBlock \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__with__parent.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="llvm::ilist_node\< T,\l Options \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="llvm::ilist_node_impl\l\< ilist_detail::compute\l_node_options\< T, Options...\l \>::type \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip=" "];
  Node5 -> Node4 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="OptionsT::node_base_type",height=0.2,width=0.4,color="black",tooltip=" "];
  Node6 -> Node4 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< ilist_detail::compute\l_node_options\< T, Options...\l \>::type \>" ,fontname="Helvetica"];
  Node6 [label="llvm::ilist_node_impl\l\< OptionsT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip="Implementation for an ilist node."];
  Node5 -> Node6 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 -> Node2 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< VPRecipeBase, VPBasicBlock \>" ,fontname="Helvetica"];
  Node7 [label="llvm::ilist_node_with\l_parent\< NodeTy, ParentTy,\l Options \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__with__parent.html",tooltip="An ilist node that can access its parent list."];
  Node8 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="llvm::ilist_node\< NodeTy,\l Options... \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node9 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="llvm::ilist_node_impl\l\< OptionsT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip="Implementation for an ilist node."];
  Node5 -> Node9 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 -> Node8 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< NodeTy, Options... \>" ,fontname="Helvetica"];
  Node10 [label="llvm::ilist_node\< T,\l Options \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node4 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="llvm::VPBlendRecipe",height=0.2,width=0.4,color="black",URL="$classllvm_1_1VPBlendRecipe.html",tooltip="A recipe for vectorizing a phi-node as a sequence of mask-based select instructions."];
  Node1 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="llvm::VPBranchOnMaskRecipe",height=0.2,width=0.4,color="black",URL="$classllvm_1_1VPBranchOnMaskRecipe.html",tooltip="A recipe for generating conditional branches on the bits of a mask."];
  Node1 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="llvm::VPInstruction",height=0.2,width=0.4,color="black",URL="$classllvm_1_1VPInstruction.html",tooltip="This is a concrete Recipe that models a single VPlan-level instruction."];
  Node1 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="llvm::VPInterleaveRecipe",height=0.2,width=0.4,color="black",URL="$classllvm_1_1VPInterleaveRecipe.html",tooltip="VPInterleaveRecipe is a recipe for transforming an interleave group of load or stores into one wide l..."];
  Node1 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="llvm::VPPredInstPHIRecipe",height=0.2,width=0.4,color="black",URL="$classllvm_1_1VPPredInstPHIRecipe.html",tooltip="VPPredInstPHIRecipe is a recipe for generating the phi nodes needed when control converges back from ..."];
  Node1 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="llvm::VPReplicateRecipe",height=0.2,width=0.4,color="black",URL="$classllvm_1_1VPReplicateRecipe.html",tooltip="VPReplicateRecipe replicates a given instruction producing multiple scalar copies of the original sca..."];
  Node1 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="llvm::VPWidenIntOrFpInduction\lRecipe",height=0.2,width=0.4,color="black",URL="$classllvm_1_1VPWidenIntOrFpInductionRecipe.html",tooltip="A recipe for handling phi nodes of integer and floating-point inductions, producing their vector and ..."];
  Node1 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="llvm::VPWidenMemoryInstruction\lRecipe",height=0.2,width=0.4,color="black",URL="$classllvm_1_1VPWidenMemoryInstructionRecipe.html",tooltip="A Recipe for widening load/store operations."];
  Node1 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="llvm::VPWidenPHIRecipe",height=0.2,width=0.4,color="black",URL="$classllvm_1_1VPWidenPHIRecipe.html",tooltip="A recipe for handling all phi nodes except for integer and FP inductions."];
  Node1 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="llvm::VPWidenRecipe",height=0.2,width=0.4,color="black",URL="$classllvm_1_1VPWidenRecipe.html",tooltip="VPWidenRecipe is a recipe for producing a copy of vector type for each Instruction in its ingredients..."];
}
