digraph "llvm::lto::LTOLLVMDiagnosticHandler"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape="box"];
  Node1 [label="llvm::lto::LTOLLVMDiagnostic\lHandler",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="llvm::DiagnosticHandler",height=0.2,width=0.4,color="black",URL="$structllvm_1_1DiagnosticHandler.html",tooltip="This is the base class for diagnostic handling in LLVM."];
  Node3 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DiagnosticContext" ,fontname="Helvetica"];
  Node3 [label="void *",height=0.2,width=0.4,color="black",tooltip=" "];
  Node4 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DiagHandlerCallback" ,fontname="Helvetica"];
  Node4 [label="llvm::DiagnosticInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DiagnosticInfo.html",tooltip="This is the base abstract class for diagnostic reporting in the backend."];
  Node5 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Fn" ,fontname="Helvetica"];
  Node5 [label="DiagnosticHandlerFunction *",height=0.2,width=0.4,color="black",tooltip=" "];
}
