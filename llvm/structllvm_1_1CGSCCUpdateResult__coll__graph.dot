digraph "llvm::CGSCCUpdateResult"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape="box"];
  rankdir="LR";
  Node1 [label="llvm::CGSCCUpdateResult",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Support structure for SCC passes to communicate updates the call graph back to the CGSCC pass manager..."];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" RCWorklist" ,fontname="Helvetica"];
  Node2 [label="llvm::SmallPriorityWorklist\l\< llvm::LazyCallGraph::RefSCC *, 1 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallPriorityWorklist.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="llvm::PriorityWorklist\l\< T, VectorT, MapT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PriorityWorklist.html",tooltip="A FILO worklist that prioritizes on re-insertion without duplication."];
  Node4 -> Node2 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::LazyCallGraph\l::RefSCC *, 1 \>" ,fontname="Helvetica"];
  Node4 [label="llvm::SmallPriorityWorklist\l\< T, N \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallPriorityWorklist.html",tooltip="A version of PriorityWorklist that selects small size optimized data structures for the vector and ma..."];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="llvm::PriorityWorklist\l\< T, SmallVector\< T, N\l \>, SmallDenseMap\< T, ptrdiff_t \> \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PriorityWorklist.html",tooltip=" "];
  Node6 -> Node5 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< T, SmallVector\< T,\l N \>, SmallDenseMap\l\< T, ptrdiff_t \> \>" ,fontname="Helvetica"];
  Node6 [label="llvm::PriorityWorklist\l\< T, VectorT, MapT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PriorityWorklist.html",tooltip="A FILO worklist that prioritizes on re-insertion without duplication."];
  Node7 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CWorklist" ,fontname="Helvetica"];
  Node7 [label="llvm::SmallPriorityWorklist\l\< llvm::LazyCallGraph::SCC *, 1 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallPriorityWorklist.html",tooltip=" "];
  Node8 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="llvm::PriorityWorklist\l\< T, VectorT, MapT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PriorityWorklist.html",tooltip="A FILO worklist that prioritizes on re-insertion without duplication."];
  Node4 -> Node7 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::LazyCallGraph\l::SCC *, 1 \>" ,fontname="Helvetica"];
  Node9 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InvalidatedRefSCCs" ,fontname="Helvetica"];
  Node9 [label="llvm::SmallPtrSetImpl\l\< llvm::LazyCallGraph\l::RefSCC * \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallPtrSetImpl.html",tooltip=" "];
  Node10 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="llvm::SmallPtrSetImplBase",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallPtrSetImplBase.html",tooltip="SmallPtrSetImplBase - This is the common code shared among all the SmallPtrSet<>'s,..."];
  Node11 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="llvm::DebugEpochBase",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DebugEpochBase.html",tooltip=" "];
  Node12 -> Node10 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CurArray\nSmallArray" ,fontname="Helvetica"];
  Node12 [label="const void **",height=0.2,width=0.4,color="black",tooltip=" "];
  Node13 -> Node10 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CurArraySize\nNumNonEmpty\nNumTombstones" ,fontname="Helvetica"];
  Node13 [label="unsigned",height=0.2,width=0.4,color="black",URL="$classunsigned.html",tooltip=" "];
  Node14 -> Node9 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::LazyCallGraph\l::RefSCC * \>" ,fontname="Helvetica"];
  Node14 [label="llvm::SmallPtrSetImpl\l\< PtrType \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallPtrSetImpl.html",tooltip="A templated base class for SmallPtrSet which provides the typesafe interface that is common across al..."];
  Node10 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InvalidatedSCCs" ,fontname="Helvetica"];
  Node15 [label="llvm::SmallPtrSetImpl\l\< llvm::LazyCallGraph\l::SCC * \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallPtrSetImpl.html",tooltip=" "];
  Node10 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 -> Node15 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::LazyCallGraph\l::SCC * \>" ,fontname="Helvetica"];
  Node16 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" UpdatedRC" ,fontname="Helvetica"];
  Node16 [label="llvm::LazyCallGraph\l::RefSCC",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LazyCallGraph_1_1RefSCC.html",tooltip="A RefSCC of the call graph."];
  Node17 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" UpdatedC" ,fontname="Helvetica"];
  Node17 [label="llvm::LazyCallGraph::SCC",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LazyCallGraph_1_1SCC.html",tooltip="An SCC of the call graph."];
  Node18 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CrossSCCPA" ,fontname="Helvetica"];
  Node18 [label="llvm::PreservedAnalyses",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PreservedAnalyses.html",tooltip="A set of analyses that are preserved following a run of a transformation pass."];
  Node19 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlinedInternalEdges" ,fontname="Helvetica"];
  Node19 [label="llvm::SmallDenseSet\l\< std::pair\< llvm::LazyCall\lGraph::Node *, llvm::LazyCallGraph\l::SCC * \>, 4 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallDenseSet.html",tooltip=" "];
  Node20 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="llvm::detail::DenseSetImpl\l\< ValueT, MapTy, ValueInfoT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1detail_1_1DenseSetImpl.html",tooltip="Base class for DenseSet and DenseSmallSet."];
  Node21 -> Node19 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< std::pair\< llvm::\lLazyCallGraph::Node\l *, llvm::LazyCallGraph\l::SCC * \>, 4 \>" ,fontname="Helvetica"];
  Node21 [label="llvm::SmallDenseSet\l\< ValueT, InlineBuckets,\l ValueInfoT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallDenseSet.html",tooltip="Implements a dense probed hash-table based set with some number of buckets stored inline."];
  Node22 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="llvm::detail::DenseSetImpl\l\< ValueT, MapTy, ValueInfoT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1detail_1_1DenseSetImpl.html",tooltip="Base class for DenseSet and DenseSmallSet."];
}
