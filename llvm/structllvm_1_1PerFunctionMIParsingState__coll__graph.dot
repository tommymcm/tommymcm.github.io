digraph "llvm::PerFunctionMIParsingState"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape="box"];
  rankdir="LR";
  Node1 [label="llvm::PerFunctionMIParsing\lState",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Allocator" ,fontname="Helvetica"];
  Node2 [label="llvm::BumpPtrAllocatorImpl\l\< AllocatorT, SlabSize,\l SizeThreshold \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BumpPtrAllocatorImpl.html",tooltip="Allocate memory in an ever growing pool, as if by bump-pointer."];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="llvm::AllocatorBase\l\< DerivedT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AllocatorBase.html",tooltip="CRTP base class providing obvious overloads for the core Allocate() methods of LLVM-style allocators."];
  Node4 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MF" ,fontname="Helvetica"];
  Node4 [label="llvm::MachineFunction",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineFunction.html",tooltip=" "];
  Node5 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" VariableDbgInfos" ,fontname="Helvetica"];
  Node5 [label="llvm::SmallVector\<\l VariableDbgInfo, 4 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node6 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="llvm::SmallVectorImpl\< T \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip="This class consists of common code factored out of the SmallVector class to reduce code duplication b..."];
  Node7 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="llvm::SmallVectorTemplate\lBase\< T, bool \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorTemplateBase.html",tooltip="SmallVectorTemplateBase<TriviallyCopyable = false> - This is where we put method implementations that..."];
  Node8 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="llvm::SmallVectorTemplate\lCommon\< T, typename \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorTemplateCommon.html",tooltip="This is the part of SmallVectorTemplateBase which does not depend on whether the type T is a POD."];
  Node9 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="llvm::SmallVectorBase",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorBase.html",tooltip="This is all the non-templated stuff common to all SmallVectors."];
  Node10 -> Node9 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BeginX" ,fontname="Helvetica"];
  Node10 [label="void *",height=0.2,width=0.4,color="black",tooltip=" "];
  Node11 -> Node9 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Capacity\nSize" ,fontname="Helvetica"];
  Node11 [label="unsigned",height=0.2,width=0.4,color="black",URL="$classunsigned.html",tooltip=" "];
  Node12 -> Node5 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="llvm::SmallVectorStorage\l\< T, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip="Storage for the SmallVector elements."];
  Node13 -> Node12 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node13 [label="llvm::AlignedCharArrayUnion\< T \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1AlignedCharArrayUnion.html",tooltip=" "];
  Node14 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="llvm::AlignedCharArray\l\< Alignment, Size \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1AlignedCharArray.html",tooltip="Helper for building an aligned character array type."];
  Node15 -> Node14 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" buffer" ,fontname="Helvetica"];
  Node15 [label="char",height=0.2,width=0.4,color="black",URL="$classchar.html",tooltip=" "];
  Node16 -> Node13 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< T \>" ,fontname="Helvetica"];
  Node16 [label="llvm::AlignedCharArrayUnion\l\< T1, T2, T3, T4, T5, T6,\l T7, T8, T9, T10 \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1AlignedCharArrayUnion.html",tooltip="This union template exposes a suitably aligned and sized character array member which can hold elemen..."];
  Node17 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="llvm::AlignedCharArray\l\< Alignment, Size \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1AlignedCharArray.html",tooltip="Helper for building an aligned character array type."];
  Node15 -> Node17 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" buffer" ,fontname="Helvetica"];
  Node18 -> Node5 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< VariableDbgInfo, 4 \>" ,fontname="Helvetica"];
  Node18 [label="llvm::SmallVector\<\l T, N \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip="This is a 'vector' (really, a variable-sized array), optimized for the case when the array is small."];
  Node19 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="llvm::SmallVectorImpl\< T \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip="This class consists of common code factored out of the SmallVector class to reduce code duplication b..."];
  Node7 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 -> Node18 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="llvm::SmallVectorStorage\l\< T, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip="Storage for the SmallVector elements."];
  Node13 -> Node20 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node21 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SM" ,fontname="Helvetica"];
  Node21 [label="llvm::SourceMgr",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SourceMgr.html",tooltip="This owns the files read by a parser, handles include stacks, and handles diagnostic wrangling."];
  Node22 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" IRSlots" ,fontname="Helvetica"];
  Node22 [label="llvm::SlotMapping",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SlotMapping.html",tooltip="This struct contains the mappings from the slot numbers to unnamed metadata nodes,..."];
  Node23 -> Node22 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" GlobalValues" ,fontname="Helvetica"];
  Node23 [label="vector\< llvm::GlobalValue * \>",height=0.2,width=0.4,color="black",tooltip=" "];
  Node24 -> Node22 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MetadataNodes" ,fontname="Helvetica"];
  Node24 [label="map\< unsigned, llvm\l::TypedTrackingMDRef \>",height=0.2,width=0.4,color="black",tooltip=" "];
  Node25 -> Node22 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NamedTypes" ,fontname="Helvetica"];
  Node25 [label="llvm::StringMap\< llvm\l::Type * \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1StringMap.html",tooltip=" "];
  Node26 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="llvm::StringMapImpl",height=0.2,width=0.4,color="black",URL="$classllvm_1_1StringMapImpl.html",tooltip="StringMapImpl - This is the base class of StringMap that is shared among all of its instantiations."];
  Node27 -> Node26 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TheTable" ,fontname="Helvetica"];
  Node27 [label="llvm::StringMapEntryBase",height=0.2,width=0.4,color="black",URL="$classllvm_1_1StringMapEntryBase.html",tooltip="StringMapEntryBase - Shared base class of StringMapEntry instances."];
  Node11 -> Node26 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ItemSize\nNumBuckets\nNumItems\nNumTombstones" ,fontname="Helvetica"];
  Node28 -> Node25 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::Type * \>" ,fontname="Helvetica"];
  Node28 [label="llvm::StringMap\< ValueTy,\l AllocatorTy \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1StringMap.html",tooltip="StringMap - This is an unconventional map that is specialized for handling keys that are \"strings\",..."];
  Node26 -> Node28 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 -> Node22 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Types" ,fontname="Helvetica"];
  Node29 [label="map\< unsigned, llvm\l::Type * \>",height=0.2,width=0.4,color="black",tooltip=" "];
  Node30 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Target" ,fontname="Helvetica"];
  Node30 [label="llvm::PerTargetMIParsing\lState",height=0.2,width=0.4,color="black",URL="$structllvm_1_1PerTargetMIParsingState.html",tooltip=" "];
  Node31 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MBBSlots" ,fontname="Helvetica"];
  Node31 [label="llvm::DenseMap\< unsigned,\l llvm::MachineBasicBlock * \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DenseMap.html",tooltip=" "];
  Node32 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node32 [label="llvm::DenseMapBase\l\< DerivedT, KeyT, ValueT,\l KeyInfoT, BucketT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DenseMapBase.html",tooltip=" "];
  Node33 -> Node32 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 [label="llvm::DebugEpochBase",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DebugEpochBase.html",tooltip=" "];
  Node34 -> Node31 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< unsigned, llvm::Machine\lBasicBlock * \>" ,fontname="Helvetica"];
  Node34 [label="llvm::DenseMap\< KeyT,\l ValueT, KeyInfoT, BucketT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DenseMap.html",tooltip=" "];
  Node35 -> Node34 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node35 [label="llvm::DenseMapBase\l\< DerivedT, KeyT, ValueT,\l KeyInfoT, BucketT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DenseMapBase.html",tooltip=" "];
  Node33 -> Node35 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node36 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" VRegInfos" ,fontname="Helvetica"];
  Node36 [label="llvm::DenseMap\< unsigned,\l llvm::VRegInfo * \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DenseMap.html",tooltip=" "];
  Node37 -> Node36 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node37 [label="llvm::DenseMapBase\l\< DerivedT, KeyT, ValueT,\l KeyInfoT, BucketT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DenseMapBase.html",tooltip=" "];
  Node33 -> Node37 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node34 -> Node36 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< unsigned, llvm::VRegInfo * \>" ,fontname="Helvetica"];
  Node38 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" VRegInfosNamed" ,fontname="Helvetica"];
  Node38 [label="llvm::StringMap\< llvm\l::VRegInfo * \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1StringMap.html",tooltip=" "];
  Node26 -> Node38 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 -> Node38 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::VRegInfo * \>" ,fontname="Helvetica"];
  Node39 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" FixedStackObjectSlots\nStackObjectSlots" ,fontname="Helvetica"];
  Node39 [label="llvm::DenseMap\< unsigned,\l int \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DenseMap.html",tooltip=" "];
  Node40 -> Node39 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node40 [label="llvm::DenseMapBase\l\< DerivedT, KeyT, ValueT,\l KeyInfoT, BucketT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DenseMapBase.html",tooltip=" "];
  Node33 -> Node40 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node34 -> Node39 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< unsigned, int \>" ,fontname="Helvetica"];
  Node41 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ConstantPoolSlots\nJumpTableSlots" ,fontname="Helvetica"];
  Node41 [label="llvm::DenseMap\< unsigned,\l unsigned \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DenseMap.html",tooltip=" "];
  Node42 -> Node41 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node42 [label="llvm::DenseMapBase\l\< DerivedT, KeyT, ValueT,\l KeyInfoT, BucketT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DenseMapBase.html",tooltip=" "];
  Node33 -> Node42 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node34 -> Node41 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< unsigned, unsigned \>" ,fontname="Helvetica"];
}
