digraph "llvm::GenericScheduler"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape="box"];
  rankdir="LR";
  Node1 [label="llvm::GenericScheduler",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="GenericScheduler shrinks the unscheduled zone using heuristics to balance the schedule."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="llvm::GenericSchedulerBase",height=0.2,width=0.4,color="black",URL="$classllvm_1_1GenericSchedulerBase.html",tooltip="Base class for GenericScheduler."];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="llvm::MachineSchedStrategy",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineSchedStrategy.html",tooltip="MachineSchedStrategy - Interface to the scheduling algorithm used by ScheduleDAGMI."];
  Node4 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Context" ,fontname="Helvetica"];
  Node4 [label="llvm::MachineSchedContext",height=0.2,width=0.4,color="black",URL="$structllvm_1_1MachineSchedContext.html",tooltip="MachineSchedContext provides enough context from the MachineScheduler pass for the target to instanti..."];
  Node5 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MF" ,fontname="Helvetica"];
  Node5 [label="llvm::MachineFunction",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineFunction.html",tooltip=" "];
  Node6 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" VariableDbgInfos" ,fontname="Helvetica"];
  Node6 [label="llvm::SmallVector\<\l VariableDbgInfo, 4 \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node22 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MLI" ,fontname="Helvetica"];
  Node22 [label="llvm::MachineLoopInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineLoopInfo.html",tooltip=" "];
  Node23 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="llvm::MachineFunctionPass",height=0.2,width=0.4,color="red",URL="$classllvm_1_1MachineFunctionPass.html",tooltip="MachineFunctionPass - This class adapts the FunctionPass interface to allow convenient creation of pa..."];
  Node16 -> Node22 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ID" ,fontname="Helvetica"];
  Node16 [label="char",height=0.2,width=0.4,color="black",URL="$classchar.html",tooltip=" "];
  Node26 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MDT" ,fontname="Helvetica"];
  Node26 [label="llvm::MachineDominatorTree",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineDominatorTree.html",tooltip="DominatorTree Class - Concrete subclass of DominatorTreeBase that is used to compute a normal dominat..."];
  Node23 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 -> Node26 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ID" ,fontname="Helvetica"];
  Node27 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" PassConfig" ,fontname="Helvetica"];
  Node27 [label="llvm::TargetPassConfig",height=0.2,width=0.4,color="black",URL="$classllvm_1_1TargetPassConfig.html",tooltip="Target-Independent Code Generator Pass Configuration Options."];
  Node28 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="llvm::ImmutablePass",height=0.2,width=0.4,color="red",URL="$classllvm_1_1ImmutablePass.html",tooltip="ImmutablePass class - This class is used to provide information that does not need to be run."];
  Node30 -> Node27 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TM" ,fontname="Helvetica"];
  Node30 [label="llvm::LLVMTargetMachine",height=0.2,width=0.4,color="red",URL="$classllvm_1_1LLVMTargetMachine.html",tooltip="This class describes a target machine that is implemented with the LLVM target-independent code gener..."];
  Node57 -> Node27 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Impl" ,fontname="Helvetica"];
  Node57 [label="llvm::PassConfigImpl",height=0.2,width=0.4,color="red",URL="$classllvm_1_1PassConfigImpl.html",tooltip=" "];
  Node54 -> Node27 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DisableVerify\nEnableTailMerge\nInitialized\nRequireCodeGenSCCOrder" ,fontname="Helvetica"];
  Node54 [label="bool",height=0.2,width=0.4,color="black",URL="$classbool.html",tooltip=" "];
  Node16 -> Node27 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ID" ,fontname="Helvetica"];
  Node66 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AA" ,fontname="Helvetica"];
  Node66 [label="llvm::AAResults",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AAResults.html",tooltip=" "];
  Node67 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LIS" ,fontname="Helvetica"];
  Node67 [label="llvm::LiveIntervals",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LiveIntervals.html",tooltip=" "];
  Node23 -> Node67 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 -> Node67 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ID" ,fontname="Helvetica"];
  Node68 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" RegClassInfo" ,fontname="Helvetica"];
  Node68 [label="llvm::RegisterClassInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1RegisterClassInfo.html",tooltip=" "];
  Node69 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SchedModel" ,fontname="Helvetica"];
  Node69 [label="llvm::TargetSchedModel",height=0.2,width=0.4,color="black",URL="$classllvm_1_1TargetSchedModel.html",tooltip="Provide an instruction scheduling machine model to CodeGen passes."];
  Node70 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TRI" ,fontname="Helvetica"];
  Node70 [label="llvm::TargetRegisterInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1TargetRegisterInfo.html",tooltip="TargetRegisterInfo base class - We assume that the target defines a static array of TargetRegisterDes..."];
  Node71 -> Node70 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node71 [label="llvm::MCRegisterInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MCRegisterInfo.html",tooltip="MCRegisterInfo base class - We assume that the target defines a static array of MCRegisterDesc object..."];
  Node72 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Rem" ,fontname="Helvetica"];
  Node72 [label="llvm::SchedRemainder",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SchedRemainder.html",tooltip="Summarize the unscheduled region."];
  Node12 -> Node72 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CriticalPath\nCyclicCritPath\nRemIssueCount" ,fontname="Helvetica"];
  Node12 [label="unsigned",height=0.2,width=0.4,color="black",URL="$classunsigned.html",tooltip=" "];
  Node54 -> Node72 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" IsAcyclicLatencyLimited" ,fontname="Helvetica"];
  Node73 -> Node72 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" RemainingCounts" ,fontname="Helvetica"];
  Node73 [label="llvm::SmallVector\<\l unsigned, 16 \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node74 -> Node73 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node74 [label="llvm::SmallVectorImpl\< T \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SmallVectorImpl.html",tooltip="This class consists of common code factored out of the SmallVector class to reduce code duplication b..."];
  Node75 -> Node73 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node75 [label="llvm::SmallVectorStorage\l\< T, N \>",height=0.2,width=0.4,color="red",URL="$structllvm_1_1SmallVectorStorage.html",tooltip="Storage for the SmallVector elements."];
  Node76 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DAG" ,fontname="Helvetica"];
  Node76 [label="llvm::ScheduleDAGMILive",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ScheduleDAGMILive.html",tooltip="ScheduleDAGMILive is an implementation of ScheduleDAGInstrs that schedules machine instructions while..."];
  Node77 -> Node76 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node77 [label="llvm::ScheduleDAGMI",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ScheduleDAGMI.html",tooltip="ScheduleDAGMI is an implementation of ScheduleDAGInstrs that simply schedules machine instructions ac..."];
  Node78 -> Node77 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node78 [label="llvm::ScheduleDAGInstrs",height=0.2,width=0.4,color="red",URL="$classllvm_1_1ScheduleDAGInstrs.html",tooltip="A ScheduleDAG for scheduling lists of MachineInstr."];
  Node22 -> Node78 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MLI" ,fontname="Helvetica"];
  Node69 -> Node78 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SchedModel" ,fontname="Helvetica"];
  Node54 -> Node78 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CanHandleTerminators\nRemoveKillFlags\nTrackLaneMasks" ,fontname="Helvetica"];
  Node111 -> Node78 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" RegionBegin\nRegionEnd" ,fontname="Helvetica"];
  Node111 [label="llvm::MachineInstrBundle\lIterator\< MachineInstr \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineInstrBundleIterator.html",tooltip=" "];
  Node112 -> Node111 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node112 [label="llvm::MachineInstrBundle\lIteratorHelper\< IsReverse \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1MachineInstrBundleIteratorHelper.html",tooltip=" "];
  Node113 -> Node111 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< MachineInstr \>" ,fontname="Helvetica"];
  Node113 [label="llvm::MachineInstrBundle\lIterator\< Ty, IsReverse \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineInstrBundleIterator.html",tooltip="MachineBasicBlock iterator that automatically skips over MIs that are inside bundles (i...."];
  Node112 -> Node113 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 -> Node78 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NumRegionInstrs" ,fontname="Helvetica"];
  Node118 -> Node78 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CurrentVRegDefs" ,fontname="Helvetica"];
  Node118 [label="llvm::SparseMultiSet\l\< VReg2SUnit, VirtReg2Index\lFunctor \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SparseMultiSet.html",tooltip=" "];
  Node117 -> Node118 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< VReg2SUnit, VirtReg2Index\lFunctor \>" ,fontname="Helvetica"];
  Node117 [label="llvm::SparseMultiSet\l\< ValueT, KeyFunctorT,\l SparseT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SparseMultiSet.html",tooltip="Fast multiset implementation for objects that can be identified by small unsigned keys."];
  Node66 -> Node78 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AAForDep" ,fontname="Helvetica"];
  Node84 -> Node78 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BarrierChain" ,fontname="Helvetica"];
  Node84 [label="llvm::SUnit",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SUnit.html",tooltip="Scheduling unit. This is a node in the scheduling DAG."];
  Node84 -> Node84 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" OrigNode" ,fontname="Helvetica"];
  Node12 -> Node84 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BotReadyCycle\nLatency\nNodeNum\nNodeQueueId\nNumPreds\nNumPredsLeft\nNumRegDefsLeft\nNumSuccs\nNumSuccsLeft\nTopReadyCycle\n..." ,fontname="Helvetica"];
  Node54 -> Node84 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" hasPhysRegClobbers\nhasPhysRegDefs\nhasPhysRegUses\nhasReservedResource\nisAvailable\nisCall\nisCallOp\nisCloned\nisCommutable\nisPending\n..." ,fontname="Helvetica"];
  Node66 -> Node77 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AA" ,fontname="Helvetica"];
  Node67 -> Node77 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LIS" ,fontname="Helvetica"];
  Node131 -> Node77 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SchedImpl" ,fontname="Helvetica"];
  Node131 [label="unique_ptr\< llvm::Machine\lSchedStrategy \>",height=0.2,width=0.4,color="black",tooltip=" "];
  Node132 -> Node77 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Mutations" ,fontname="Helvetica"];
  Node132 [label="vector\< std::unique\l_ptr\< llvm::ScheduleDAGMutation \> \>",height=0.2,width=0.4,color="black",tooltip=" "];
  Node111 -> Node77 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CurrentBottom\nCurrentTop" ,fontname="Helvetica"];
  Node84 -> Node77 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NextClusterPred\nNextClusterSucc" ,fontname="Helvetica"];
  Node12 -> Node77 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NumInstrsScheduled" ,fontname="Helvetica"];
  Node68 -> Node76 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" RegClassInfo" ,fontname="Helvetica"];
  Node133 -> Node76 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DFSResult" ,fontname="Helvetica"];
  Node133 [label="llvm::SchedDFSResult",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SchedDFSResult.html",tooltip="Compute the values of each DAG node for various metrics during DFS."];
  Node134 -> Node76 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ScheduledTrees" ,fontname="Helvetica"];
  Node134 [label="llvm::BitVector",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BitVector.html",tooltip=" "];
  Node111 -> Node76 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LiveRegionEnd" ,fontname="Helvetica"];
  Node118 -> Node76 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" VRegUses" ,fontname="Helvetica"];
  Node135 -> Node76 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SUPressureDiffs" ,fontname="Helvetica"];
  Node135 [label="llvm::PressureDiffs",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PressureDiffs.html",tooltip="Array of PressureDiffs."];
  Node54 -> Node76 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DisconnectedComponentsRenamed\nShouldTrackLaneMasks\nShouldTrackPressure" ,fontname="Helvetica"];
  Node136 -> Node76 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BotPressure\nRegPressure\nTopPressure" ,fontname="Helvetica"];
  Node136 [label="llvm::IntervalPressure",height=0.2,width=0.4,color="black",URL="$structllvm_1_1IntervalPressure.html",tooltip="RegisterPressure computed within a region of instructions delimited by TopIdx and BottomIdx."];
  Node137 -> Node136 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node137 [label="llvm::RegisterPressure",height=0.2,width=0.4,color="red",URL="$structllvm_1_1RegisterPressure.html",tooltip="Base class for register pressure results."];
  Node142 -> Node136 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BottomIdx\nTopIdx" ,fontname="Helvetica"];
  Node142 [label="llvm::SlotIndex",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SlotIndex.html",tooltip="SlotIndex - An opaque wrapper around machine indexes."];
  Node143 -> Node76 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BotRPTracker\nRPTracker\nTopRPTracker" ,fontname="Helvetica"];
  Node143 [label="llvm::RegPressureTracker",height=0.2,width=0.4,color="black",URL="$classllvm_1_1RegPressureTracker.html",tooltip="Track the current register pressure at some position in the instruction stream, and remember the high..."];
  Node144 -> Node76 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" RegionCriticalPSets" ,fontname="Helvetica"];
  Node144 [label="vector\< llvm::PressureChange \>",height=0.2,width=0.4,color="black",tooltip=" "];
  Node145 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" RegionPolicy" ,fontname="Helvetica"];
  Node145 [label="llvm::MachineSchedPolicy",height=0.2,width=0.4,color="black",URL="$structllvm_1_1MachineSchedPolicy.html",tooltip="Define a generic scheduling policy for targets that don't provide their own MachineSchedStrategy."];
  Node54 -> Node145 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DisableLatencyHeuristic\nOnlyBottomUp\nOnlyTopDown\nShouldTrackLaneMasks\nShouldTrackPressure" ,fontname="Helvetica"];
  Node146 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Bot\nTop" ,fontname="Helvetica"];
  Node146 [label="llvm::SchedBoundary",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SchedBoundary.html",tooltip="Each Scheduling boundary is associated with ready queues."];
  Node77 -> Node146 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DAG" ,fontname="Helvetica"];
  Node69 -> Node146 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SchedModel" ,fontname="Helvetica"];
  Node72 -> Node146 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Rem" ,fontname="Helvetica"];
  Node147 -> Node146 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Available\nPending" ,fontname="Helvetica"];
  Node147 [label="llvm::ReadyQueue",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ReadyQueue.html",tooltip="Helpers for implementing custom MachineSchedStrategy classes."];
  Node148 -> Node146 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" HazardRec" ,fontname="Helvetica"];
  Node148 [label="llvm::ScheduleHazardRecognizer",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ScheduleHazardRecognizer.html",tooltip="HazardRecognizer - This determines whether or not an instruction can be issued this cycle,..."];
  Node12 -> Node148 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MaxLookAhead" ,fontname="Helvetica"];
  Node149 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BotCand\nTopCand" ,fontname="Helvetica"];
  Node149 [label="SchedCandidate",height=0.2,width=0.4,color="black",tooltip=" "];
}
